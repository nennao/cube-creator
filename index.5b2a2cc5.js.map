{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-f7c51d13d10d1e37.js","src/js/gl.ts","node_modules/gl-matrix/esm/common.js","node_modules/gl-matrix/esm/mat4.js","node_modules/gl-matrix/esm/vec3.js","src/js/utils.ts","src/js/camera.ts","src/js/shader.ts","shaders/vs_source.glsl","shaders/fs_source.glsl","lib/pbr/renderer/shaders/cubemap.vert","lib/pbr/renderer/shaders/cubemap.frag","node_modules/gl-matrix/esm/mat3.js","node_modules/gl-matrix/esm/vec2.js","lib/hdrpng/index.js","lib/ibl_sampler/shaders/fullscreen.vert","lib/ibl_sampler/index.js","lib/ibl_sampler/shaders/ibl_filtering.frag","lib/ibl_sampler/shaders/panorama_to_cubemap.frag","node_modules/@parcel/runtime-js/lib/runtime-1be9a1628e89c265.js","node_modules/@parcel/runtime-js/lib/runtime-25c3a97ad660d8a6.js","node_modules/@parcel/runtime-js/lib/runtime-34683665bb3acb5d.js","lib/pbr/renderer/resource_handler.ts","lib/solver/index.js","src/js/asyncSolver.ts","src/js/buffer.ts","src/js/geometry.ts","src/js/presets.ts","src/js/shapes.ts","src/js/rubik.ts","node_modules/@parcel/runtime-js/lib/runtime-bd59e2bfffbd47bb.js","lib/pbr/renderer/environment_renderer.ts","lib/pbr/renderer/pbr_shader.ts","lib/pbr/renderer/vert.min.vert","lib/pbr/renderer/frag.min.frag","src/js/scene.ts","src/js/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"avsrH\\\":\\\"index.5b2a2cc5.js\\\",\\\"gTDnR\\\":\\\"MetalSpotty.d34b70f1.jpg\\\",\\\"gnyTy\\\":\\\"ScratchedNormal.bea72ab7.png\\\",\\\"dvABv\\\":\\\"metal_0026.790c16f8.png\\\",\\\"7lL8B\\\":\\\"Colorful_Studio.255f92d9.hdr\\\"}\"));","function initGL(canvas: HTMLCanvasElement): WebGL2RenderingContext | null {\n  const gl: WebGL2RenderingContext | null = canvas.getContext(\"webgl2\", { alpha: false, antialias: true });\n\n  if (gl == null) {\n    alert(\"Unable to initialize WebGL2. Your browser or machine may not support it.\");\n    return null;\n  }\n  // gl.enable(gl.BLEND);\n  // gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  gl.enable(gl.CULL_FACE);\n  return gl;\n}\n\nexport class CanvasHandler {\n  private readonly gl: WebGL2RenderingContext | null = null;\n  private readonly canvas: HTMLCanvasElement | null = null;\n\n  constructor(canvasId: string) {\n    const canvas: HTMLElement | null = document.getElementById(canvasId);\n    if (canvas == null || !(canvas instanceof HTMLCanvasElement)) {\n      return;\n    }\n    this.canvas = canvas;\n    this.gl = initGL(this.canvas);\n    this.onWindowResize();\n  }\n\n  getGL(): WebGL2RenderingContext | null {\n    return this.gl;\n  }\n\n  getCanvas(): HTMLCanvasElement | null {\n    return this.canvas;\n  }\n\n  onWindowResize() {\n    if (this.canvas && this.gl) {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      const gl = this.gl;\n      const canvas = this.canvas;\n\n      canvas.width = width * window.devicePixelRatio;\n      canvas.height = height * window.devicePixelRatio;\n\n      canvas.style.width = \"\" + width + \"px\";\n      canvas.style.height = \"\" + height + \"px\";\n\n      gl.viewport(0, 0, canvas.width, canvas.height);\n    }\n  }\n}\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { mat3, mat4, vec3 } from \"gl-matrix\";\n\nexport function mR(x: number, dp: number = 0) {\n  return Math.round((x + Number.EPSILON) * Math.pow(10, dp)) / Math.pow(10, dp);\n}\n\nexport function rad(deg: number) {\n  return (deg * Math.PI) / 180;\n}\n\nexport function deg(rad: number) {\n  return (rad * 180) / Math.PI;\n}\n\nexport function acosC(val: number) {\n  return Math.acos(clamp(val, -1, 1));\n}\n\nexport function randInt(x: number) {\n  return Math.floor(Math.random() * x);\n}\n\nexport function randExp(lambda: number) {\n  const xScale = 1 / (1 - Math.exp(-lambda));\n  return Math.log(1 - Math.random() / xScale) / -lambda;\n}\n\nexport function clamp(n: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, n));\n}\n\nexport function min<T>(a: T[], key: (k: T) => number) {\n  return a.reduce((x, y) => (key(x) < key(y) ? x : y));\n}\n\nexport function max<T>(a: T[], key: (k: T) => number) {\n  return a.reduce((x, y) => (key(x) > key(y) ? x : y));\n}\n\nexport function divmod(a: number, b: number): [number, number] {\n  return [Math.floor(a / b), a % b];\n}\n\nexport function shuffle<T>(array: T[], inPlace = false): T[] {\n  if (!inPlace) {\n    array = [...array];\n  }\n  let m = array.length;\n  let i: number;\n  let t;\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n  return array;\n}\n\nexport function sort<T>(array: T[], key?: (a: T, b: T) => number, inPlace = false): T[] {\n  if (!inPlace) {\n    array = [...array];\n  }\n  key ? array.sort(key) : array.sort();\n  return array;\n}\n\nexport function sortNum(array: number[], key = (a: number, b: number) => a - b, inPlace = false) {\n  return sort(array, key, inPlace);\n}\n\nexport function arrayUniqueVals<T>(arr: T[]) {\n  return arr.filter((val, i, arr) => arr.indexOf(val) == i);\n}\n\nexport function arrayIntersect<T>(arr1: T[], arr2: T[]) {\n  return arrayUniqueVals(arr1.filter((val) => arr2.includes(val)));\n}\n\nexport function arrayRange(len: number, start = 0) {\n  return Array.from({ length: len }, (_, i) => i + start);\n}\n\nexport function zip<T1, T2>(arr1: T1[], arr2: T2[]) {\n  return arr1.map((a, i): [T1, T2] => [a, arr2[i]]);\n}\n\nexport function getElementById(id: string) {\n  const el = document.getElementById(id);\n  if (!el) throw `element \"${id}\" not found`;\n  return el;\n}\n\nexport function getInputById(id: string) {\n  const el = getElementById(id);\n  if (el instanceof HTMLInputElement) {\n    return el;\n  }\n  throw `input element \"${id}\" not found`;\n}\n\nexport function targetListener(listener: (t: HTMLInputElement) => void) {\n  return (e: Event) => {\n    listener(e.target as HTMLInputElement);\n  };\n}\n\ntype InputEvents = \"onclick\" | \"onchange\" | \"oninput\";\n\nexport function handleInputById(id: string, val: string | boolean, type: InputEvents, listener: (e: Event) => void) {\n  const el = document.getElementById(id);\n  if (el instanceof HTMLInputElement) {\n    typeof val == \"boolean\" ? (el.checked = val) : (el.value = val);\n    el[type] = listener;\n  } else {\n    console.warn(`cant find input with id ${id}`);\n  }\n}\n\nexport function handleButtonById(id: string, type: InputEvents, listener: (e: Event) => void) {\n  const el = document.getElementById(id);\n  if (el instanceof HTMLButtonElement || el instanceof HTMLDivElement) {\n    el[type] = listener;\n  } else {\n    console.warn(`cant find button with id ${id}`);\n  }\n}\n\nexport function handleRadioByName(name: string, val: string | boolean, listener: (e: Event) => void) {\n  document.querySelectorAll(`input[name=${name}]`).forEach((n) => {\n    if (n instanceof HTMLInputElement) {\n      if (n.value == val) {\n        n.checked = true;\n      }\n      n.onclick = listener;\n    }\n  });\n}\n\nexport function handleFpsDisplay(dt: number, play: boolean) {\n  const fpsTxt = document.getElementById(\"fpsTxt\");\n  if (!fpsTxt) {\n    return;\n  }\n\n  fpsTxt.innerText = mR(1 / dt, 2).toString();\n  if (play) {\n    fpsTxt.classList.remove(\"faded\");\n  } else {\n    fpsTxt.classList.add(\"faded\");\n  }\n}\n\nexport type V2 = [number, number];\nexport type V3 = [number, number, number];\n\nexport function vec3ToV3(v: vec3): V3 {\n  return [v[0], v[1], v[2]];\n}\n\nexport type TriVec3 = [vec3, vec3, vec3];\n\nexport function getTriangles(vertices: V3[], indices: V3[]): TriVec3[] {\n  return Array.from(indices).map(([i0, i1, i2]) => [vertices[i0], vertices[i1], vertices[i2]]);\n}\n\nexport function transformTriangle(triangle: TriVec3, transform: mat4): TriVec3 {\n  const f = (t: vec3) => vec3.transformMat4(vec3.create(), t, transform);\n  return [f(triangle[0]), f(triangle[1]), f(triangle[2])];\n}\n\nexport function subdivideIndexRows(\n  row1: number[],\n  row2: number[],\n  subdivisions: number | number[],\n  positions: V3[],\n  splitEdges?: number[][]\n): [V3[][], number[][], number[][][]] {\n  const zipped = zip(row1, row2);\n\n  const newPositions = [];\n  const newSplitEdges: number[][][] = [];\n\n  const subsArr = Array.isArray(subdivisions)\n    ? subdivisions\n    : Array.from({ length: subdivisions }, (_, i) => (i + 1) / (subdivisions + 1));\n\n  for (let i of subsArr) {\n    newPositions.push(zipped.map(([i1, i2]) => vec3ToV3(vec3.lerp(vec3.create(), positions[i1], positions[i2], i))));\n    splitEdges && newSplitEdges.push(zipped.map(([i1, i2]) => arrayIntersect(splitEdges[i1], splitEdges[i2])));\n  }\n\n  const newIndices = Array.from(newPositions, (p, i) => arrayRange(p.length, positions.length + i * p.length));\n  return [newPositions, newIndices, newSplitEdges];\n}\n\nexport function indexRowsToTriangles(row1: number[], row2: number[], ring = false, rev = (_: number) => false): V3[] {\n  if (ring) {\n    row1 = [...row1, row1[0]];\n    row2 = [...row2, row2[0]];\n  }\n  return Array.from({ length: row1.length - 1 }, (_, i): [V3, V3] =>\n    rev(i)\n      ? [\n          [row1[i], row2[i], row2[i + 1]],\n          [row1[i], row2[i + 1], row1[i + 1]],\n        ]\n      : [\n          [row1[i], row2[i], row1[i + 1]],\n          [row1[i + 1], row2[i], row2[i + 1]],\n        ]\n  ).flat();\n}\n\nexport function indexRingToTriangles(row1: number[], row2: number[]): V3[] {\n  return indexRowsToTriangles(row1, row2, true);\n}\n\nexport function indexSectorToTriangles(sector: number[], circle = false): V3[] {\n  const center = sector[0];\n  if (circle) {\n    sector = [...sector, sector[1]];\n  }\n  return Array.from({ length: sector.length - 2 }, (_, i) => [center, sector[i + 1], sector[i + 2]]);\n}\n\nexport function indexCircleToTriangles(circle: number[]): V3[] {\n  return indexSectorToTriangles(circle, true);\n}\n\nfunction raySphere(p1: vec3, p2: vec3, center: vec3, r: number) {\n  // p1, p2 of the ray. center, r radius of sphere\n  const p = vec3.subtract(vec3.create(), p1, center);\n  const v = vec3.subtract(vec3.create(), p2, p1);\n\n  const a = vec3.dot(v, v);\n  const b = 2 * vec3.dot(p, v);\n  const c = vec3.dot(p, p) - r * r;\n\n  return b * b >= 4 * a * c;\n}\n\nexport function rayCubeSphere(p1: vec3, p2: vec3, center: vec3, side: number) {\n  // p1, p2 of the ray. center, side of cube\n  return raySphere(p1, p2, center, 0.5 * side * Math.sqrt(3));\n}\n\nexport function rayTriangle(p1: vec3, p2: vec3, triangle: TriVec3) {\n  const EPSILON = 0.0000001;\n\n  const [A, B, C] = triangle;\n\n  const dir = vec3.subtract(vec3.create(), p2, p1);\n\n  let e1, e2, h, s, q; // vec3s\n  let a, f, u, v; // floats\n\n  e1 = vec3.subtract(vec3.create(), B, A);\n  e2 = vec3.subtract(vec3.create(), C, A);\n\n  h = vec3.cross(vec3.create(), dir, e2);\n  a = vec3.dot(e1, h);\n  if (a > -EPSILON && a < EPSILON) {\n    return null;\n  }\n\n  f = 1.0 / a;\n  s = vec3.subtract(vec3.create(), p1, A);\n  u = f * vec3.dot(s, h);\n  if (u < 0.0 || u > 1.0) {\n    return null;\n  }\n\n  q = vec3.cross(vec3.create(), s, e1);\n  v = f * vec3.dot(dir, q);\n  if (v < 0.0 || u + v > 1.0) {\n    return null;\n  }\n\n  const t = f * vec3.dot(e2, q);\n  if (t > EPSILON) {\n    return vec3.add(vec3.create(), p1, vec3.scale(vec3.create(), dir, t));\n  }\n  return null;\n}\n\nexport function rayPlaneT(p1: vec3, pDir: vec3, center: vec3, normal: vec3) {\n  const EPSILON = 0.0000001;\n\n  const denom = vec3.dot(pDir, normal);\n\n  if (Math.abs(denom) > EPSILON) {\n    return vec3.dot(vec3.subtract(vec3.create(), center, p1), normal) / denom;\n  }\n  return -1;\n}\n\nexport function rayPlane(p1: vec3, p2: vec3, center: vec3, normal: vec3) {\n  const EPSILON = 0.0000001;\n\n  const pDir = vec3.subtract(vec3.create(), p2, p1);\n  vec3.normalize(pDir, pDir);\n\n  const t = rayPlaneT(p1, pDir, center, normal);\n  if (t > EPSILON) {\n    return vec3.add(vec3.create(), p1, vec3.scale(vec3.create(), pDir, t));\n  }\n  return null;\n}\n\nexport type ShallowNormalsInfo = {\n  normal: vec3;\n  normal1: vec3;\n  normal2: vec3;\n  a1: number;\n  a2: number;\n  rotAxis: vec3;\n  cameraDir: vec3;\n  prev: vec3;\n  prevDir: vec3;\n};\n\nexport function rayShallowPlane(p1: vec3, p2: vec3, center: vec3, shallowNormals: ShallowNormalsInfo) {\n  const EPSILON = 0.0000001;\n  const { normal1, normal2, a1, a2, rotAxis } = shallowNormals;\n\n  const pDir = vec3.subtract(vec3.create(), p2, p1);\n  vec3.normalize(pDir, pDir);\n\n  let t1 = rayPlaneT(p1, pDir, center, normal1);\n  let t2 = rayPlaneT(p1, pDir, center, normal2);\n\n  if (!(t1 > EPSILON || t2 > EPSILON)) {\n    console.warn(\"no ray plane (shallow) intersection\");\n    return null;\n  }\n\n  t1 = t1 > EPSILON ? t1 : Infinity;\n  t2 = t2 > EPSILON ? t2 : Infinity;\n\n  const [t, n, angle] = t1 < t2 ? [t1, normal1, -1 * a1] : [t2, normal2, -1 * a2];\n\n  const planeCamDirAdjust = vec3.cross(vec3.create(), n, [0, 0, 1]);\n  vec3.cross(planeCamDirAdjust, planeCamDirAdjust, n);\n  vec3.normalize(planeCamDirAdjust, planeCamDirAdjust);\n  vec3.scale(planeCamDirAdjust, planeCamDirAdjust, 0.5);\n\n  const intersection = vec3.add(vec3.create(), p1, vec3.scale(vec3.create(), pDir, t));\n  vec3.add(intersection, intersection, planeCamDirAdjust);\n\n  const intersectionDir = vec3.subtract(vec3.create(), intersection, center);\n\n  const adjusted = vec3.transformMat4(\n    vec3.create(),\n    intersectionDir,\n    mat4.fromRotation(mat4.create(), rad(angle), rotAxis)\n  );\n  vec3.add(adjusted, adjusted, center);\n  return adjusted;\n}\n\nexport function adjustMovePlaneCamAngle(\n  normal: vec3,\n  cameraDir: vec3\n): { normal: vec3; shallowNormals?: ShallowNormalsInfo } {\n  const angle = deg(acosC(vec3.dot(normal, cameraDir)));\n  const isObtuse = angle > 90;\n  const acute = isObtuse ? 180 - angle : angle;\n\n  const rotAxis = vec3.cross(vec3.create(), cameraDir, normal);\n  vec3.normalize(rotAxis, rotAxis);\n\n  const getNormal = (a: number) =>\n    vec3.transformMat4(vec3.create(), normal, mat4.fromRotation(mat4.create(), rad(a), rotAxis));\n\n  if (acute >= 85) {\n    const [a1, a2] = [30, -30];\n    const [normal1, normal2] = [getNormal(a1), getNormal(a2)];\n    const [prev, prevDir] = [vec3.create(), vec3.create()];\n    return { normal, shallowNormals: { normal, normal1, a1, normal2, a2, rotAxis, cameraDir, prev, prevDir } };\n  }\n\n  if (acute <= 45) {\n    return { normal };\n  }\n\n  const angleDiff = (isObtuse ? 1 : -1) * (acute - (11.25 + 0.75 * acute));\n  return { normal: getNormal(angleDiff) };\n}\n\nexport function easeInOut(x: number, xScale = 1, yScale = 1, alpha = 2) {\n  x = x / xScale;\n  const xa = x ** alpha;\n  const x1a = (1 - x) ** alpha;\n  return (yScale * xa) / (xa + x1a);\n}\n\nexport function normalToColor(n: vec3) {\n  return vec3ToV3(vec3.scale(vec3.create(), vec3.add(vec3.create(), n, [1, 1, 1]), 0.5));\n}\n\nexport function triangleToNormalColor(triangle: TriVec3) {\n  const e1 = vec3.sub(vec3.create(), triangle[1], triangle[0]);\n  const e2 = vec3.sub(vec3.create(), triangle[2], triangle[0]);\n\n  const normal = vec3.cross(vec3.create(), e1, e2);\n  return normalToColor(normal);\n}\n\nexport function convertToFacePositions(positions: V3[], indices: V3[]): [V3[], V3[]] {\n  const facePositions = [];\n  const faceIndices = [];\n\n  for (let i = 0; i < indices.length; i++) {\n    const newIndices: V3 = [i * 3, i * 3 + 1, i * 3 + 2];\n    const triangle = indices[i];\n    facePositions.push(...triangle.map((oldI) => positions[oldI]));\n    faceIndices.push(newIndices);\n  }\n  return [facePositions, faceIndices];\n}\n\nexport function mat3Rotation90(axis: \"x\" | \"y\" | \"z\", turns: number) {\n  turns %= 4;\n  let s = Math.round(Math.sin(rad(90 * turns)));\n  let c = Math.round(Math.cos(rad(90 * turns)));\n\n  // prettier-ignore\n  const mat:mat3 = axis == \"x\" ?\n    [ 1,  0,  0,\n      0,  c,  s,\n      0, -s,  c, ]\n  : axis == \"y\" ?\n    [ c,  0, -s,\n      0,  1,  0,\n      s,  0,  c, ]\n  :\n    [ c,  s,  0,\n     -s,  c,  0,\n      0,  0,  1, ]\n\n  return mat;\n}\n\nfunction rgbToHex(r: number, g: number, b: number) {\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\nexport function nRgbToHex(r: number, g: number, b: number) {\n  return rgbToHex(mR(r * 255), mR(g * 255), mR(b * 255));\n}\n\nfunction hexToRgb(hex: string, scale?: number): V3 {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result) {\n    console.warn(\"couldnt parse hex string:\", hex);\n    return [0, 0, 0];\n  }\n  return [\n    parseInt(result[1], 16) / (scale || 1),\n    parseInt(result[2], 16) / (scale || 1),\n    parseInt(result[3], 16) / (scale || 1),\n  ];\n}\n\nexport function hexToNRgb(hex: string): V3 {\n  return hexToRgb(hex, 255);\n}\n","import { mat4, vec3 } from \"gl-matrix\";\n\nimport { clamp, mR, rad } from \"./utils\";\n\nexport class Camera {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly up: vec3 = [0, 1, 0];\n  private readonly target: vec3 = [0, 0, 0];\n\n  private aspect = 1;\n  private readonly fov = rad(45);\n  private readonly zNear = 1;\n  private readonly zFar = 50.0;\n\n  readonly projectionMatrix = mat4.create();\n  readonly viewMatrix = mat4.create();\n\n  distance = 15;\n  angleX = 0;\n  angleY = 0;\n  position: vec3 = [0.0, 0.0, this.distance];\n\n  constructor(gl: WebGL2RenderingContext) {\n    this.gl = gl;\n    this.resize();\n    this.handleWheelZoom();\n  }\n\n  resize() {\n    this.aspect = this.gl.canvas.clientWidth / this.gl.canvas.clientHeight;\n  }\n\n  update() {\n    this.position = [0.0, 0.0, this.distance];\n\n    if (this.angleY) {\n      vec3.rotateX(this.position, this.position, [0, 0, 0], rad(this.angleY));\n    }\n    if (this.angleX) {\n      vec3.rotateY(this.position, this.position, [0, 0, 0], rad(this.angleX));\n    }\n\n    mat4.perspective(this.projectionMatrix, this.fov, this.aspect, this.zNear, this.zFar);\n    mat4.lookAt(this.viewMatrix, this.position, this.target, this.up);\n  }\n\n  mouseRotate(dx: number, dy: number) {\n    this.angleX += dx;\n    this.angleX %= 360;\n\n    this.angleY += dy;\n    this.angleY = clamp(this.angleY, -90, 90);\n  }\n\n  reset() {\n    this.angleX = 0;\n    this.angleY = 0;\n  }\n\n  get watcher() {\n    const watching = [this.aspect, this.distance, this.angleX, this.angleY];\n    return watching.join(\",\");\n  }\n\n  private clipXY(mouseX: number, mouseY: number): [number, number] {\n    const w2 = this.gl.canvas.clientWidth / 2,\n      h2 = this.gl.canvas.clientHeight / 2;\n    return [(mouseX - w2) / w2, (h2 - mouseY) / h2]; // -1 to 1\n  }\n\n  getPickedVector(x: number, y: number) {\n    const pf: vec3 = [...this.clipXY(x, y), 1];\n    const PV = mat4.multiply(mat4.create(), this.projectionMatrix, this.viewMatrix);\n    const invVP = mat4.invert(mat4.create(), PV);\n    return vec3.transformMat4(vec3.create(), pf, invVP);\n  }\n\n  handleZoom(delta: number) {\n    this.distance = mR(this.distance + delta, 3);\n    if (this.distance > 30) this.distance = 30;\n    if (this.distance < 8) this.distance = 8;\n  }\n\n  private handleWheelZoom() {\n    this.gl.canvas.addEventListener(\"wheel\", (e) => {\n      e.preventDefault();\n      this.handleZoom(e.deltaY * 0.025);\n    });\n  }\n}\n","import { Camera } from \"./camera\";\n\n// @ts-ignore\nimport VS_SRC from \"../../shaders/vs_source.glsl\";\n// @ts-ignore\nimport FS_SRC from \"../../shaders/fs_source.glsl\";\n\nexport class ShaderBase {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly program: WebGLProgram | null = null;\n  private readonly uniformLocations: { [key: string]: { type: GLenum; loc: WebGLUniformLocation } } = {};\n  private readonly attribLocations: { [key: string]: GLint } = {};\n\n  protected constructor(gl: WebGL2RenderingContext, vsSource: string, fsSource: string) {\n    this.gl = gl;\n\n    const vertexShader = this.createShader(gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = this.createShader(gl.FRAGMENT_SHADER, fsSource);\n\n    if (vertexShader && fragmentShader) {\n      this.program = this.createProgram(vertexShader, fragmentShader);\n      this.storeUniformAndAttribLocations();\n    }\n  }\n\n  private createShader(type: GLenum, source: string): WebGLShader | null {\n    const gl = this.gl;\n    if (!(type == gl.VERTEX_SHADER || type == gl.FRAGMENT_SHADER)) {\n      console.error(`${type} not acceptable for gl.createShader`);\n      return null;\n    }\n\n    const shader = this.gl.createShader(type);\n    if (shader == null) {\n      alert(\"An error occurred creating the shaders\");\n      return null;\n    }\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      alert(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(shader));\n      gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n\n  private createProgram(vertexShader: WebGLShader, fragmentShader: WebGLShader): WebGLProgram | null {\n    const gl = this.gl;\n    const shaderProgram = gl.createProgram();\n\n    if (shaderProgram == null) {\n      alert(\"An error occurred creating the program\");\n      return null;\n    }\n\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n      alert(\"Unable to initialize the shader program: \" + gl.getProgramInfoLog(shaderProgram));\n      return null;\n    }\n    return shaderProgram;\n  }\n\n  private storeUniformAndAttribLocations() {\n    if (!this.program) {\n      return;\n    }\n    for (let i = 0; i < this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS); i++) {\n      const info = this.gl.getActiveUniform(this.program, i);\n      if (info) {\n        this.uniformLocations[info.name] = {\n          type: info.type,\n          loc: this.gl.getUniformLocation(this.program, info.name)!,\n        };\n      }\n    }\n    for (let i = 0; i < this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES); i++) {\n      const name = this.gl.getActiveAttrib(this.program, i)!.name;\n      this.attribLocations[name] = this.gl.getAttribLocation(this.program, name);\n    }\n  }\n\n  lookupAttribLocation(name: string): GLint | null {\n    const loc = this.attribLocations[name];\n    if (loc != undefined) {\n      return loc;\n    }\n    return null;\n  }\n\n  lookupAttribLocationStrict(name: string): GLint {\n    const attribLocation = this.lookupAttribLocation(name);\n    if (attribLocation == null) {\n      throw new Error(`\"${name}\" attribute not found in shader attribLocations`);\n    }\n    if (attribLocation < 0) {\n      throw new Error(`\"${name}\" not found in shader program`);\n    }\n    return attribLocation;\n  }\n\n  lookupUniformLocation(name: string): WebGLUniformLocation | null {\n    const loc = this.uniformLocations[name];\n    if (loc) {\n      return loc.loc;\n    }\n    return null;\n  }\n\n  bind(camera?: Camera) {\n    this.gl.useProgram(this.program);\n\n    for (let name of Object.keys(this.attribLocations)) {\n      const loc = this.attribLocations[name];\n      if (loc > -1) {\n        this.gl.enableVertexAttribArray(loc);\n      }\n    }\n\n    this.setUniforms(camera);\n  }\n\n  setUniforms(camera?: Camera) {\n    console.warn(\"calling setUniforms on base shader class\");\n  }\n\n  setUniform(name: string, value: any) {\n    const gl = this.gl;\n    const uniform = this.uniformLocations[name];\n\n    if (uniform) {\n      switch (uniform.type) {\n        case gl.FLOAT:\n          gl.uniform1f(uniform.loc, value);\n          break;\n        case gl.FLOAT_VEC3:\n          gl.uniform3fv(uniform.loc, value);\n          break;\n        case gl.FLOAT_VEC4:\n          gl.uniform4fv(uniform.loc, value);\n          break;\n        case gl.INT:\n          gl.uniform1i(uniform.loc, value);\n          break;\n        case gl.FLOAT_MAT3:\n          gl.uniformMatrix3fv(uniform.loc, false, value);\n          break;\n        case gl.FLOAT_MAT4:\n          gl.uniformMatrix4fv(uniform.loc, false, value);\n          break;\n        default:\n          console.warn(\"couldn't set uniform:\", name, uniform);\n      }\n    } else {\n      console.warn(\"Unknown uniform: \" + name);\n    }\n  }\n}\n\nexport class SimpleShader extends ShaderBase {\n  readonly vertexPosition: GLint;\n  readonly vertexColor: GLint;\n  readonly vertexNormal: GLint;\n\n  constructor(gl: WebGL2RenderingContext) {\n    super(gl, VS_SRC, FS_SRC);\n    this.vertexPosition = this.lookupAttribLocationStrict(\"a_VertexPosition\");\n    this.vertexColor = this.lookupAttribLocationStrict(\"a_VertexColor\");\n    this.vertexNormal = this.lookupAttribLocationStrict(\"a_VertexNormal\");\n  }\n\n  setUniforms(camera: Camera) {\n    this.setUniform(\"u_ProjectionMatrix\", camera.projectionMatrix);\n    this.setUniform(\"u_ViewMatrix\", camera.viewMatrix);\n    this.setUniform(\"u_ViewPosition\", camera.position);\n  }\n}\n\n// @ts-ignore\nimport VS_SRC_CUBEMAP from \"../../lib/pbr/renderer/shaders/cubemap.vert\";\n// @ts-ignore\nimport FS_SRC_CUBEMAP from \"../../lib/pbr/renderer/shaders/cubemap.frag\";\n\nexport class CubemapShader extends ShaderBase {\n  readonly vertexPosition: GLint;\n\n  constructor(gl: WebGL2RenderingContext) {\n    super(gl, VS_SRC_CUBEMAP, FS_SRC_CUBEMAP);\n    this.vertexPosition = this.lookupAttribLocationStrict(\"a_position\");\n  }\n\n  setUniforms(camera: Camera) {\n    this.setUniform(\"u_ProjectionMatrix\", camera.projectionMatrix);\n    this.setUniform(\"u_ViewMatrix\", camera.viewMatrix);\n  }\n}\n","#version 300 es\n\nuniform mat4 u_RubikMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ProjectionMatrix;\n\nin vec4 a_VertexPosition;\nin vec3 a_VertexColor;\nin vec3 a_VertexNormal;\n\nout vec3 v_Color;\nout vec3 v_Normal;\nout vec3 v_FragPosition;\n\n\nvoid main() {\n    vec4 position = u_RubikMatrix * u_ModelMatrix * a_VertexPosition;\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * position;\n\n    v_Color = a_VertexColor;\n    v_Normal = normalize(mat3(u_RubikMatrix * u_ModelMatrix) * a_VertexNormal);\n    v_FragPosition = position.xyz;\n}\n","#version 300 es\n\nprecision highp float;\n\n#define PI 3.1415926535897932384626433832795\n\n\nuniform float u_Opacity;\nuniform vec3 u_ViewPosition;\n\nuniform float u_BlockR;\nuniform float u_Spread;\nuniform float u_CurrAngle;\nuniform int u_Axis;\nuniform int u_Level;\n\nuniform int u_EnableBlocking;\nuniform int u_EnableBlockingAO;\n\nuniform vec3 u_BlockPosition;\nuniform mat4 u_RubikMatrix;\nuniform mat3 u_RubikMatrixInv;\n\nuniform samplerCube u_GGXEnvSampler;\n\nin vec3 v_Color;\nin vec3 v_Normal;\nin vec3 v_FragPosition;\n\nout vec4 fragColor;\n\n\n#pragma glslify: rotate = require('./utils.glsl')\n#pragma glslify: blockIntersection = require('./utils.glsl')\n\n\nvec3 toneMap(vec3 color) {\n    return pow(color, vec3(1.0/2.2));\n}\n\n\nfloat _blockAO() {\n//    return u_EnableBlockingAO == 1 ? blockAO(\n//        u_RubikMatrixInv, v_FragPosition, u_BlockPosition, u_BlockR, u_Spread, u_CurrAngle, u_Axis, u_Level\n//    ) : 1.0;\n    return 1.0;\n}\n\nfloat _blockIntersection(vec3 rayDir, out vec3 outReflect) {\n    return u_EnableBlocking == 1 ? blockIntersection(\n        outReflect, mat3(u_RubikMatrix), u_RubikMatrixInv, v_FragPosition, rayDir, u_BlockPosition, u_BlockR, u_Spread, u_CurrAngle, u_Axis, u_Level\n    ) : -1.0;\n}\n\nvoid main() {\n    vec3 normal = v_Normal;\n\n    vec3 directionalLightVector1 = vec3(0, 0, 1);\n    vec3 directionalLightColor1 = vec3(1, 1, 1);\n    float directionalLightStrength1 = 0.7;\n\n    // reflection\n    vec3 viewDir = normalize(u_ViewPosition - v_FragPosition);\n    vec3 reflectVector = reflect(-viewDir, normalize(normal));\n\n    float t = _blockIntersection(reflectVector, reflectVector);\n    float ao = _blockAO();\n\n    vec3 reflection = toneMap(textureLod(u_GGXEnvSampler, reflectVector, 0.0).rgb);\n    vec3 someReflection = 0.75 * reflection;\n\n    // ambient\n    vec3 ambient = vec3(0.3);\n\n    // diffuse\n    float NdotL1 = max(dot(normal, directionalLightVector1), 0.0);\n    vec3 diffuse = (directionalLightStrength1 * directionalLightColor1 * NdotL1);\n\n    vec3 lighting = ambient + diffuse;\n\n    vec3 finalColor = lighting * v_Color + someReflection;\n    finalColor *= ao;\n\n    fragColor = vec4(finalColor, u_Opacity);\n\n\n//    float greyF = 0.0;\n//    float lightF = 0.0;\n//\n//    float grey = finalColor.g*0.59 + finalColor.r*0.3 + finalColor.b*0.11;\n//    vec3 mixed = greyF*vec3(grey) + (1.0-greyF)*finalColor;\n//    vec3 lightened = mixed * (1.0-lightF) + lightF;\n//\n//    fragColor = vec4(lightened, u_Opacity);\n}\n","#version 300 es\n\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ProjectionMatrix;\n\nuniform mat3 u_EnvRotation;\n\n\nin vec3 a_position;\nout vec3 v_TexCoords;\n\n\nvoid main()\n{\n    v_TexCoords = u_EnvRotation * a_position;\n\n    mat4 mat = u_ProjectionMatrix * u_ViewMatrix;\n    mat[3] = vec4(0.0, 0.0, 0.0, 0.1);\n    vec4 pos = mat * vec4(a_position, 1.0);\n    gl_Position = pos.xyww;\n}\n","#version 300 es\n\nprecision highp float;\n\n\nuniform float u_EnvBlurNormalized;\nuniform int u_MipCount;\nuniform samplerCube u_GGXEnvSampler;\n\nuniform vec3 u_EnvColor;\n\nin vec3 v_TexCoords;\n\nout vec4 FragColor;\n\n\nvec3 toneMap(vec3 color) {\n    return pow(color, vec3(1.0/2.2));\n}\n\n\nvec3 desaturate(vec3 color) {\n    float greyF = 0.75;\n    float grey = color.g*0.59 + color.r*0.3 + color.b*0.11;\n    return mix(color, vec3(grey), greyF);\n}\n\nvec3 colorLighting(vec3 color) {\n    float strength = 0.5;\n    return color * (1.0+strength*(u_EnvColor - vec3(0.5)));\n}\n\n\nvoid main() {\n    vec4 color = textureLod(u_GGXEnvSampler, v_TexCoords, u_EnvBlurNormalized * float(u_MipCount - 1));\n\n    vec3 finalColor = colorLighting(desaturate(color.rgb));\n\n    FragColor = vec4(toneMap(finalColor), 1);\n}\n","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","/**\n * hdrpng.js - Original code from Enki https://enkimute.github.io/hdrpng.js/\n *\n * Refactored and simplified.\n */\n\nfunction _rgbeToFloat(buffer) {\n  const length = buffer.byteLength >> 2;\n  const result = new Float32Array(length * 3);\n\n  for (let i = 0; i < length; i++) {\n    const s = Math.pow(2, buffer[i * 4 + 3] - (128 + 8));\n\n    result[i * 3] = buffer[i * 4] * s;\n    result[i * 3 + 1] = buffer[i * 4 + 1] * s;\n    result[i * 3 + 2] = buffer[i * 4 + 2] * s;\n  }\n  return result;\n}\n\nasync function loadHDR(buffer) {\n  let header = \"\";\n  let pos = 0;\n  const d8 = buffer;\n  let format = undefined;\n  // read header.\n  while (!header.match(/\\n\\n[^\\n]+\\n/g)) header += String.fromCharCode(d8[pos++]);\n  // check format.\n  format = header.match(/FORMAT=(.*)$/m);\n  if (format.length < 2) {\n    return undefined;\n  }\n  format = format[1];\n  if (format != \"32-bit_rle_rgbe\") {\n    console.warn(\"unknown format : \" + format), this.onerror();\n    return;\n  }\n  // parse resolution\n  let rez = header.split(/\\n/).reverse();\n  if (rez.length < 2) {\n    return undefined;\n  }\n  rez = rez[1].split(\" \");\n  if (rez.length < 4) {\n    return undefined;\n  }\n  const width = rez[3] * 1,\n    height = rez[1] * 1;\n  // Create image.\n  const img = new Uint8Array(width * height * 4);\n  let ipos = 0;\n  // Read all scanlines\n  for (let j = 0; j < height; j++) {\n    const scanline = [];\n\n    let rgbe = d8.slice(pos, (pos += 4));\n    const isNewRLE = rgbe[0] == 2 && rgbe[1] == 2 && rgbe[2] == ((width >> 8) & 0xff) && rgbe[3] == (width & 0xff);\n\n    if (isNewRLE && width >= 8 && width < 32768) {\n      for (let i = 0; i < 4; i++) {\n        let ptr = i * width;\n        const ptr_end = (i + 1) * width;\n        let buf = undefined;\n        let count = undefined;\n        while (ptr < ptr_end) {\n          buf = d8.slice(pos, (pos += 2));\n          if (buf[0] > 128) {\n            count = buf[0] - 128;\n            while (count-- > 0) scanline[ptr++] = buf[1];\n          } else {\n            count = buf[0] - 1;\n            scanline[ptr++] = buf[1];\n            while (count-- > 0) scanline[ptr++] = d8[pos++];\n          }\n        }\n      }\n\n      for (let i = 0; i < width; i++) {\n        img[ipos++] = scanline[i + 0 * width];\n        img[ipos++] = scanline[i + 1 * width];\n        img[ipos++] = scanline[i + 2 * width];\n        img[ipos++] = scanline[i + 3 * width];\n      }\n    } else {\n      pos -= 4;\n\n      for (let i = 0; i < width; i++) {\n        rgbe = d8.slice(pos, (pos += 4));\n\n        img[ipos++] = rgbe[0];\n        img[ipos++] = rgbe[1];\n        img[ipos++] = rgbe[2];\n        img[ipos++] = rgbe[3];\n      }\n    }\n  }\n\n  const imageFloatBuffer = _rgbeToFloat(img);\n\n  return {\n    dataFloat: imageFloatBuffer,\n    width: width,\n    height: height,\n  };\n}\n\nexport { loadHDR };\n","#version 300 es\n\nprecision highp float;\n\nout vec2 texCoord;\n\nvoid main(void) \n{\n    float x = float((gl_VertexID & 1) << 2);\n    float y = float((gl_VertexID & 2) << 1);\n    texCoord.x = x * 0.5;\n    texCoord.y = y * 0.5;\n    gl_Position = vec4(x - 1.0, y - 1.0, 0, 1);\n}","import { ShaderBase } from \"../../src/js/shader\";\n\n// @ts-ignore\nimport FS_SRC_IBL from \"./shaders/ibl_filtering.frag\";\n// @ts-ignore\nimport FS_SRC_PANO from \"./shaders/panorama_to_cubemap.frag\";\n// @ts-ignore\nimport VS_SRC from \"./shaders/fullscreen.vert\";\n\nclass IBLShader extends ShaderBase {\n  constructor(gl) {\n    super(gl, VS_SRC, FS_SRC_IBL);\n  }\n\n  setUniforms(camera) {}\n}\n\nclass PanoShader extends ShaderBase {\n  constructor(gl) {\n    super(gl, VS_SRC, FS_SRC_PANO);\n  }\n\n  setUniforms(camera) {}\n}\n\nclass iblSampler {\n  constructor(gl) {\n    this.gl = gl;\n\n    this.textureSize = 256;\n    this.ggxSampleCount = 1024;\n    this.lambertianSampleCount = 2048;\n    this.sheenSamplCount = 64;\n    this.lodBias = 0.0;\n    this.lowestMipLevel = 4;\n    this.lutResolution = 1024;\n\n    this.mipmapCount = undefined;\n\n    this.lambertianTextureID = undefined;\n    this.ggxTextureID = undefined;\n    this.sheenTextureID = undefined;\n\n    this.ggxLutTextureID = undefined;\n    this.charlieLutTextureID = undefined;\n\n    this.inputTextureID = undefined;\n    this.cubemapTextureID = undefined;\n    this.framebuffer = undefined;\n\n    this.iblShader = new IBLShader(gl);\n    this.panoShader = new PanoShader(gl);\n  }\n\n  loadTextureHDR(image) {\n    const texture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n    let internalFormat = this.gl.RGB32F;\n    let format = this.gl.RGB;\n    let type = this.gl.FLOAT;\n    let data = undefined;\n\n    if (image.dataFloat instanceof Float32Array && typeof this.gl.RGB32F !== \"undefined\") {\n      internalFormat = this.gl.RGB32F;\n      format = this.gl.RGB;\n      type = this.gl.FLOAT;\n      data = image.dataFloat;\n    } else if (image.dataFloat instanceof Float32Array) {\n      // workaround for node-gles not supporting RGB32F\n      internalFormat = this.gl.RGBA32F;\n      format = this.gl.RGBA;\n      type = this.gl.FLOAT;\n\n      const numPixels = image.dataFloat.length / 3;\n      data = new Float32Array(numPixels * 4);\n      for (let i = 0, src = 0, dst = 0; i < numPixels; ++i, src += 3, dst += 4) {\n        // copy the pixels and pad the alpha channel\n        data[dst] = image.dataFloat[src];\n        data[dst + 1] = image.dataFloat[src + 1];\n        data[dst + 2] = image.dataFloat[src + 2];\n        data[dst + 3] = 0;\n      }\n    } else if (typeof Image !== \"undefined\" && image instanceof Image) {\n      internalFormat = this.gl.RGBA;\n      format = this.gl.RGBA;\n      type = this.gl.UNSIGNED_BYTE;\n      data = image;\n    } else {\n      console.error(\"loadTextureHDR failed, unsupported HDR image\");\n      return;\n    }\n\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, format, type, data);\n\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.MIRRORED_REPEAT);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.MIRRORED_REPEAT);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n    return texture;\n  }\n\n  internalFormat() {\n    return this.use8bit ? this.gl.RGBA8 : this.gl.RGBA32F;\n  }\n\n  type() {\n    return this.use8bit ? this.gl.UNSIGNED_BYTE : this.gl.FLOAT;\n  }\n\n  createCubemapTexture(withMipmaps) {\n    const targetTexture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, targetTexture);\n\n    for (let i = 0; i < 6; ++i) {\n      this.gl.texImage2D(\n        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n        0,\n        this.internalFormat(),\n        this.textureSize,\n        this.textureSize,\n        0,\n        this.gl.RGBA,\n        this.type(),\n        null\n      );\n    }\n\n    if (withMipmaps) {\n      this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_LINEAR);\n    } else {\n      this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n    }\n\n    this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n\n    return targetTexture;\n  }\n\n  createLutTexture() {\n    const targetTexture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, targetTexture);\n\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.internalFormat(),\n      this.lutResolution,\n      this.lutResolution,\n      0,\n      this.gl.RGBA,\n      this.type(),\n      null\n    );\n\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n\n    return targetTexture;\n  }\n\n  init(panoramaImage) {\n    if (!this.gl.getExtension(\"EXT_color_buffer_float\") || !this.gl.getExtension(\"OES_texture_float_linear\")) {\n      console.warn(\"Floating point textures are not supported\");\n      this.use8bit = true;\n    }\n\n    this.inputTextureID = this.loadTextureHDR(panoramaImage);\n\n    this.cubemapTextureID = this.createCubemapTexture(true);\n\n    this.framebuffer = this.gl.createFramebuffer();\n\n    this.lambertianTextureID = this.createCubemapTexture(false);\n    this.ggxTextureID = this.createCubemapTexture(true);\n    this.sheenTextureID = this.createCubemapTexture(true);\n\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.ggxTextureID);\n    this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.sheenTextureID);\n    this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n    this.mipmapLevels = Math.floor(Math.log2(this.textureSize)) + 1 - this.lowestMipLevel;\n  }\n\n  filterAll() {\n    this.panoramaToCubeMap();\n    this.cubeMapToLambertian();\n    this.cubeMapToGGX();\n    this.cubeMapToSheen();\n\n    this.sampleGGXLut();\n    this.sampleCharlieLut();\n\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n  }\n\n  panoramaToCubeMap() {\n    for (let i = 0; i < 6; ++i) {\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n      this.gl.framebufferTexture2D(\n        this.gl.FRAMEBUFFER,\n        this.gl.COLOR_ATTACHMENT0,\n        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n        this.cubemapTextureID,\n        0\n      );\n\n      this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n\n      this.gl.viewport(0, 0, this.textureSize, this.textureSize);\n\n      this.gl.clearColor(1.0, 0.0, 0.0, 0.0);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n      const shader = this.panoShader;\n      shader.bind();\n\n      //  TEXTURE0 = active.\n      this.gl.activeTexture(this.gl.TEXTURE0 + 0);\n\n      // Bind texture ID to active texture\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.inputTextureID);\n\n      // map shader uniform to texture unit (TEXTURE0)\n      const location = shader.lookupUniformLocation(\"u_panorama\");\n      this.gl.uniform1i(location, 0); // texture unit 0 (TEXTURE0)\n\n      shader.setUniform(\"u_currentFace\", i);\n\n      //fullscreen triangle\n      this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n    }\n\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n    this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n  }\n\n  applyFilter(distribution, roughness, targetMipLevel, targetTexture, sampleCount, lodBias = 0.0) {\n    const currentTextureSize = this.textureSize >> targetMipLevel;\n\n    for (let i = 0; i < 6; ++i) {\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n      this.gl.framebufferTexture2D(\n        this.gl.FRAMEBUFFER,\n        this.gl.COLOR_ATTACHMENT0,\n        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n        targetTexture,\n        targetMipLevel\n      );\n\n      this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, targetTexture);\n\n      this.gl.viewport(0, 0, currentTextureSize, currentTextureSize);\n\n      this.gl.clearColor(1.0, 0.0, 0.0, 0.0);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n      const shader = this.iblShader;\n      shader.bind();\n\n      //  TEXTURE0 = active.\n      this.gl.activeTexture(this.gl.TEXTURE0);\n\n      // Bind texture ID to active texture\n      this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n\n      // map shader uniform to texture unit (TEXTURE0)\n      const location = shader.lookupUniformLocation(\"u_cubemapTexture\");\n      this.gl.uniform1i(location, 0); // texture unit 0\n\n      shader.setUniform(\"u_roughness\", roughness);\n      shader.setUniform(\"u_sampleCount\", sampleCount);\n      shader.setUniform(\"u_width\", this.textureSize);\n      shader.setUniform(\"u_lodBias\", lodBias);\n      shader.setUniform(\"u_distribution\", distribution);\n      shader.setUniform(\"u_currentFace\", i);\n      shader.setUniform(\"u_isGeneratingLUT\", 0);\n\n      //fullscreen triangle\n      this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n    }\n  }\n\n  cubeMapToLambertian() {\n    this.applyFilter(0, 0.0, 0, this.lambertianTextureID, this.lambertianSampleCount);\n  }\n\n  cubeMapToGGX() {\n    for (let currentMipLevel = 0; currentMipLevel <= this.mipmapLevels; ++currentMipLevel) {\n      const roughness = currentMipLevel / (this.mipmapLevels - 1);\n      this.applyFilter(1, roughness, currentMipLevel, this.ggxTextureID, this.ggxSampleCount);\n    }\n  }\n\n  cubeMapToSheen() {\n    for (let currentMipLevel = 0; currentMipLevel <= this.mipmapLevels; ++currentMipLevel) {\n      const roughness = currentMipLevel / (this.mipmapLevels - 1);\n      this.applyFilter(2, roughness, currentMipLevel, this.sheenTextureID, this.sheenSamplCount);\n    }\n  }\n\n  sampleLut(distribution, targetTexture, currentTextureSize) {\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n    this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, targetTexture, 0);\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, targetTexture);\n\n    this.gl.viewport(0, 0, currentTextureSize, currentTextureSize);\n\n    this.gl.clearColor(1.0, 0.0, 0.0, 0.0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n    const shader = this.iblShader;\n    shader.bind();\n\n    //  TEXTURE0 = active.\n    this.gl.activeTexture(this.gl.TEXTURE0 + 0);\n\n    // Bind texture ID to active texture\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n\n    // map shader uniform to texture unit (TEXTURE0)\n    const location = shader.lookupUniformLocation(\"u_cubemapTexture\");\n    this.gl.uniform1i(location, 0); // texture unit 0\n\n    shader.setUniform(\"u_roughness\", 0.0);\n    shader.setUniform(\"u_sampleCount\", 512);\n    shader.setUniform(\"u_width\", 0.0);\n    shader.setUniform(\"u_lodBias\", 0.0);\n    shader.setUniform(\"u_distribution\", distribution);\n    shader.setUniform(\"u_currentFace\", 0);\n    shader.setUniform(\"u_isGeneratingLUT\", 1);\n\n    //fullscreen triangle\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n  }\n\n  sampleGGXLut() {\n    this.ggxLutTextureID = this.createLutTexture();\n    this.sampleLut(1, this.ggxLutTextureID, this.lutResolution);\n  }\n\n  sampleCharlieLut() {\n    this.charlieLutTextureID = this.createLutTexture();\n    this.sampleLut(2, this.charlieLutTextureID, this.lutResolution);\n  }\n\n  // destroy() {\n  //   this.shaderCache.destroy();\n  // }\n}\n\nexport { iblSampler };\n","#version 300 es\n\n//#version 450\n//#extension GL_ARB_separate_shader_objects : enable\n\nprecision mediump float;\n#define MATH_PI 3.1415926535897932384626433832795\n//#define MATH_INV_PI (1.0 / MATH_PI)\n\nuniform samplerCube uCubeMap;\n\n// enum\nconst int cLambertian = 0;\nconst int cGGX = 1;\nconst int cCharlie = 2;\n\n\n//layout(push_constant) uniform FilterParameters {\nuniform  float u_roughness;\nuniform  int u_sampleCount;\nuniform  int u_width;\nuniform  float u_lodBias;\nuniform  int u_distribution; // enum\nuniform int u_currentFace;\nuniform int u_isGeneratingLUT;\n\n//layout (location = 0) in vec2 inUV;\nin vec2 texCoord;\n\n\nout vec4 fragmentColor;\n\n//layout(location = 6) out vec3 outLUT;\n\n\nvec3 uvToXYZ(int face, vec2 uv)\n{\n    if(face == 0)\n        return vec3(     1.f,   uv.y,    -uv.x);\n\n    else if(face == 1)\n        return vec3(    -1.f,   uv.y,     uv.x);\n\n    else if(face == 2)\n        return vec3(   +uv.x,   -1.f,    +uv.y);\n\n    else if(face == 3)\n        return vec3(   +uv.x,    1.f,    -uv.y);\n\n    else if(face == 4)\n        return vec3(   +uv.x,   uv.y,      1.f);\n\n    else {//if(face == 5)\n        return vec3(    -uv.x,  +uv.y,     -1.f);}\n}\n\nvec2 dirToUV(vec3 dir)\n{\n    return vec2(\n            0.5f + 0.5f * atan(dir.z, dir.x) / MATH_PI,\n            1.f - acos(dir.y) / MATH_PI);\n}\n\nfloat saturate(float v)\n{\n    return clamp(v, 0.0f, 1.0f);\n}\n\n// Hammersley Points on the Hemisphere\n// CC BY 3.0 (Holger Dammertz)\n// http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n// with adapted interface\nfloat radicalInverse_VdC(uint bits)\n{\n    bits = (bits << 16u) | (bits >> 16u);\n    bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);\n    bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);\n    bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);\n    bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);\n    return float(bits) * 2.3283064365386963e-10; // / 0x100000000\n}\n\n// hammersley2d describes a sequence of points in the 2d unit square [0,1)^2\n// that can be used for quasi Monte Carlo integration\nvec2 hammersley2d(int i, int N) {\n    return vec2(float(i)/float(N), radicalInverse_VdC(uint(i)));\n}\n\n// Hemisphere Sample\n\n// TBN generates a tangent bitangent normal coordinate frame from the normal\n// (the normal must be normalized)\nmat3 generateTBN(vec3 normal)\n{\n    vec3 bitangent = vec3(0.0, 1.0, 0.0);\n\n    float NdotUp = dot(normal, vec3(0.0, 1.0, 0.0));\n    float epsilon = 0.0000001;\n    if (1.0 - abs(NdotUp) <= epsilon)\n    {\n        // Sampling +Y or -Y, so we need a more robust bitangent.\n        if (NdotUp > 0.0)\n        {\n            bitangent = vec3(0.0, 0.0, 1.0);\n        }\n        else\n        {\n            bitangent = vec3(0.0, 0.0, -1.0);\n        }\n    }\n\n    vec3 tangent = normalize(cross(bitangent, normal));\n    bitangent = cross(normal, tangent);\n\n    return mat3(tangent, bitangent, normal);\n}\n\nstruct MicrofacetDistributionSample\n{\n    float pdf;\n    float cosTheta;\n    float sinTheta;\n    float phi;\n};\n\nfloat D_GGX(float NdotH, float roughness) {\n    float a = NdotH * roughness;\n    float k = roughness / (1.0 - NdotH * NdotH + a * a);\n    return k * k * (1.0 / MATH_PI);\n}\n\n// GGX microfacet distribution\n// https://www.cs.cornell.edu/~srm/publications/EGSR07-btdf.html\n// This implementation is based on https://bruop.github.io/ibl/,\n//  https://www.tobias-franke.eu/log/2014/03/30/notes_on_importance_sampling.html\n// and https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch20.html\nMicrofacetDistributionSample GGX(vec2 xi, float roughness)\n{\n    MicrofacetDistributionSample ggx;\n\n    // evaluate sampling equations\n    float alpha = roughness * roughness;\n    ggx.cosTheta = saturate(sqrt((1.0 - xi.y) / (1.0 + (alpha * alpha - 1.0) * xi.y)));\n    ggx.sinTheta = sqrt(1.0 - ggx.cosTheta * ggx.cosTheta);\n    ggx.phi = 2.0 * MATH_PI * xi.x;\n\n    // evaluate GGX pdf (for half vector)\n    ggx.pdf = D_GGX(ggx.cosTheta, alpha);\n\n    // Apply the Jacobian to obtain a pdf that is parameterized by l\n    // see https://bruop.github.io/ibl/\n    // Typically you'd have the following:\n    // float pdf = D_GGX(NoH, roughness) * NoH / (4.0 * VoH);\n    // but since V = N => VoH == NoH\n    ggx.pdf /= 4.0;\n\n    return ggx;\n}\n\n// NDF\nfloat D_Ashikhmin(float NdotH, float roughness)\n{\n    float alpha = roughness * roughness;\n    // Ashikhmin 2007, \"Distribution-based BRDFs\"\n    float a2 = alpha * alpha;\n    float cos2h = NdotH * NdotH;\n    float sin2h = 1.0 - cos2h;\n    float sin4h = sin2h * sin2h;\n    float cot2 = -cos2h / (a2 * sin2h);\n    return 1.0 / (MATH_PI * (4.0 * a2 + 1.0) * sin4h) * (4.0 * exp(cot2) + sin4h);\n}\n\n// NDF\nfloat D_Charlie(float sheenRoughness, float NdotH)\n{\n    sheenRoughness = max(sheenRoughness, 0.000001); //clamp (0,1]\n    float invR = 1.0 / sheenRoughness;\n    float cos2h = NdotH * NdotH;\n    float sin2h = 1.0 - cos2h;\n    return (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * MATH_PI);\n}\n\n\nMicrofacetDistributionSample Charlie(vec2 xi, float roughness)\n{\n    MicrofacetDistributionSample charlie;\n\n    float alpha = roughness * roughness;\n    charlie.sinTheta = pow(xi.y, alpha / (2.0*alpha + 1.0));\n    charlie.cosTheta = sqrt(1.0 - charlie.sinTheta * charlie.sinTheta);\n    charlie.phi = 2.0 * MATH_PI * xi.x;\n\n    // evaluate Charlie pdf (for half vector)\n    charlie.pdf = D_Charlie(alpha, charlie.cosTheta);\n\n    // Apply the Jacobian to obtain a pdf that is parameterized by l\n    charlie.pdf /= 4.0;\n\n    return charlie;\n}\n\nMicrofacetDistributionSample Lambertian(vec2 xi, float roughness)\n{\n    MicrofacetDistributionSample lambertian;\n\n    // Cosine weighted hemisphere sampling\n    // http://www.pbr-book.org/3ed-2018/Monte_Carlo_Integration/2D_Sampling_with_Multidimensional_Transformations.html#Cosine-WeightedHemisphereSampling\n    lambertian.cosTheta = sqrt(1.0 - xi.y);\n    lambertian.sinTheta = sqrt(xi.y); // equivalent to `sqrt(1.0 - cosTheta*cosTheta)`;\n    lambertian.phi = 2.0 * MATH_PI * xi.x;\n\n    lambertian.pdf = lambertian.cosTheta / MATH_PI; // evaluation for solid angle, therefore drop the sinTheta\n\n    return lambertian;\n}\n\n\n// getImportanceSample returns an importance sample direction with pdf in the .w component\nvec4 getImportanceSample(int sampleIndex, vec3 N, float roughness)\n{\n    // generate a quasi monte carlo point in the unit square [0.1)^2\n    vec2 xi = hammersley2d(sampleIndex, u_sampleCount);\n\n    MicrofacetDistributionSample importanceSample;\n\n    // generate the points on the hemisphere with a fitting mapping for\n    // the distribution (e.g. lambertian uses a cosine importance)\n    if(u_distribution == cLambertian)\n    {\n        importanceSample = Lambertian(xi, roughness);\n    }\n    else if(u_distribution == cGGX)\n    {\n        // Trowbridge-Reitz / GGX microfacet model (Walter et al)\n        // https://www.cs.cornell.edu/~srm/publications/EGSR07-btdf.html\n        importanceSample = GGX(xi, roughness);\n    }\n    else if(u_distribution == cCharlie)\n    {\n        importanceSample = Charlie(xi, roughness);\n    }\n\n    // transform the hemisphere sample to the normal coordinate frame\n    // i.e. rotate the hemisphere to the normal direction\n    vec3 localSpaceDirection = normalize(vec3(\n        importanceSample.sinTheta * cos(importanceSample.phi), \n        importanceSample.sinTheta * sin(importanceSample.phi), \n        importanceSample.cosTheta\n    ));\n    mat3 TBN = generateTBN(N);\n    vec3 direction = TBN * localSpaceDirection;\n\n    return vec4(direction, importanceSample.pdf);\n}\n\n// Mipmap Filtered Samples (GPU Gems 3, 20.4)\n// https://developer.nvidia.com/gpugems/gpugems3/part-iii-rendering/chapter-20-gpu-based-importance-sampling\n// https://cgg.mff.cuni.cz/~jaroslav/papers/2007-sketch-fis/Final_sap_0073.pdf\nfloat computeLod(float pdf)\n{\n    // // Solid angle of current sample -- bigger for less likely samples\n    // float omegaS = 1.0 / (float(u_sampleCount) * pdf);\n    // // Solid angle of texel\n    // // note: the factor of 4.0 * MATH_PI \n    // float omegaP = 4.0 * MATH_PI / (6.0 * float(u_width) * float(u_width));\n    // // Mip level is determined by the ratio of our sample's solid angle to a texel's solid angle \n    // // note that 0.5 * log2 is equivalent to log4\n    // float lod = 0.5 * log2(omegaS / omegaP);\n\n    // babylon introduces a factor of K (=4) to the solid angle ratio\n    // this helps to avoid undersampling the environment map\n    // this does not appear in the original formulation by Jaroslav Krivanek and Mark Colbert\n    // log4(4) == 1\n    // lod += 1.0;\n\n    // We achieved good results by using the original formulation from Krivanek & Colbert adapted to cubemaps\n\n    // https://cgg.mff.cuni.cz/~jaroslav/papers/2007-sketch-fis/Final_sap_0073.pdf\n    float lod = 0.5 * log2( 6.0 * float(u_width) * float(u_width) / (float(u_sampleCount) * pdf));\n\n\n    return lod;\n}\n\nvec3 filterColor(vec3 N)\n{\n    //return  textureLod(uCubeMap, N, 3.0).rgb;\n    vec3 color = vec3(0.f);\n    float weight = 0.0f;\n\n    for(int i = 0; i < u_sampleCount; ++i)\n    {\n        vec4 importanceSample = getImportanceSample(i, N, u_roughness);\n\n        vec3 H = vec3(importanceSample.xyz);\n        float pdf = importanceSample.w;\n\n        // mipmap filtered samples (GPU Gems 3, 20.4)\n        float lod = computeLod(pdf);\n\n        // apply the bias to the lod\n        lod += u_lodBias;\n\n        if(u_distribution == cLambertian)\n        {\n            // sample lambertian at a lower resolution to avoid fireflies\n            vec3 lambertian = textureLod(uCubeMap, H, lod).rgb;\n\n            //// the below operations cancel each other out\n            // lambertian *= NdotH; // lamberts law\n            // lambertian /= pdf; // invert bias from importance sampling\n            // lambertian /= MATH_PI; // convert irradiance to radiance https://seblagarde.wordpress.com/2012/01/08/pi-or-not-to-pi-in-game-lighting-equation/\n\n            color += lambertian;\n        }\n        else if(u_distribution == cGGX || u_distribution == cCharlie)\n        {\n            // Note: reflect takes incident vector.\n            vec3 V = N;\n            vec3 L = normalize(reflect(-V, H));\n            float NdotL = dot(N, L);\n\n            if (NdotL > 0.0)\n            {\n                if(u_roughness == 0.0)\n                {\n                    // without this the roughness=0 lod is too high\n                    lod = u_lodBias;\n                }\n                vec3 sampleColor = textureLod(uCubeMap, L, lod).rgb;\n                color += sampleColor * NdotL;\n                weight += NdotL;\n            }\n        }\n    }\n\n    if(weight != 0.0f)\n    {\n        color /= weight;\n    }\n    else\n    {\n        color /= float(u_sampleCount);\n    }\n\n    return color.rgb ;\n}\n\n// From the filament docs. Geometric Shadowing function\n// https://google.github.io/filament/Filament.html#toc4.4.2\nfloat V_SmithGGXCorrelated(float NoV, float NoL, float roughness) {\n    float a2 = pow(roughness, 4.0);\n    float GGXV = NoL * sqrt(NoV * NoV * (1.0 - a2) + a2);\n    float GGXL = NoV * sqrt(NoL * NoL * (1.0 - a2) + a2);\n    return 0.5 / (GGXV + GGXL);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Ashikhmin(float NdotL, float NdotV)\n{\n    return clamp(1.0 / (4.0 * (NdotL + NdotV - NdotL * NdotV)), 0.0, 1.0);\n}\n\n// Compute LUT for GGX distribution.\n// See https://blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_pbs_epic_notes_v2.pdf\nvec3 LUT(float NdotV, float roughness)\n{\n    // Compute spherical view vector: (sin(phi), 0, cos(phi))\n    vec3 V = vec3(sqrt(1.0 - NdotV * NdotV), 0.0, NdotV);\n\n    // The macro surface normal just points up.\n    vec3 N = vec3(0.0, 0.0, 1.0);\n\n    // To make the LUT independant from the material's F0, which is part of the Fresnel term\n    // when substituted by Schlick's approximation, we factor it out of the integral,\n    // yielding to the form: F0 * I1 + I2\n    // I1 and I2 are slighlty different in the Fresnel term, but both only depend on\n    // NoL and roughness, so they are both numerically integrated and written into two channels.\n    float A = 0.0;\n    float B = 0.0;\n    float C = 0.0;\n\n    for(int i = 0; i < u_sampleCount; ++i)\n    {\n        // Importance sampling, depending on the distribution.\n        vec4 importanceSample = getImportanceSample(i, N, roughness);\n        vec3 H = importanceSample.xyz;\n        // float pdf = importanceSample.w;\n        vec3 L = normalize(reflect(-V, H));\n\n        float NdotL = saturate(L.z);\n        float NdotH = saturate(H.z);\n        float VdotH = saturate(dot(V, H));\n        if (NdotL > 0.0)\n        {\n            if (u_distribution == cGGX)\n            {\n                // LUT for GGX distribution.\n\n                // Taken from: https://bruop.github.io/ibl\n                // Shadertoy: https://www.shadertoy.com/view/3lXXDB\n                // Terms besides V are from the GGX PDF we're dividing by.\n                float V_pdf = V_SmithGGXCorrelated(NdotV, NdotL, roughness) * VdotH * NdotL / NdotH;\n                float Fc = pow(1.0 - VdotH, 5.0);\n                A += (1.0 - Fc) * V_pdf;\n                B += Fc * V_pdf;\n                C += 0.0;\n            }\n\n            if (u_distribution == cCharlie)\n            {\n                // LUT for Charlie distribution.\n                float sheenDistribution = D_Charlie(roughness, NdotH);\n                float sheenVisibility = V_Ashikhmin(NdotL, NdotV);\n\n                A += 0.0;\n                B += 0.0;\n                C += sheenVisibility * sheenDistribution * NdotL * VdotH;\n            }\n        }\n    }\n\n    // The PDF is simply pdf(v, h) -> NDF * <nh>.\n    // To parametrize the PDF over l, use the Jacobian transform, yielding to: pdf(v, l) -> NDF * <nh> / 4<vh>\n    // Since the BRDF divide through the PDF to be normalized, the 4 can be pulled out of the integral.\n    return vec3(4.0 * A, 4.0 * B, 4.0 * 2.0 * MATH_PI * C) / float(u_sampleCount);\n}\n\n\n\n// entry point\nvoid main()\n{\n    vec3 color = vec3(0);\n\n    if(u_isGeneratingLUT == 0)\n    {\n        vec2 newUV = texCoord ;\n\n        newUV = newUV*2.0-1.0;\n\n        vec3 scan = uvToXYZ(u_currentFace, newUV);\n\n        vec3 direction = normalize(scan);\n        direction.y = -direction.y;\n    \n        color = filterColor(direction);\n    }\n    else\n    {\n        color = LUT(texCoord.x, texCoord.y);\n    }\n    \n    fragmentColor = vec4(color,1.0);\n}\n\n","#version 300 es\n\n#define MATH_PI 3.1415926535897932384626433832795\n#define MATH_INV_PI (1.0 / MATH_PI)\n\nprecision highp float;\n\n\nin vec2 texCoord;\nout vec4 fragmentColor;\n\n\nuniform int u_currentFace;\n\nuniform sampler2D u_inputTexture;\nuniform sampler2D u_panorama;\n\nvec3 uvToXYZ(int face, vec2 uv)\n{\n\tif(face == 0)\n\t\treturn vec3(     1.f,   uv.y,    -uv.x);\n\n\telse if(face == 1)\n\t\treturn vec3(    -1.f,   uv.y,     uv.x);\n\n\telse if(face == 2)\n\t\treturn vec3(   +uv.x,   -1.f,    +uv.y);\n\n\telse if(face == 3)\n\t\treturn vec3(   +uv.x,    1.f,    -uv.y);\n\n\telse if(face == 4)\n\t\treturn vec3(   +uv.x,   uv.y,      1.f);\n\n\telse //if(face == 5)\n\t{\treturn vec3(    -uv.x,  +uv.y,     -1.f);}\n}\n\nvec2 dirToUV(vec3 dir)\n{\n\treturn vec2(\n\t\t0.5f + 0.5f * atan(dir.z, dir.x) / MATH_PI,\n\t\t1.f - acos(dir.y) / MATH_PI);\n}\n\nvec3 panoramaToCubeMap(int face, vec2 texCoord)\n{\n\tvec2 texCoordNew = texCoord*2.0-1.0;\n\tvec3 scan = uvToXYZ(face, texCoordNew);\n\tvec3 direction = normalize(scan);\n\tvec2 src = dirToUV(direction);\n\n\treturn  texture(u_panorama, src).rgb;\n}\n\n\n\nvoid main(void)\n{\n    fragmentColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n\tfragmentColor.rgb = panoramaToCubeMap(u_currentFace, texCoord);\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gTDnR\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gnyTy\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dvABv\")).toString();","import { ImageHDR, loadHDR } from \"../../hdrpng\";\nimport { iblSampler } from \"../../ibl_sampler\";\n\n// @ts-ignore\nimport normalUrl0 from \"url:../../../assets/material/MetalSpotty.jpg\";\n// @ts-ignore\nimport normalUrl1 from \"url:../../../assets/material/ScratchedNormal.png\";\n// @ts-ignore\nimport normalUrl2 from \"url:../../../assets/material/metal_0026.png\";\n\ntype Sampler = {\n  magFilter: GLenum;\n  minFilter: GLenum;\n  wrapS: GLenum;\n  wrapT: GLenum;\n};\n\nconst getSampler = (magFilter: GLenum, minFilter: GLenum, wrapS: GLenum, wrapT: GLenum): Sampler => ({\n  magFilter,\n  minFilter,\n  wrapS,\n  wrapT,\n});\n\ntype TexImage = {\n  type: GLenum; // 2d or cube\n  image: WebGLTexture;\n};\n\nfunction setSampler(gl: WebGL2RenderingContext, samplerObj: Sampler, type: GLenum) {\n  gl.texParameteri(type, gl.TEXTURE_WRAP_S, samplerObj.wrapS);\n  gl.texParameteri(type, gl.TEXTURE_WRAP_T, samplerObj.wrapT);\n  gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, samplerObj.minFilter);\n  gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, samplerObj.magFilter);\n}\n\nconst getImage = (type: GLenum, image: WebGLTexture): TexImage => ({ type, image });\n\ntype Texture = {\n  type: GLenum;\n  sampler: number;\n  source: number;\n  glTexture?: WebGLTexture;\n};\n\nfunction loadHTMLImage(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", reject);\n    image.src = url;\n    image.crossOrigin = \"\";\n  });\n}\n\nasync function loadHTMLImages(images: string[]) {\n  const imagePromises = [];\n  for (let url of images) {\n    imagePromises.push(loadHTMLImage(url));\n  }\n  return Promise.all(imagePromises);\n}\n\nconst getTexture = (sampler: number, source: number, type: GLenum): Texture => ({\n  type,\n  sampler,\n  source,\n});\n\nexport class Resources {\n  samplers: Sampler[] = [];\n  images: TexImage[] = [];\n  textures: Texture[] = [];\n}\n\nexport class EnvResources extends Resources {\n  readonly diffuseEnvMap = 0;\n  readonly specularEnvMap = 1;\n  readonly sheenEnvMap = 2;\n  readonly lut = 3;\n  readonly sheenLUT = 4;\n  mipCount?: number;\n}\n\nexport function setTexture(\n  gl: WebGL2RenderingContext,\n  loc: WebGLUniformLocation,\n  gltf: Resources,\n  textureIdx: number,\n  texSlot: number,\n  name = \"\"\n) {\n  if (loc == -1) {\n    console.warn(\"uniform location not found\", name, textureIdx, texSlot);\n    return false;\n  }\n\n  let gltfTex = gltf.textures[textureIdx];\n\n  if (gltfTex == undefined) {\n    console.warn(\"Texture is undefined: \" + textureIdx);\n    return false;\n  }\n\n  const image = gltf.images[gltfTex.source];\n  if (image == undefined) {\n    console.warn(\"Image is undefined for texture: \" + gltfTex.source);\n    return false;\n  }\n\n  if (gltfTex.glTexture == undefined) {\n    gltfTex.glTexture = image.image;\n  }\n\n  // ===== bind =====\n  gl.activeTexture(gl.TEXTURE0 + texSlot);\n  gl.bindTexture(gltfTex.type, gltfTex.glTexture);\n  gl.uniform1i(loc, texSlot);\n  // ================\n\n  return true;\n}\n\nexport async function loadMaterialResources(gl: WebGL2RenderingContext) {\n  const resources = new Resources();\n\n  const sampler = getSampler(gl.LINEAR, gl.LINEAR_MIPMAP_LINEAR, gl.REPEAT, gl.REPEAT);\n  resources.samplers.push(sampler);\n\n  const type = gl.TEXTURE_2D;\n  const images = await loadHTMLImages([normalUrl0, normalUrl1, normalUrl2]);\n\n  images.forEach((image, i) => {\n    const texture = gl.createTexture()!;\n\n    gl.bindTexture(type, texture);\n    setSampler(gl, sampler, type);\n\n    gl.texImage2D(type, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    gl.generateMipmap(type);\n\n    resources.images.push(getImage(type, texture));\n    resources.textures.push(getTexture(0, i, type));\n  });\n  return resources;\n}\n\nexport async function loadEnvironment(gl: WebGL2RenderingContext, hdrFileName: string) {\n  const response = await fetch(hdrFileName);\n  const data = await response.arrayBuffer();\n\n  const image = await loadHDR(new Uint8Array(data));\n  if (!image) {\n    throw new Error(\"couldn't load HDR image\");\n  }\n  return _loadEnvironmentFromPanorama(gl, image);\n}\n\nasync function _loadEnvironmentFromPanorama(gl: WebGL2RenderingContext, imageHDR: ImageHDR) {\n  const environment = new EnvResources();\n\n  const environmentFiltering = new iblSampler(gl);\n\n  environmentFiltering.init(imageHDR);\n  environmentFiltering.filterAll();\n\n  // Diffuse (diffuseEnvMap = 0)\n  environment.samplers.push(getSampler(gl.LINEAR, gl.LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE));\n  environment.images.push(getImage(gl.TEXTURE_CUBE_MAP, environmentFiltering.lambertianTextureID));\n  environment.textures.push(getTexture(0, 0, gl.TEXTURE_CUBE_MAP));\n\n  // Specular (specularEnvMap = 1)\n  environment.samplers.push(getSampler(gl.LINEAR, gl.LINEAR_MIPMAP_LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE));\n  environment.images.push(getImage(gl.TEXTURE_CUBE_MAP, environmentFiltering.ggxTextureID));\n  environment.textures.push(getTexture(1, 1, gl.TEXTURE_CUBE_MAP));\n\n  // Sheen (sheenEnvMap = 2)\n  environment.samplers.push(getSampler(gl.LINEAR, gl.LINEAR_MIPMAP_LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE));\n  environment.images.push(getImage(gl.TEXTURE_CUBE_MAP, environmentFiltering.sheenTextureID));\n  environment.textures.push(getTexture(2, 2, gl.TEXTURE_CUBE_MAP));\n\n  // GGX (lut = 3)\n  environment.samplers.push(getSampler(gl.LINEAR, gl.LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE));\n  environment.images.push(getImage(gl.TEXTURE_2D, environmentFiltering.ggxLutTextureID));\n  environment.textures.push(getTexture(3, 3, gl.TEXTURE_2D));\n\n  // Sheen (sampler index = 3, sheenLUT = 4)\n  environment.images.push(getImage(gl.TEXTURE_2D, environmentFiltering.charlieLutTextureID));\n  environment.textures.push(getTexture(3, 4, gl.TEXTURE_2D));\n\n  environment.mipCount = environmentFiltering.mipmapLevels;\n\n  return environment;\n}\n","\"use strict\";\n\nvar min2phase = (function() {\n\tvar USE_TWIST_FLIP_PRUN = true;\n\tvar PARTIAL_INIT_LEVEL = 2;\n\n\tvar MAX_PRE_MOVES = 20;\n\tvar TRY_INVERSE = true;\n\tvar TRY_THREE_AXES = true;\n\n\tvar USE_COMBP_PRUN = true; //USE_TWIST_FLIP_PRUN;\n\tvar USE_CONJ_PRUN = USE_TWIST_FLIP_PRUN;\n\tvar MIN_P1LENGTH_PRE = 7;\n\tvar MAX_DEPTH2 = 13;\n\n\tvar INVERSE_SOLUTION = 0x2;\n\n\tfunction Search() {\n\t\tthis.move = [];\n\t\tthis.moveSol = [];\n\n\t\tthis.nodeUD = [];\n\n\t\tthis.valid1 = 0;\n\t\tthis.allowShorter = false;\n\t\tthis.cc = new CubieCube();\n\t\tthis.urfCubieCube = [];\n\t\tthis.urfCoordCube = [];\n\t\tthis.phase1Cubie = [];\n\n\t\tthis.preMoveCubes = [];\n\t\tthis.preMoves = [];\n\t\tthis.preMoveLen = 0;\n\t\tthis.maxPreMoves = 0;\n\n\t\tthis.isRec = false;\n\t\tfor (var i = 0; i < 21; i++) {\n\t\t\tthis.nodeUD[i] = new CoordCube();\n\t\t\tthis.phase1Cubie[i] = new CubieCube();\n\t\t}\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tthis.urfCubieCube[i] = new CubieCube();\n\t\t\tthis.urfCoordCube[i] = new CoordCube();\n\t\t}\n\t\tfor (var i = 0; i < MAX_PRE_MOVES; i++) {\n\t\t\tthis.preMoveCubes[i + 1] = new CubieCube();\n\t\t}\n\t}\n\n\tvar Ux1 = 0;\n\tvar Ux2 = 1;\n\tvar Ux3 = 2;\n\tvar Rx1 = 3;\n\tvar Rx2 = 4;\n\tvar Rx3 = 5;\n\tvar Fx1 = 6;\n\tvar Fx2 = 7;\n\tvar Fx3 = 8;\n\tvar Dx1 = 9;\n\tvar Dx2 = 10;\n\tvar Dx3 = 11;\n\tvar Lx1 = 12;\n\tvar Lx2 = 13;\n\tvar Lx3 = 14;\n\tvar Bx1 = 15;\n\tvar Bx2 = 16;\n\tvar Bx3 = 17;\n\n\tvar N_MOVES = 18;\n\tvar N_MOVES2 = 10;\n\tvar N_FLIP = 2048;\n\tvar N_FLIP_SYM = 336;\n\tvar N_TWIST = 2187;\n\tvar N_TWIST_SYM = 324;\n\tvar N_PERM = 40320;\n\tvar N_PERM_SYM = 2768;\n\tvar N_MPERM = 24;\n\tvar N_SLICE = 495;\n\tvar N_COMB = USE_COMBP_PRUN ? 140 : 70;\n\tvar P2_PARITY_MOVE = USE_COMBP_PRUN ? 0xA5 : 0;\n\n\tvar SYM_E2C_MAGIC = 0x00DDDD00;\n\tvar Cnk = [];\n\tvar fact = [1];\n\tvar move2str = [\n\t\t\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\",\n\t\t\"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"\n\t];\n\tvar ud2std = [Ux1, Ux2, Ux3, Rx2, Fx2, Dx1, Dx2, Dx3, Lx2, Bx2, Rx1, Rx3, Fx1, Fx3, Lx1, Lx3, Bx1, Bx3];\n\tvar std2ud = [];\n\tvar ckmv2bit = [];\n\tvar urfMove = [\n\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],\n\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5, 15, 16, 17, 9, 10, 11, 12, 13, 14],\n\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2, 12, 13, 14, 15, 16, 17, 9, 10, 11],\n\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6, 11, 10, 9, 14, 13, 12, 17, 16, 15],\n\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3, 17, 16, 15, 11, 10, 9, 14, 13, 12],\n\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0, 14, 13, 12, 17, 16, 15, 11, 10, 9]\n\t];\n\n\t{ // init util\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tstd2ud[ud2std[i]] = i;\n\t\t}\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\tvar ix = ~~(ud2std[i] / 3);\n\t\t\tckmv2bit[i] = 0;\n\t\t\tfor (var j = 0; j < 10; j++) {\n\t\t\t\tvar jx = ~~(ud2std[j] / 3);\n\t\t\t\tckmv2bit[i] |= ((ix == jx) || ((ix % 3 == jx % 3) && (ix >= jx)) ? 1 : 0) << j;\n\t\t\t}\n\t\t}\n\t\tckmv2bit[10] = 0;\n\t\tfor (var i = 0; i < 13; i++) {\n\t\t\tCnk[i] = [];\n\t\t\tfact[i + 1] = fact[i] * (i + 1);\n\t\t\tCnk[i][0] = Cnk[i][i] = 1;\n\t\t\tfor (var j = 1; j < 13; j++) {\n\t\t\t\tCnk[i][j] = j <= i ? Cnk[i - 1][j - 1] + Cnk[i - 1][j] : 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setVal(val0, val, isEdge) {\n\t\treturn isEdge ? (val << 1 | val0 & 1) : (val | val0 & 0xf8);\n\t}\n\n\tfunction getVal(val0, isEdge) {\n\t\treturn isEdge ? val0 >> 1 : val0 & 7;\n\t}\n\n\tfunction setPruning(table, index, value) {\n\t\ttable[index >> 3] ^= value << (index << 2); // index << 2 <=> (index & 7) << 2\n\t}\n\n\tfunction getPruning(table, index) {\n\t\treturn table[index >> 3] >> (index << 2) & 0xf; // index << 2 <=> (index & 7) << 2\n\t}\n\n\tfunction getPruningMax(maxValue, table, index) {\n\t\treturn Math.min(maxValue, table[index >> 3] >> (index << 2) & 0xf);\n\t}\n\n\tfunction hasZero(val) {\n\t\treturn ((val - 0x11111111) & ~val & 0x88888888) != 0;\n\t}\n\n\tfunction ESym2CSym(idx) {\n\t\treturn idx ^ (SYM_E2C_MAGIC >> ((idx & 0xf) << 1) & 3);\n\t}\n\n\tfunction getPermSymInv(idx, sym, isCorner) {\n\t\tvar idxi = PermInvEdgeSym[idx];\n\t\tif (isCorner) {\n\t\t\tidxi = ESym2CSym(idxi);\n\t\t}\n\t\treturn idxi & 0xfff0 | SymMult[idxi & 0xf][sym];\n\t}\n\n\tfunction CubieCube() {\n\t\tthis.ca = [0, 1, 2, 3, 4, 5, 6, 7];\n\t\tthis.ea = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22];\n\t}\n\n\tfunction setNPerm(arr, idx, n, isEdge) {\n\t\tn--;\n\t\tvar val = 0x76543210;\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\tvar p = fact[n - i];\n\t\t\tvar v = ~~(idx / p);\n\t\t\tidx %= p;\n\t\t\tv <<= 2;\n\t\t\tarr[i] = setVal(arr[i], val >> v & 0xf, isEdge);\n\t\t\tvar m = (1 << v) - 1;\n\t\t\tval = (val & m) + (val >> 4 & ~m);\n\t\t}\n\t\tarr[n] = setVal(arr[n], val & 0xf, isEdge);\n\t}\n\n\tfunction getNPerm(arr, n, isEdge) {\n\t\tvar idx = 0,\n\t\t\tval = 0x76543210;\n\t\tfor (var i = 0; i < n - 1; ++i) {\n\t\t\tvar v = getVal(arr[i], isEdge) << 2;\n\t\t\tidx = (n - i) * idx + (val >> v & 0xf);\n\t\t\tval -= 0x11111110 << v;\n\t\t}\n\t\treturn idx;\n\t}\n\n\tfunction setNPermFull(arr, idx, n, isEdge) {\n\t\tarr[n - 1] = setVal(arr[n - 1], 0, isEdge);;\n\t\tfor (var i = n - 2; i >= 0; --i) {\n\t\t\tarr[i] = setVal(arr[i], idx % (n - i), isEdge);\n\t\t\tidx = ~~(idx / (n - i));\n\t\t\tfor (var j = i + 1; j < n; ++j) {\n\t\t\t\tif (getVal(arr[j], isEdge) >= getVal(arr[i], isEdge)) {\n\t\t\t\t\tarr[j] = setVal(arr[j], getVal(arr[j], isEdge) + 1, isEdge);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getNPermFull(arr, n, isEdge) {\n\t\tvar idx = 0;\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\tidx *= n - i;\n\t\t\tfor (var j = i + 1; j < n; ++j) {\n\t\t\t\tif (getVal(arr[j], isEdge) < getVal(arr[i], isEdge)) {\n\t\t\t\t\t++idx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tfunction getComb(arr, mask, isEdge) {\n\t\tvar end = arr.length - 1;\n\t\tvar idxC = 0,\n\t\t\tr = 4;\n\t\tfor (var i = end; i >= 0; i--) {\n\t\t\tvar perm = getVal(arr[i], isEdge);\n\t\t\tif ((perm & 0xc) == mask) {\n\t\t\t\tidxC += Cnk[i][r--];\n\t\t\t}\n\t\t}\n\t\treturn idxC;\n\t}\n\n\tfunction setComb(arr, idxC, mask, isEdge) {\n\t\tvar end = arr.length - 1;\n\t\tvar r = 4,\n\t\t\tfill = end;\n\t\tfor (var i = end; i >= 0; i--) {\n\t\t\tif (idxC >= Cnk[i][r]) {\n\t\t\t\tidxC -= Cnk[i][r--];\n\t\t\t\tarr[i] = setVal(arr[i], r | mask, isEdge);\n\t\t\t} else {\n\t\t\t\tif ((fill & 0xc) == mask) {\n\t\t\t\t\tfill -= 4;\n\t\t\t\t}\n\t\t\t\tarr[i] = setVal(arr[i], fill--, isEdge);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getNParity(idx, n) {\n\t\tvar p = 0;\n\t\tfor (var i = n - 2; i >= 0; i--) {\n\t\t\tp ^= idx % (n - i);\n\t\t\tidx = ~~(idx / (n - i));\n\t\t}\n\t\treturn p & 1;\n\t}\n\tCubieCube.EdgeMult = function(a, b, prod) {\n\t\tfor (var ed = 0; ed < 12; ed++) {\n\t\t\tprod.ea[ed] = a.ea[b.ea[ed] >> 1] ^ (b.ea[ed] & 1);\n\t\t}\n\t}\n\tCubieCube.CornMult = function(a, b, prod) {\n\t\tfor (var corn = 0; corn < 8; corn++) {\n\t\t\tvar ori = ((a.ca[b.ca[corn] & 7] >> 3) + (b.ca[corn] >> 3)) % 3;\n\t\t\tprod.ca[corn] = a.ca[b.ca[corn] & 7] & 7 | ori << 3;\n\t\t}\n\t}\n\tCubieCube.CornMultFull = function(a, b, prod) {\n\t\tfor (var corn = 0; corn < 8; corn++) {\n\t\t\tvar oriA = a.ca[b.ca[corn] & 7] >> 3;\n\t\t\tvar oriB = b.ca[corn] >> 3;\n\t\t\tvar ori = oriA + ((oriA < 3) ? oriB : 6 - oriB);\n\t\t\tori = ori % 3 + ((oriA < 3) == (oriB < 3) ? 0 : 3);\n\t\t\tprod.ca[corn] = a.ca[b.ca[corn] & 7] & 7 | ori << 3;\n\t\t}\n\t}\n\tCubieCube.CornConjugate = function(a, idx, b) {\n\t\tvar sinv = SymCube[SymMultInv[0][idx]];\n\t\tvar s = SymCube[idx];\n\t\tfor (var corn = 0; corn < 8; corn++) {\n\t\t\tvar oriA = sinv.ca[a.ca[s.ca[corn] & 7] & 7] >> 3;\n\t\t\tvar oriB = a.ca[s.ca[corn] & 7] >> 3;\n\t\t\tvar ori = (oriA < 3) ? oriB : (3 - oriB) % 3;\n\t\t\tb.ca[corn] = sinv.ca[a.ca[s.ca[corn] & 7] & 7] & 7 | ori << 3;\n\t\t}\n\t}\n\tCubieCube.EdgeConjugate = function(a, idx, b) {\n\t\tvar sinv = SymCube[SymMultInv[0][idx]];\n\t\tvar s = SymCube[idx];\n\t\tfor (var ed = 0; ed < 12; ed++) {\n\t\t\tb.ea[ed] = sinv.ea[a.ea[s.ea[ed] >> 1] >> 1] ^ (a.ea[s.ea[ed] >> 1] & 1) ^ (s.ea[ed] & 1);\n\t\t}\n\t}\n\tCubieCube.prototype.init = function(ca, ea) {\n\t\tthis.ca = ca.slice();\n\t\tthis.ea = ea.slice();\n\t\treturn this;\n\t}\n\tCubieCube.prototype.initCoord = function(cperm, twist, eperm, flip) {\n\t\tsetNPerm(this.ca, cperm, 8, false);\n\t\tthis.setTwist(twist);\n\t\tsetNPermFull(this.ea, eperm, 12, true);\n\t\tthis.setFlip(flip);\n\t\treturn this;\n\t}\n\tCubieCube.prototype.isEqual = function(c) {\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\tif (this.ca[i] != c.ca[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tif (this.ea[i] != c.ea[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tCubieCube.prototype.setFlip = function(idx) {\n\t\tvar parity = 0,\n\t\t\tval;\n\t\tfor (var i = 10; i >= 0; i--, idx >>= 1) {\n\t\t\tparity ^= (val = idx & 1);\n\t\t\tthis.ea[i] = this.ea[i] & 0xfe | val;\n\t\t}\n\t\tthis.ea[11] = this.ea[11] & 0xfe | parity;\n\t}\n\tCubieCube.prototype.getFlip = function() {\n\t\tvar idx = 0;\n\t\tfor (var i = 0; i < 11; i++) {\n\t\t\tidx = idx << 1 | this.ea[i] & 1;\n\t\t}\n\t\treturn idx;\n\t}\n\tCubieCube.prototype.getFlipSym = function() {\n\t\treturn FlipR2S[this.getFlip()];\n\t}\n\tCubieCube.prototype.setTwist = function(idx) {\n\t\tvar twst = 15,\n\t\t\tval;\n\t\tfor (var i = 6; i >= 0; i--, idx = ~~(idx / 3)) {\n\t\t\ttwst -= (val = idx % 3);\n\t\t\tthis.ca[i] = this.ca[i] & 0x7 | val << 3;\n\t\t}\n\t\tthis.ca[7] = this.ca[7] & 0x7 | (twst % 3) << 3;\n\t}\n\tCubieCube.prototype.getTwist = function() {\n\t\tvar idx = 0;\n\t\tfor (var i = 0; i < 7; i++) {\n\t\t\tidx += (idx << 1) + (this.ca[i] >> 3);\n\t\t}\n\t\treturn idx;\n\t}\n\tCubieCube.prototype.getTwistSym = function() {\n\t\treturn TwistR2S[this.getTwist()];\n\n\t}\n\tCubieCube.prototype.setCPerm = function(idx) {\n\t\tsetNPerm(this.ca, idx, 8, false);\n\t}\n\tCubieCube.prototype.getCPerm = function() {\n\t\treturn getNPerm(this.ca, 8, false);\n\t}\n\tCubieCube.prototype.getCPermSym = function() {\n\t\treturn ESym2CSym(EPermR2S[getNPerm(this.ca, 8, false)]);\n\t}\n\tCubieCube.prototype.setEPerm = function(idx) {\n\t\tsetNPerm(this.ea, idx, 8, true);\n\t}\n\tCubieCube.prototype.getEPerm = function() {\n\t\treturn getNPerm(this.ea, 8, true);\n\t}\n\tCubieCube.prototype.getEPermSym = function() {\n\t\treturn EPermR2S[getNPerm(this.ea, 8, true)];\n\t}\n\tCubieCube.prototype.getUDSlice = function() {\n\t\treturn 494 - getComb(this.ea, 8, true);\n\t}\n\tCubieCube.prototype.setUDSlice = function(idx) {\n\t\tsetComb(this.ea, 494 - idx, 8, true);\n\t}\n\tCubieCube.prototype.getMPerm = function() {\n\t\treturn getNPermFull(this.ea, 12, true) % 24;\n\t}\n\tCubieCube.prototype.setMPerm = function(idx) {\n\t\tsetNPermFull(this.ea, idx, 12, true);\n\t}\n\tCubieCube.prototype.getCComb = function() {\n\t\treturn getComb(this.ca, 0, false);\n\t}\n\tCubieCube.prototype.setCComb = function(idx) {\n\t\tsetComb(this.ca, idx, 0, false);\n\t}\n\tCubieCube.prototype.URFConjugate = function() {\n\t\tvar temps = new CubieCube();\n\t\tCubieCube.CornMult(CubieCube.urf2, this, temps);\n\t\tCubieCube.CornMult(temps, CubieCube.urf1, this);\n\t\tCubieCube.EdgeMult(CubieCube.urf2, this, temps);\n\t\tCubieCube.EdgeMult(temps, CubieCube.urf1, this);\n\t}\n\tvar cornerFacelet = [\n\t\t[8, 9, 20],\n\t\t[6, 18, 38],\n\t\t[0, 36, 47],\n\t\t[2, 45, 11],\n\t\t[29, 26, 15],\n\t\t[27, 44, 24],\n\t\t[33, 53, 42],\n\t\t[35, 17, 51]\n\t];\n\tvar edgeFacelet = [\n\t\t[5, 10],\n\t\t[7, 19],\n\t\t[3, 37],\n\t\t[1, 46],\n\t\t[32, 16],\n\t\t[28, 25],\n\t\t[30, 43],\n\t\t[34, 52],\n\t\t[23, 12],\n\t\t[21, 41],\n\t\t[50, 39],\n\t\t[48, 14]\n\t];\n\tCubieCube.prototype.toFaceCube = function(cFacelet, eFacelet) {\n\t\tcFacelet = cFacelet || cornerFacelet;\n\t\teFacelet = eFacelet || edgeFacelet;\n\t\tvar ts = \"URFDLB\";\n\t\tvar f = [];\n\t\tfor (var i = 0; i < 54; i++) {\n\t\t\tf[i] = ts[~~(i / 9)];\n\t\t}\n\t\tfor (var c = 0; c < 8; c++) {\n\t\t\tvar j = this.ca[c] & 0x7; // cornercubie with index j is at\n\t\t\tvar ori = this.ca[c] >> 3; // Orientation of this cubie\n\t\t\tfor (var n = 0; n < 3; n++)\n\t\t\t\tf[cFacelet[c][(n + ori) % 3]] = ts[~~(cFacelet[j][n] / 9)];\n\t\t}\n\t\tfor (var e = 0; e < 12; e++) {\n\t\t\tvar j = this.ea[e] >> 1; // edgecubie with index j is at edgeposition\n\t\t\tvar ori = this.ea[e] & 1; // Orientation of this cubie\n\t\t\tfor (var n = 0; n < 2; n++)\n\t\t\t\tf[eFacelet[e][(n + ori) % 2]] = ts[~~(eFacelet[j][n] / 9)];\n\t\t}\n\t\treturn f.join(\"\");\n\t}\n\tCubieCube.prototype.invFrom = function(cc) {\n\t\tfor (var edge = 0; edge < 12; edge++) {\n\t\t\tthis.ea[cc.ea[edge] >> 1] = edge << 1 | cc.ea[edge] & 1;\n\t\t}\n\t\tfor (var corn = 0; corn < 8; corn++) {\n\t\t\tthis.ca[cc.ca[corn] & 0x7] = corn | 0x20 >> (cc.ca[corn] >> 3) & 0x18;\n\t\t}\n\t\treturn this;\n\t}\n\tCubieCube.prototype.fromFacelet = function(facelet, cFacelet, eFacelet) {\n\t\tcFacelet = cFacelet || cornerFacelet;\n\t\teFacelet = eFacelet || edgeFacelet;\n\t\tvar count = 0;\n\t\tvar f = [];\n\t\tvar centers = facelet[4] + facelet[13] + facelet[22] + facelet[31] + facelet[40] + facelet[49];\n\t\tfor (var i = 0; i < 54; ++i) {\n\t\t\tf[i] = centers.indexOf(facelet[i]);\n\t\t\tif (f[i] == -1) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tcount += 1 << (f[i] << 2);\n\t\t}\n\t\tif (count != 0x999999) {\n\t\t\treturn -1;\n\t\t}\n\t\tvar col1, col2, i, j, ori;\n\t\tfor (i = 0; i < 8; ++i) {\n\t\t\tfor (ori = 0; ori < 3; ++ori)\n\t\t\t\tif (f[cFacelet[i][ori]] == 0 || f[cFacelet[i][ori]] == 3)\n\t\t\t\t\tbreak;\n\t\t\tcol1 = f[cFacelet[i][(ori + 1) % 3]];\n\t\t\tcol2 = f[cFacelet[i][(ori + 2) % 3]];\n\t\t\tfor (j = 0; j < 8; ++j) {\n\t\t\t\tif (col1 == ~~(cFacelet[j][1] / 9) && col2 == ~~(cFacelet[j][2] / 9)) {\n\t\t\t\t\tthis.ca[i] = j | ori % 3 << 3;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < 12; ++i) {\n\t\t\tfor (j = 0; j < 12; ++j) {\n\t\t\t\tif (f[eFacelet[i][0]] == ~~(eFacelet[j][0] / 9) && f[eFacelet[i][1]] == ~~(eFacelet[j][1] / 9)) {\n\t\t\t\t\tthis.ea[i] = j << 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (f[eFacelet[i][0]] == ~~(eFacelet[j][1] / 9) && f[eFacelet[i][1]] == ~~(eFacelet[j][0] / 9)) {\n\t\t\t\t\tthis.ea[i] = j << 1 | 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction CoordCube() {\n\t\tthis.twist = 0;\n\t\tthis.tsym = 0;\n\t\tthis.flip = 0;\n\t\tthis.fsym = 0;\n\t\tthis.slice = 0;\n\t\tthis.prun = 0;\n\t\tthis.twistc = 0;\n\t\tthis.flipc = 0;\n\t}\n\tCoordCube.prototype.set = function(node) {\n\t\tthis.twist = node.twist;\n\t\tthis.tsym = node.tsym;\n\t\tthis.flip = node.flip;\n\t\tthis.fsym = node.fsym;\n\t\tthis.slice = node.slice;\n\t\tthis.prun = node.prun;\n\t\tif (USE_CONJ_PRUN) {\n\t\t\tthis.twistc = node.twistc;\n\t\t\tthis.flipc = node.flipc;\n\t\t}\n\t}\n\tCoordCube.prototype.calcPruning = function(isPhase1) {\n\t\tthis.prun = Math.max(\n\t\t\tMath.max(\n\t\t\t\tgetPruningMax(UDSliceTwistPrunMax, UDSliceTwistPrun,\n\t\t\t\t\tthis.twist * N_SLICE + UDSliceConj[this.slice][this.tsym]),\n\t\t\t\tgetPruningMax(UDSliceFlipPrunMax, UDSliceFlipPrun,\n\t\t\t\t\tthis.flip * N_SLICE + UDSliceConj[this.slice][this.fsym])),\n\t\t\tMath.max(\n\t\t\t\tUSE_CONJ_PRUN ? getPruningMax(TwistFlipPrunMax, TwistFlipPrun,\n\t\t\t\t\t(this.twistc >> 3) << 11 | FlipS2RF[this.flipc ^ (this.twistc & 7)]) : 0,\n\t\t\t\tUSE_TWIST_FLIP_PRUN ? getPruningMax(TwistFlipPrunMax, TwistFlipPrun,\n\t\t\t\t\tthis.twist << 11 | FlipS2RF[this.flip << 3 | (this.fsym ^ this.tsym)]) : 0));\n\t}\n\tCoordCube.prototype.setWithPrun = function(cc, depth) {\n\t\tthis.twist = cc.getTwistSym();\n\t\tthis.flip = cc.getFlipSym();\n\t\tthis.tsym = this.twist & 7;\n\t\tthis.twist = this.twist >> 3;\n\t\tthis.prun = USE_TWIST_FLIP_PRUN ? getPruningMax(TwistFlipPrunMax, TwistFlipPrun,\n\t\t\tthis.twist << 11 | FlipS2RF[this.flip ^ this.tsym]) : 0;\n\t\tif (this.prun > depth) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.fsym = this.flip & 7;\n\t\tthis.flip = this.flip >> 3;\n\t\tthis.slice = cc.getUDSlice();\n\t\tthis.prun = Math.max(this.prun, Math.max(\n\t\t\tgetPruningMax(UDSliceTwistPrunMax, UDSliceTwistPrun,\n\t\t\t\tthis.twist * N_SLICE + UDSliceConj[this.slice][this.tsym]),\n\t\t\tgetPruningMax(UDSliceFlipPrunMax, UDSliceFlipPrun,\n\t\t\t\tthis.flip * N_SLICE + UDSliceConj[this.slice][this.fsym])));\n\t\tif (this.prun > depth) {\n\t\t\treturn false;\n\t\t}\n\t\tif (USE_CONJ_PRUN) {\n\t\t\tvar pc = new CubieCube();\n\t\t\tCubieCube.CornConjugate(cc, 1, pc);\n\t\t\tCubieCube.EdgeConjugate(cc, 1, pc);\n\t\t\tthis.twistc = pc.getTwistSym();\n\t\t\tthis.flipc = pc.getFlipSym();\n\t\t\tthis.prun = Math.max(this.prun,\n\t\t\t\tgetPruningMax(TwistFlipPrunMax, TwistFlipPrun,\n\t\t\t\t\t(this.twistc >> 3) << 11 | FlipS2RF[this.flipc ^ (this.twistc & 7)]));\n\t\t}\n\t\treturn this.prun <= depth;\n\t}\n\tCoordCube.prototype.doMovePrun = function(cc, m, isPhase1) {\n\t\tthis.slice = UDSliceMove[cc.slice][m];\n\t\tthis.flip = FlipMove[cc.flip][Sym8Move[m << 3 | cc.fsym]];\n\t\tthis.fsym = (this.flip & 7) ^ cc.fsym;\n\t\tthis.flip >>= 3;\n\t\tthis.twist = TwistMove[cc.twist][Sym8Move[m << 3 | cc.tsym]];\n\t\tthis.tsym = (this.twist & 7) ^ cc.tsym;\n\t\tthis.twist >>= 3;\n\t\tthis.prun = Math.max(\n\t\t\tMath.max(\n\t\t\t\tgetPruningMax(UDSliceTwistPrunMax, UDSliceTwistPrun,\n\t\t\t\t\tthis.twist * N_SLICE + UDSliceConj[this.slice][this.tsym]),\n\t\t\t\tgetPruningMax(UDSliceFlipPrunMax, UDSliceFlipPrun,\n\t\t\t\t\tthis.flip * N_SLICE + UDSliceConj[this.slice][this.fsym])),\n\t\t\tUSE_TWIST_FLIP_PRUN ? getPruningMax(TwistFlipPrunMax, TwistFlipPrun,\n\t\t\t\tthis.twist << 11 | FlipS2RF[this.flip << 3 | (this.fsym ^ this.tsym)]) : 0);\n\t\treturn this.prun;\n\t}\n\tCoordCube.prototype.doMovePrunConj = function(cc, m) {\n\t\tm = SymMove[3][m];\n\t\tthis.flipc = FlipMove[cc.flipc >> 3][Sym8Move[m << 3 | cc.flipc & 7]] ^ (cc.flipc & 7);\n\t\tthis.twistc = TwistMove[cc.twistc >> 3][Sym8Move[m << 3 | cc.twistc & 7]] ^ (cc.twistc & 7);\n\t\treturn getPruningMax(TwistFlipPrunMax, TwistFlipPrun,\n\t\t\t(this.twistc >> 3) << 11 | FlipS2RF[this.flipc ^ (this.twistc & 7)]);\n\t}\n\tSearch.prototype.solution = function(facelets, maxDepth, probeMax, probeMin, verbose) {\n\t\tinitPrunTables();\n\t\tvar check = this.verify(facelets);\n\t\tif (check != 0) {\n\t\t\treturn \"Error \" + Math.abs(check);\n\t\t}\n\t\tif (maxDepth === undefined) {\n\t\t\tmaxDepth = 21;\n\t\t}\n\t\tif (probeMax === undefined) {\n\t\t\tprobeMax = 1e9;\n\t\t}\n\t\tif (probeMin === undefined) {\n\t\t\tprobeMin = 0;\n\t\t}\n\t\tif (verbose === undefined) {\n\t\t\tverbose = 0;\n\t\t}\n\t\tthis.sol = maxDepth + 1;\n\t\tthis.probe = 0;\n\t\tthis.probeMax = probeMax;\n\t\tthis.probeMin = Math.min(probeMin, probeMax);\n\t\tthis.verbose = verbose;\n\t\tthis.moveSol = null;\n\t\tthis.isRec = false;\n\t\tthis.initSearch();\n\t\treturn this.search();\n\t}\n\n\tSearch.prototype.initSearch = function() {\n\t\tthis.conjMask = (TRY_INVERSE ? 0 : 0x38) | (TRY_THREE_AXES ? 0 : 0x36);\n\t\tthis.maxPreMoves = this.conjMask > 7 ? 0 : MAX_PRE_MOVES;\n\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tthis.urfCubieCube[i].init(this.cc.ca, this.cc.ea);\n\t\t\tthis.urfCoordCube[i].setWithPrun(this.urfCubieCube[i], 20);\n\t\t\tthis.cc.URFConjugate();\n\t\t\tif (i % 3 == 2) {\n\t\t\t\tvar tmp = new CubieCube().invFrom(this.cc);\n\t\t\t\tthis.cc.init(tmp.ca, tmp.ea);\n\t\t\t}\n\t\t}\n\t}\n\n\tSearch.prototype.next = function(probeMax, probeMin, verbose) {\n\t\tif (probeMax === undefined) {\n\t\t\tprobeMax = 1e9;\n\t\t}\n\t\tif (probeMin === undefined) {\n\t\t\tprobeMin = 0;\n\t\t}\n\t\tif (verbose === undefined) {\n\t\t\tverbose = 0;\n\t\t}\n\t\tthis.probe = 0;\n\t\tthis.probeMax = probeMax;\n\t\tthis.probeMin = Math.min(probeMin, probeMax);\n\t\tthis.moveSol = null;\n\t\tthis.isRec = true;\n\t\tthis.verbose = verbose;\n\t\treturn this.search();\n\t}\n\n\tSearch.prototype.verify = function(facelets) {\n\t\tif (this.cc.fromFacelet(facelets) == -1) {\n\t\t\treturn -1;\n\t\t}\n\t\tvar sum = 0;\n\t\tvar edgeMask = 0;\n\t\tfor (var e = 0; e < 12; e++) {\n\t\t\tedgeMask |= 1 << (this.cc.ea[e] >> 1);\n\t\t\tsum ^= this.cc.ea[e] & 1;\n\t\t}\n\t\tif (edgeMask != 0xfff) {\n\t\t\treturn -2; // missing edges\n\t\t}\n\t\tif (sum != 0) {\n\t\t\treturn -3;\n\t\t}\n\t\tvar cornMask = 0;\n\t\tsum = 0;\n\t\tfor (var c = 0; c < 8; c++) {\n\t\t\tcornMask |= 1 << (this.cc.ca[c] & 7);\n\t\t\tsum += this.cc.ca[c] >> 3;\n\t\t}\n\t\tif (cornMask != 0xff) {\n\t\t\treturn -4; // missing corners\n\t\t}\n\t\tif (sum % 3 != 0) {\n\t\t\treturn -5; // twisted corner\n\t\t}\n\t\tif ((getNParity(getNPermFull(this.cc.ea, 12, true), 12) ^ getNParity(this.cc.getCPerm(), 8)) != 0) {\n\t\t\treturn -6; // parity error\n\t\t}\n\t\treturn 0; // cube ok\n\t}\n\n\tSearch.prototype.phase1PreMoves = function(maxl, lm, cc) {\n\t\tthis.preMoveLen = this.maxPreMoves - maxl;\n\t\tif (this.isRec ? (this.depth1 == this.length1 - this.preMoveLen) :\n\t\t\t(this.preMoveLen == 0 || (0x36FB7 >> lm & 1) == 0)) {\n\t\t\tthis.depth1 = this.length1 - this.preMoveLen;\n\t\t\tthis.phase1Cubie[0].init(cc.ca, cc.ea) /* = cc*/ ;\n\t\t\tthis.allowShorter = this.depth1 == MIN_P1LENGTH_PRE && this.preMoveLen != 0;\n\n\t\t\tif (this.nodeUD[this.depth1 + 1].setWithPrun(cc, this.depth1) &&\n\t\t\t\tthis.phase1(this.nodeUD[this.depth1 + 1], this.depth1, -1) == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (maxl == 0 || this.preMoveLen + MIN_P1LENGTH_PRE >= this.length1) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tvar skipMoves = 0;\n\t\tif (maxl == 1 || this.preMoveLen + 1 + MIN_P1LENGTH_PRE >= this.length1) { //last pre move\n\t\t\tskipMoves |= 0x36FB7; // 11 0110 1111 1011 0111\n\t\t}\n\n\t\tlm = ~~(lm / 3) * 3;\n\t\tfor (var m = 0; m < 18; m++) {\n\t\t\tif (m == lm || m == lm - 9 || m == lm + 9) {\n\t\t\t\tm += 2;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this.isRec && m != this.preMoves[this.maxPreMoves - maxl] || (skipMoves & 1 << m) != 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tCubieCube.CornMult(moveCube[m], cc, this.preMoveCubes[maxl]);\n\t\t\tCubieCube.EdgeMult(moveCube[m], cc, this.preMoveCubes[maxl]);\n\t\t\tthis.preMoves[this.maxPreMoves - maxl] = m;\n\t\t\tvar ret = this.phase1PreMoves(maxl - 1, m, this.preMoveCubes[maxl]);\n\t\t\tif (ret == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\treturn 1;\n\t}\n\n\tSearch.prototype.search = function() {\n\t\tfor (this.length1 = this.isRec ? this.length1 : 0; this.length1 < this.sol; this.length1++) {\n\t\t\tfor (this.urfIdx = this.isRec ? this.urfIdx : 0; this.urfIdx < 6; this.urfIdx++) {\n\t\t\t\tif ((this.conjMask & 1 << this.urfIdx) != 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (this.phase1PreMoves(this.maxPreMoves, -30, this.urfCubieCube[this.urfIdx], 0) == 0) {\n\t\t\t\t\treturn this.moveSol == null ? \"Error 8\" : this.moveSol;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.moveSol == null ? \"Error 7\" : this.moveSol;\n\t}\n\n\tSearch.prototype.initPhase2Pre = function() {\n\t\tthis.isRec = false;\n\t\tif (this.probe >= (this.moveSol == null ? this.probeMax : this.probeMin)) {\n\t\t\treturn 0;\n\t\t}\n\t\t++this.probe;\n\n\t\tfor (var i = this.valid1; i < this.depth1; i++) {\n\t\t\tCubieCube.CornMult(this.phase1Cubie[i], moveCube[this.move[i]], this.phase1Cubie[i + 1]);\n\t\t\tCubieCube.EdgeMult(this.phase1Cubie[i], moveCube[this.move[i]], this.phase1Cubie[i + 1]);\n\t\t}\n\t\tthis.valid1 = this.depth1;\n\n\t\tvar ret = this.initPhase2(this.phase1Cubie[this.depth1]);\n\t\tif (ret == 0 || this.preMoveLen == 0 || ret == 2) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tvar m = ~~(this.preMoves[this.preMoveLen - 1] / 3) * 3 + 1;\n\t\tCubieCube.CornMult(moveCube[m], this.phase1Cubie[this.depth1], this.phase1Cubie[this.depth1 + 1]);\n\t\tCubieCube.EdgeMult(moveCube[m], this.phase1Cubie[this.depth1], this.phase1Cubie[this.depth1 + 1]);\n\n\t\tthis.preMoves[this.preMoveLen - 1] += 2 - this.preMoves[this.preMoveLen - 1] % 3 * 2;\n\t\tret = this.initPhase2(this.phase1Cubie[this.depth1 + 1]);\n\t\tthis.preMoves[this.preMoveLen - 1] += 2 - this.preMoves[this.preMoveLen - 1] % 3 * 2;\n\t\treturn ret;\n\t}\n\tSearch.prototype.initPhase2 = function(phase2Cubie) {\n\t\tvar p2corn = phase2Cubie.getCPermSym();\n\t\tvar p2csym = p2corn & 0xf;\n\t\tp2corn >>= 4;\n\t\tvar p2edge = phase2Cubie.getEPermSym();\n\t\tvar p2esym = p2edge & 0xf;\n\t\tp2edge >>= 4;\n\t\tvar p2mid = phase2Cubie.getMPerm();\n\t\tvar p2edgei = getPermSymInv(p2edge, p2esym, false);\n\t\tvar p2corni = getPermSymInv(p2corn, p2csym, true);\n\t\tvar prun = Math.max(\n\t\t\tgetPruningMax(MCPermPrunMax, MCPermPrun,\n\t\t\t\tp2corn * N_MPERM + MPermConj[p2mid][p2csym]),\n\t\t\tgetPruningMax(EPermCCombPPrunMax, EPermCCombPPrun,\n\t\t\t\tp2edge * N_COMB + CCombPConj[Perm2CombP[p2corn] & 0xff][SymMultInv[p2esym][p2csym]]),\n\t\t\tgetPruningMax(EPermCCombPPrunMax, EPermCCombPPrun,\n\t\t\t\t(p2edgei >> 4) * N_COMB + CCombPConj[Perm2CombP[p2corni >> 4] & 0xff][SymMultInv[p2edgei & 0xf][p2corni & 0xf]])\n\t\t);\n\t\tvar maxDep2 = Math.min(MAX_DEPTH2, this.sol - this.length1);\n\t\tif (prun >= maxDep2) {\n\t\t\treturn prun > maxDep2 ? 2 : 1;\n\t\t}\n\t\tvar depth2;\n\t\tfor (depth2 = maxDep2 - 1; depth2 >= prun; depth2--) {\n\t\t\tvar ret = this.phase2(p2edge, p2esym, p2corn, p2csym, p2mid, depth2, this.depth1, 10);\n\t\t\tif (ret < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdepth2 -= ret;\n\t\t\tthis.moveSol = [];\n\t\t\tfor (var i = 0; i < this.depth1 + depth2; i++) {\n\t\t\t\tthis.appendSolMove(this.move[i]);\n\t\t\t}\n\t\t\tfor (var i = this.preMoveLen - 1; i >= 0; i--) {\n\t\t\t\tthis.appendSolMove(this.preMoves[i]);\n\t\t\t}\n\t\t\tthis.sol = this.moveSol.length;\n\t\t\tthis.moveSol = this.solutionToString();\n\t\t}\n\t\tif (depth2 != maxDep2 - 1) { //At least one solution has been found.\n\t\t\treturn this.probe >= this.probeMin ? 0 : 1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tSearch.prototype.phase1 = function(node, maxl, lm) {\n\t\tif (node.prun == 0 && maxl < 5) {\n\t\t\tif (this.allowShorter || maxl == 0) {\n\t\t\t\tthis.depth1 -= maxl;\n\t\t\t\tvar ret = this.initPhase2Pre();\n\t\t\t\tthis.depth1 += maxl;\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\tfor (var axis = 0; axis < 18; axis += 3) {\n\t\t\tif (axis == lm || axis == lm - 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var power = 0; power < 3; power++) {\n\t\t\t\tvar m = axis + power;\n\n\t\t\t\tif (this.isRec && m != this.move[this.depth1 - maxl]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar prun = this.nodeUD[maxl].doMovePrun(node, m, true);\n\t\t\t\tif (prun > maxl) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (prun == maxl) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (USE_CONJ_PRUN) {\n\t\t\t\t\tprun = this.nodeUD[maxl].doMovePrunConj(node, m);\n\t\t\t\t\tif (prun > maxl) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (prun == maxl) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.move[this.depth1 - maxl] = m;\n\t\t\t\tthis.valid1 = Math.min(this.valid1, this.depth1 - maxl);\n\t\t\t\tvar ret = this.phase1(this.nodeUD[maxl], maxl - 1, axis);\n\t\t\t\tif (ret == 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} else if (ret == 2) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 1;\n\t}\n\tSearch.prototype.appendSolMove = function(curMove) {\n\t\tif (this.moveSol.length == 0) {\n\t\t\tthis.moveSol.push(curMove);\n\t\t\treturn;\n\t\t}\n\t\tvar axisCur = ~~(curMove / 3);\n\t\tvar axisLast = ~~(this.moveSol[this.moveSol.length - 1] / 3);\n\t\tif (axisCur == axisLast) {\n\t\t\tvar pow = (curMove % 3 + this.moveSol[this.moveSol.length - 1] % 3 + 1) % 4;\n\t\t\tif (pow == 3) {\n\t\t\t\tthis.moveSol.pop();\n\t\t\t} else {\n\t\t\t\tthis.moveSol[this.moveSol.length - 1] = axisCur * 3 + pow;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (this.moveSol.length > 1 &&\n\t\t\taxisCur % 3 == axisLast % 3 &&\n\t\t\taxisCur == ~~(this.moveSol[this.moveSol.length - 2] / 3)) {\n\t\t\tvar pow = (curMove % 3 + this.moveSol[this.moveSol.length - 2] % 3 + 1) % 4;\n\t\t\tif (pow == 3) {\n\t\t\t\tthis.moveSol[this.moveSol.length - 2] = this.moveSol[this.moveSol.length - 1];\n\t\t\t\tthis.moveSol.pop();\n\t\t\t} else {\n\t\t\t\tthis.moveSol[this.moveSol.length - 2] = axisCur * 3 + pow;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.moveSol.push(curMove);\n\t}\n\tSearch.prototype.phase2 = function(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\t\tif (edge == 0 && corn == 0 && mid == 0) {\n\t\t\treturn maxl;\n\t\t}\n\t\tvar moveMask = ckmv2bit[lm];\n\t\tfor (var m = 0; m < 10; m++) {\n\t\t\tif ((moveMask >> m & 1) != 0) {\n\t\t\t\tm += 0x42 >> m & 3;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar midx = MPermMove[mid][m];\n\t\t\tvar cornx = CPermMove[corn][SymMoveUD[csym][m]];\n\t\t\tvar csymx = SymMult[cornx & 0xf][csym];\n\t\t\tcornx >>= 4;\n\t\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\t\tvar esymx = SymMult[edgex & 0xf][esym];\n\t\t\tedgex >>= 4;\n\t\t\tvar edgei = getPermSymInv(edgex, esymx, false);\n\t\t\tvar corni = getPermSymInv(cornx, csymx, true);\n\t\t\tvar prun = getPruningMax(EPermCCombPPrunMax, EPermCCombPPrun,\n\t\t\t\t(edgei >> 4) * N_COMB + CCombPConj[Perm2CombP[corni >> 4] & 0xff][SymMultInv[edgei & 0xf][corni & 0xf]]);\n\t\t\tif (prun > maxl + 1) {\n\t\t\t\tbreak;\n\t\t\t} else if (prun >= maxl) {\n\t\t\t\tm += 0x42 >> m & 3 & (maxl - prun);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprun = Math.max(\n\t\t\t\tgetPruningMax(EPermCCombPPrunMax, EPermCCombPPrun,\n\t\t\t\t\tedgex * N_COMB + CCombPConj[Perm2CombP[cornx] & 0xff][SymMultInv[esymx][csymx]]),\n\t\t\t\tgetPruningMax(MCPermPrunMax, MCPermPrun,\n\t\t\t\t\tcornx * N_MPERM + MPermConj[midx][csymx])\n\t\t\t);\n\t\t\tif (prun >= maxl) {\n\t\t\t\tm += 0x42 >> m & 3 & (maxl - prun);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar ret = this.phase2(edgex, esymx, cornx, csymx, midx, maxl - 1, depth + 1, m);\n\t\t\tif (ret >= 0) {\n\t\t\t\tthis.move[depth] = ud2std[m];\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tSearch.prototype.solutionToString = function() {\n\t\tvar sb = '';\n\t\tvar urf = (this.verbose & INVERSE_SOLUTION) != 0 ? (this.urfIdx + 3) % 6 : this.urfIdx;\n\t\tif (urf < 3) {\n\t\t\tfor (var s = 0; s < this.moveSol.length; ++s) {\n\t\t\t\tsb += move2str[urfMove[urf][this.moveSol[s]]] + ' ';\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var s = this.moveSol.length - 1; s >= 0; --s) {\n\t\t\t\tsb += move2str[urfMove[urf][this.moveSol[s]]] + ' ';\n\t\t\t}\n\t\t}\n\t\treturn sb;\n\t}\n\n\tvar moveCube = [];\n\tvar SymCube = [];\n\tvar SymMult = [];\n\tvar SymMultInv = [];\n\tvar SymMove = [];\n\tvar SymMoveUD = [];\n\tvar Sym8Move = [];\n\tvar FlipS2R = [];\n\tvar FlipR2S = [];\n\tvar TwistS2R = [];\n\tvar TwistR2S = [];\n\tvar EPermS2R = [];\n\tvar EPermR2S = [];\n\tvar SymStateFlip = [];\n\tvar SymStateTwist = [];\n\tvar SymStatePerm = [];\n\tvar FlipS2RF = [];\n\tvar Perm2CombP = [];\n\tvar PermInvEdgeSym = [];\n\tvar UDSliceMove = [];\n\tvar TwistMove = [];\n\tvar FlipMove = [];\n\tvar UDSliceConj = [];\n\tvar UDSliceTwistPrun = [];\n\tvar UDSliceFlipPrun = [];\n\tvar TwistFlipPrun = [];\n\n\t//phase2\n\tvar CPermMove = [];\n\tvar EPermMove = [];\n\tvar MPermMove = [];\n\tvar MPermConj = [];\n\tvar CCombPMove = []; // = new char[N_COMB][N_MOVES2];\n\tvar CCombPConj = [];\n\tvar MCPermPrun = [];\n\tvar EPermCCombPPrun = [];\n\n\tvar TwistFlipPrunMax = 15;\n\tvar UDSliceTwistPrunMax = 15;\n\tvar UDSliceFlipPrunMax = 15;\n\tvar MCPermPrunMax = 15;\n\tvar EPermCCombPPrunMax = 15;\n\n\t{ //init move cubes\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tmoveCube[i] = new CubieCube()\n\t\t}\n\t\tmoveCube[0].initCoord(15120, 0, 119750400, 0);\n\t\tmoveCube[3].initCoord(21021, 1494, 323403417, 0);\n\t\tmoveCube[6].initCoord(8064, 1236, 29441808, 550);\n\t\tmoveCube[9].initCoord(9, 0, 5880, 0);\n\t\tmoveCube[12].initCoord(1230, 412, 2949660, 0);\n\t\tmoveCube[15].initCoord(224, 137, 328552, 137);\n\t\tfor (var a = 0; a < 18; a += 3) {\n\t\t\tfor (var p = 0; p < 2; p++) {\n\t\t\t\tCubieCube.EdgeMult(moveCube[a + p], moveCube[a], moveCube[a + p + 1]);\n\t\t\t\tCubieCube.CornMult(moveCube[a + p], moveCube[a], moveCube[a + p + 1]);\n\t\t\t}\n\t\t}\n\t\tCubieCube.urf1 = new CubieCube().initCoord(2531, 1373, 67026819, 1367);\n\t\tCubieCube.urf2 = new CubieCube().initCoord(2089, 1906, 322752913, 2040);\n\t}\n\n\tfunction initBasic() {\n\t\t{ //init sym cubes\n\t\t\tvar c = new CubieCube();\n\t\t\tvar d = new CubieCube();\n\t\t\tvar t;\n\n\t\t\tvar f2 = new CubieCube().initCoord(28783, 0, 259268407, 0);\n\t\t\tvar u4 = new CubieCube().initCoord(15138, 0, 119765538, 7);\n\t\t\tvar lr2 = new CubieCube().initCoord(5167, 0, 83473207, 0);\n\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\tlr2.ca[i] |= 3 << 3;\n\t\t\t}\n\t\t\tfor (var i = 0; i < 16; i++) {\n\t\t\t\tSymCube[i] = new CubieCube().init(c.ca, c.ea);\n\t\t\t\tCubieCube.CornMultFull(c, u4, d);\n\t\t\t\tCubieCube.EdgeMult(c, u4, d);\n\t\t\t\tc.init(d.ca, d.ea);\n\t\t\t\tif (i % 4 == 3) {\n\t\t\t\t\tCubieCube.CornMultFull(c, lr2, d);\n\t\t\t\t\tCubieCube.EdgeMult(c, lr2, d);\n\t\t\t\t\tc.init(d.ca, d.ea);\n\t\t\t\t}\n\t\t\t\tif (i % 8 == 7) {\n\t\t\t\t\tCubieCube.CornMultFull(c, f2, d);\n\t\t\t\t\tCubieCube.EdgeMult(c, f2, d);\n\t\t\t\t\tc.init(d.ca, d.ea);\n\t\t\t\t}\n\t\t\t}\n\t\t} { // gen sym tables\n\n\n\t\t\tfor (var i = 0; i < 16; i++) {\n\t\t\t\tSymMult[i] = [];\n\t\t\t\tSymMultInv[i] = [];\n\t\t\t\tSymMove[i] = [];\n\t\t\t\tSym8Move[i] = [];\n\t\t\t\tSymMoveUD[i] = [];\n\t\t\t}\n\t\t\tfor (var i = 0; i < 16; i++) {\n\t\t\t\tfor (var j = 0; j < 16; j++) {\n\t\t\t\t\tSymMult[i][j] = i ^ j ^ (0x14ab4 >> j & i << 1 & 2); // SymMult[i][j] = (i ^ j ^ (0x14ab4 >> j & i << 1 & 2)));\n\t\t\t\t\tSymMultInv[SymMult[i][j]][j] = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar c = new CubieCube();\n\t\t\tfor (var s = 0; s < 16; s++) {\n\t\t\t\tfor (var j = 0; j < 18; j++) {\n\t\t\t\t\tCubieCube.CornConjugate(moveCube[j], SymMultInv[0][s], c);\n\t\t\t\t\toutloop: for (var m = 0; m < 18; m++) {\n\t\t\t\t\t\tfor (var t = 0; t < 8; t++) {\n\t\t\t\t\t\t\tif (moveCube[m].ca[t] != c.ca[t]) {\n\t\t\t\t\t\t\t\tcontinue outloop;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t\t\tSymMoveUD[s][std2ud[j]] = std2ud[m];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (s % 2 == 0) {\n\t\t\t\t\t\tSym8Move[j << 3 | s >> 1] = SymMove[s][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} { // init sym 2 raw tables\n\t\t\tfunction initSym2Raw(N_RAW, Sym2Raw, Raw2Sym, SymState, coord, setFunc, getFunc) {\n\t\t\t\tvar N_RAW_HALF = (N_RAW + 1) >> 1;\n\t\t\t\tvar c = new CubieCube();\n\t\t\t\tvar d = new CubieCube();\n\t\t\t\tvar count = 0;\n\t\t\t\tvar sym_inc = coord >= 2 ? 1 : 2;\n\t\t\t\tvar conjFunc = coord != 1 ? CubieCube.EdgeConjugate : CubieCube.CornConjugate;\n\n\t\t\t\tfor (var i = 0; i < N_RAW; i++) {\n\t\t\t\t\tif (Raw2Sym[i] !== undefined) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tsetFunc.call(c, i);\n\t\t\t\t\tfor (var s = 0; s < 16; s += sym_inc) {\n\t\t\t\t\t\tconjFunc(c, s, d);\n\t\t\t\t\t\tvar idx = getFunc.call(d);\n\t\t\t\t\t\tif (USE_TWIST_FLIP_PRUN && coord == 0) {\n\t\t\t\t\t\t\tFlipS2RF[count << 3 | s >> 1] = idx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (idx == i) {\n\t\t\t\t\t\t\tSymState[count] |= 1 << (s / sym_inc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tRaw2Sym[idx] = (count << 4 | s) / sym_inc;\n\t\t\t\t\t}\n\t\t\t\t\tSym2Raw[count++] = i;\n\t\t\t\t}\n\t\t\t\treturn count;\n\t\t\t}\n\n\t\t\tinitSym2Raw(N_FLIP, FlipS2R, FlipR2S, SymStateFlip, 0, CubieCube.prototype.setFlip, CubieCube.prototype.getFlip);\n\t\t\tinitSym2Raw(N_TWIST, TwistS2R, TwistR2S, SymStateTwist, 1, CubieCube.prototype.setTwist, CubieCube.prototype.getTwist);\n\t\t\tinitSym2Raw(N_PERM, EPermS2R, EPermR2S, SymStatePerm, 2, CubieCube.prototype.setEPerm, CubieCube.prototype.getEPerm);\n\t\t\tvar cc = new CubieCube();\n\t\t\tfor (var i = 0; i < N_PERM_SYM; i++) {\n\t\t\t\tsetNPerm(cc.ea, EPermS2R[i], 8, true);\n\t\t\t\tPerm2CombP[i] = getComb(cc.ea, 0, true) + (USE_COMBP_PRUN ? getNParity(EPermS2R[i], 8) * 70 : 0);\n\t\t\t\tc.invFrom(cc);\n\t\t\t\tPermInvEdgeSym[i] = EPermR2S[c.getEPerm()];\n\t\t\t}\n\t\t} { // init coord tables\n\n\t\t\tvar c = new CubieCube();\n\t\t\tvar d = new CubieCube();\n\n\t\t\tfunction initSymMoveTable(moveTable, SymS2R, N_SIZE, N_MOVES, setFunc, getFunc, multFunc, ud2std) {\n\t\t\t\tfor (var i = 0; i < N_SIZE; i++) {\n\t\t\t\t\tmoveTable[i] = [];\n\t\t\t\t\tsetFunc.call(c, SymS2R[i]);\n\t\t\t\t\tfor (var j = 0; j < N_MOVES; j++) {\n\t\t\t\t\t\tmultFunc(c, moveCube[ud2std ? ud2std[j] : j], d);\n\t\t\t\t\t\tmoveTable[i][j] = getFunc.call(d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinitSymMoveTable(FlipMove, FlipS2R, N_FLIP_SYM, N_MOVES,\n\t\t\t\tCubieCube.prototype.setFlip, CubieCube.prototype.getFlipSym, CubieCube.EdgeMult);\n\t\t\tinitSymMoveTable(TwistMove, TwistS2R, N_TWIST_SYM, N_MOVES,\n\t\t\t\tCubieCube.prototype.setTwist, CubieCube.prototype.getTwistSym, CubieCube.CornMult);\n\t\t\tinitSymMoveTable(EPermMove, EPermS2R, N_PERM_SYM, N_MOVES2,\n\t\t\t\tCubieCube.prototype.setEPerm, CubieCube.prototype.getEPermSym, CubieCube.EdgeMult, ud2std);\n\t\t\tinitSymMoveTable(CPermMove, EPermS2R, N_PERM_SYM, N_MOVES2,\n\t\t\t\tCubieCube.prototype.setCPerm, CubieCube.prototype.getCPermSym, CubieCube.CornMult, ud2std);\n\n\t\t\tfor (var i = 0; i < N_SLICE; i++) {\n\t\t\t\tUDSliceMove[i] = [];\n\t\t\t\tUDSliceConj[i] = [];\n\t\t\t\tc.setUDSlice(i);\n\t\t\t\tfor (var j = 0; j < N_MOVES; j++) {\n\t\t\t\t\tCubieCube.EdgeMult(c, moveCube[j], d);\n\t\t\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t\t\t}\n\t\t\t\tfor (var j = 0; j < 16; j += 2) {\n\t\t\t\t\tCubieCube.EdgeConjugate(c, SymMultInv[0][j], d);\n\t\t\t\t\tUDSliceConj[i][j >> 1] = d.getUDSlice();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < N_MPERM; i++) {\n\t\t\t\tMPermMove[i] = [];\n\t\t\t\tMPermConj[i] = [];\n\t\t\t\tc.setMPerm(i);\n\t\t\t\tfor (var j = 0; j < N_MOVES2; j++) {\n\t\t\t\t\tCubieCube.EdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t\t\t}\n\t\t\t\tfor (var j = 0; j < 16; j++) {\n\t\t\t\t\tCubieCube.EdgeConjugate(c, SymMultInv[0][j], d);\n\t\t\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < N_COMB; i++) {\n\t\t\t\tCCombPMove[i] = [];\n\t\t\t\tCCombPConj[i] = [];\n\t\t\t\tc.setCComb(i % 70);\n\t\t\t\tfor (var j = 0; j < N_MOVES2; j++) {\n\t\t\t\t\tCubieCube.CornMult(c, moveCube[ud2std[j]], d);\n\t\t\t\t\tCCombPMove[i][j] = d.getCComb() + 70 * ((P2_PARITY_MOVE >> j & 1) ^ ~~(i / 70));\n\t\t\t\t}\n\t\t\t\tfor (var j = 0; j < 16; j++) {\n\t\t\t\t\tCubieCube.CornConjugate(c, SymMultInv[0][j], d);\n\t\t\t\t\tCCombPConj[i][j] = d.getCComb() + 70 * ~~(i / 70);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//init pruning tables\n\tvar InitPrunProgress = -1;\n\n\tfunction initRawSymPrun(PrunTable, N_RAW, N_SYM, RawMove, RawConj, SymMove, SymState, PrunFlag) {\n\t\tvar SYM_SHIFT = PrunFlag & 0xf;\n\t\tvar SYM_E2C_MAGIC = ((PrunFlag >> 4) & 1) == 1 ? 0x00DDDD00 : 0x00000000;\n\t\tvar IS_PHASE2 = ((PrunFlag >> 5) & 1) == 1;\n\t\tvar INV_DEPTH = PrunFlag >> 8 & 0xf;\n\t\tvar MAX_DEPTH = PrunFlag >> 12 & 0xf;\n\t\tvar MIN_DEPTH = PrunFlag >> 16 & 0xf;\n\n\t\tvar SYM_MASK = (1 << SYM_SHIFT) - 1;\n\t\tvar ISTFP = RawMove == null;\n\t\tvar N_SIZE = N_RAW * N_SYM;\n\t\tvar N_MOVES = IS_PHASE2 ? 10 : 18;\n\t\tvar NEXT_AXIS_MAGIC = N_MOVES == 10 ? 0x42 : 0x92492;\n\n\t\tvar depth = getPruning(PrunTable, N_SIZE) - 1;\n\n\t\tif (depth == -1) {\n\t\t\tfor (var i = 0; i < (N_SIZE >> 3) + 1; i++) {\n\t\t\t\tPrunTable[i] = 0xffffffff;\n\t\t\t}\n\t\t\tsetPruning(PrunTable, 0, 0 ^ 0xf);\n\t\t\tdepth = 0;\n\t\t} else {\n\t\t\tsetPruning(PrunTable, N_SIZE, 0xf ^ (depth + 1));\n\t\t}\n\n\t\tvar SEARCH_DEPTH = PARTIAL_INIT_LEVEL > 0 ?\n\t\t\tMath.min(Math.max(depth + 1, MIN_DEPTH), MAX_DEPTH) : MAX_DEPTH;\n\n\t\twhile (depth < SEARCH_DEPTH) {\n\t\t\tvar inv = depth > INV_DEPTH;\n\t\t\tvar select = inv ? 0xf : depth;\n\t\t\tvar selArrMask = select * 0x11111111;\n\t\t\tvar check = inv ? depth : 0xf;\n\t\t\tdepth++;\n\t\t\tInitPrunProgress++;\n\t\t\tvar xorVal = depth ^ 0xf;\n\t\t\tvar done = 0;\n\t\t\tvar val = 0;\n\t\t\tfor (var i = 0; i < N_SIZE; i++, val >>= 4) {\n\t\t\t\tif ((i & 7) == 0) {\n\t\t\t\t\tval = PrunTable[i >> 3];\n\t\t\t\t\tif (!hasZero(val ^ selArrMask)) {\n\t\t\t\t\t\ti += 7;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((val & 0xf) != select) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar raw = i % N_RAW;\n\t\t\t\tvar sym = ~~(i / N_RAW);\n\t\t\t\tvar flip = 0,\n\t\t\t\t\tfsym = 0;\n\t\t\t\tif (ISTFP) {\n\t\t\t\t\tflip = FlipR2S[raw];\n\t\t\t\t\tfsym = flip & 7;\n\t\t\t\t\tflip >>= 3;\n\t\t\t\t}\n\n\t\t\t\tfor (var m = 0; m < N_MOVES; m++) {\n\t\t\t\t\tvar symx = SymMove[sym][m];\n\t\t\t\t\tvar rawx;\n\t\t\t\t\tif (ISTFP) {\n\t\t\t\t\t\trawx = FlipS2RF[\n\t\t\t\t\t\t\tFlipMove[flip][Sym8Move[m << 3 | fsym]] ^\n\t\t\t\t\t\t\tfsym ^ (symx & SYM_MASK)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\trawx = RawConj[RawMove[raw][m]][symx & SYM_MASK];\n\t\t\t\t\t}\n\t\t\t\t\tsymx >>= SYM_SHIFT;\n\t\t\t\t\tvar idx = symx * N_RAW + rawx;\n\t\t\t\t\tvar prun = getPruning(PrunTable, idx);\n\t\t\t\t\tif (prun != check) {\n\t\t\t\t\t\tif (prun < depth - 1) {\n\t\t\t\t\t\t\tm += NEXT_AXIS_MAGIC >> m & 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tsetPruning(PrunTable, i, xorVal);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsetPruning(PrunTable, idx, xorVal);\n\t\t\t\t\tfor (var j = 1, symState = SymState[symx];\n\t\t\t\t\t\t(symState >>= 1) != 0; j++) {\n\t\t\t\t\t\tif ((symState & 1) != 1) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar idxx = symx * N_RAW;\n\t\t\t\t\t\tif (ISTFP) {\n\t\t\t\t\t\t\tidxx += FlipS2RF[FlipR2S[rawx] ^ j];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tidxx += RawConj[rawx][j ^ (SYM_E2C_MAGIC >> (j << 1) & 3)];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (getPruning(PrunTable, idxx) == check) {\n\t\t\t\t\t\t\tsetPruning(PrunTable, idxx, xorVal);\n\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(depth, done, InitPrunProgress);\n\t\t}\n\t\tsetPruning(PrunTable, N_SIZE, (depth + 1) ^ 0xf);\n\t\treturn depth + 1;\n\t}\n\n\tfunction doInitPrunTables(targetProgress) {\n\t\tif (USE_TWIST_FLIP_PRUN) {\n\t\t\tTwistFlipPrunMax = initRawSymPrun(\n\t\t\t\tTwistFlipPrun, 2048, 324,\n\t\t\t\tnull, null,\n\t\t\t\tTwistMove, SymStateTwist, 0x19603\n\t\t\t);\n\t\t}\n\t\tif (InitPrunProgress > targetProgress) {\n\t\t\treturn;\n\t\t}\n\t\tUDSliceTwistPrunMax = initRawSymPrun(\n\t\t\tUDSliceTwistPrun, 495, 324,\n\t\t\tUDSliceMove, UDSliceConj,\n\t\t\tTwistMove, SymStateTwist, 0x69603\n\t\t);\n\t\tif (InitPrunProgress > targetProgress) {\n\t\t\treturn;\n\t\t}\n\t\tUDSliceFlipPrunMax = initRawSymPrun(\n\t\t\tUDSliceFlipPrun, 495, 336,\n\t\t\tUDSliceMove, UDSliceConj,\n\t\t\tFlipMove, SymStateFlip, 0x69603\n\t\t);\n\t\tif (InitPrunProgress > targetProgress) {\n\t\t\treturn;\n\t\t}\n\t\tMCPermPrunMax = initRawSymPrun(\n\t\t\tMCPermPrun, 24, 2768,\n\t\t\tMPermMove, MPermConj,\n\t\t\tCPermMove, SymStatePerm, 0x8ea34\n\t\t);\n\t\tif (InitPrunProgress > targetProgress) {\n\t\t\treturn;\n\t\t}\n\t\tEPermCCombPPrunMax = initRawSymPrun(\n\t\t\tEPermCCombPPrun, N_COMB, 2768,\n\t\t\tCCombPMove, CCombPConj,\n\t\t\tEPermMove, SymStatePerm, 0x7d824\n\t\t);\n\t}\n\n\tfunction initPrunTables() {\n\t\tif (InitPrunProgress < 0) {\n\t\t\tinitBasic();\n\t\t\tInitPrunProgress = 0;\n\t\t}\n\t\tif (InitPrunProgress == 0) {\n\t\t\tdoInitPrunTables(99);\n\t\t} else if (InitPrunProgress < 54) {\n\t\t\tdoInitPrunTables(InitPrunProgress);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction randomCube() {\n\t\tvar ep, cp;\n\t\tvar eo = ~~(Math.random() * 2048);\n\t\tvar co = ~~(Math.random() * 2187);\n\t\tdo {\n\t\t\tep = ~~(Math.random() * fact[12]);\n\t\t\tcp = ~~(Math.random() * fact[8]);\n\t\t} while (getNParity(cp, 8) != getNParity(ep, 12));\n\t\tvar cc = new CubieCube().initCoord(cp, co, ep, eo);\n\t\treturn cc.toFaceCube();\n\t}\n\n\tfunction fromScramble(s) {\n\t\tvar j = 0;\n\t\tvar axis = -1;\n\t\tvar c1 = new CubieCube();\n\t\tvar c2 = new CubieCube();\n\t\tfor (var i = 0; i < s.length; i++) {\n\t\t\tswitch (s[i]) {\n\t\t\t\tcase 'U':\n\t\t\t\tcase 'R':\n\t\t\t\tcase 'F':\n\t\t\t\tcase 'D':\n\t\t\t\tcase 'L':\n\t\t\t\tcase 'B':\n\t\t\t\t\taxis = \"URFDLB\".indexOf(s[i]) * 3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase ' ':\n\t\t\t\t\tif (axis != -1) {\n\t\t\t\t\t\tCubieCube.CornMult(c1, moveCube[axis], c2);\n\t\t\t\t\t\tCubieCube.EdgeMult(c1, moveCube[axis], c2);\n\t\t\t\t\t\tc1.init(c2.ca, c2.ea);\n\t\t\t\t\t}\n\t\t\t\t\taxis = -1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '2':\n\t\t\t\t\taxis++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\\'':\n\t\t\t\t\taxis += 2;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif (axis != -1) {\n\t\t\tCubieCube.CornMult(c1, moveCube[axis], c2);\n\t\t\tCubieCube.EdgeMult(c1, moveCube[axis], c2);\n\t\t\tc1.init(c2.ca, c2.ea);\n\t\t}\n\t\treturn c2.toFaceCube();\n\t}\n\n\treturn {\n\t\tSearch: Search,\n\t\tsolve: function(facelet) {\n\t\t\treturn new Search().solution(facelet);\n\t\t},\n\t\trandomCube: randomCube,\n\t\tfromScramble: fromScramble,\n\t\tinitFull: function() {\n\t\t\tPARTIAL_INIT_LEVEL = 0;\n\t\t\tinitPrunTables();\n\t\t}\n\t}\n})();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\tmodule.exports = min2phase;\n}","import { initFull, solve as solver } from \"../../lib/solver\";\n\nexport function initSolver() {\n  initFull();\n}\n\nexport async function solve(facelet: string) {\n  const solution = solver(facelet);\n  if (solution.toUpperCase().includes(\"ERROR\")) {\n    console.warn(\"error solving facelet \", facelet);\n    return [];\n  }\n  const m1: { [key: string]: \"x\" | \"y\" | \"z\" } = { R: \"x\", U: \"y\", F: \"z\", L: \"x\", D: \"y\", B: \"z\" };\n  const m2: { [key: string]: 1 | -1 } = { R: 1, U: 1, F: 1, L: -1, D: -1, B: -1 };\n\n  return solution\n    .split(\" \")\n    .filter((s) => s)\n    .map((s): [\"x\" | \"y\" | \"z\", number, number, number] => {\n      return [m1[s[0]], m2[s[0]], (s[1] == \"'\" ? 1 : -1) * m2[s[0]], s[1] == \"2\" ? 2 : 1];\n    });\n}\n","export class Buffer {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly numComponents: number;\n  private readonly componentType: GLenum;\n  private readonly buffer: WebGLBuffer | null;\n\n  constructor(gl: WebGL2RenderingContext, data: number[], numComponents: number, componentType: GLenum) {\n    this.gl = gl;\n    this.numComponents = numComponents;\n    this.componentType = componentType;\n    this.buffer = gl.createBuffer();\n    this.write(data);\n  }\n\n  write(data: number[]) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(data), this.gl.STATIC_DRAW);\n  }\n\n  bind(attrLocation: GLuint) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\n    this.gl.vertexAttribPointer(attrLocation, this.numComponents, this.componentType, false, 0, 0);\n  }\n}\n\nexport class IndexBuffer {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly buffer: WebGLBuffer | null;\n  indexCount = 0;\n\n  constructor(gl: WebGL2RenderingContext, data: number[]) {\n    this.gl = gl;\n    this.buffer = gl.createBuffer();\n    this.write(data);\n  }\n\n  write(data: number[]) {\n    this.indexCount = data.length;\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.buffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data), this.gl.STATIC_DRAW);\n  }\n\n  bind() {\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.buffer);\n  }\n}\n","import { mat4, vec3 } from \"gl-matrix\";\n\nimport { Buffer, IndexBuffer } from \"./buffer\";\nimport { SimpleShader } from \"./shader\";\nimport { V3, vec3ToV3 } from \"./utils\";\nimport { PBRShader } from \"../../lib/pbr/renderer/pbr_shader\";\n\nfunction calculateNormals(positions: V3[], indices: V3[], override: V3[] = []) {\n  const normals = Array.from({ length: positions.length }, () => vec3.create());\n\n  for (let [i0, i1, i2] of indices) {\n    const p0 = positions[i0];\n    const p1 = positions[i1];\n    const p2 = positions[i2];\n\n    const e1 = vec3.subtract(vec3.create(), p0, p1);\n    const e2 = vec3.subtract(vec3.create(), p2, p1);\n\n    const normal = vec3.cross(vec3.create(), e2, e1);\n\n    for (let idx of [i0, i1, i2]) {\n      vec3.add(normals[idx], normals[idx], normal);\n    }\n  }\n  return normals.map((n, i) => override[i] || vec3ToV3(vec3.normalize(n, n))).flat();\n}\n\nexport class Geometry {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly positions: Buffer;\n  private readonly colors: Buffer;\n  private readonly normals: Buffer;\n  private readonly indices: IndexBuffer;\n  transform: mat4;\n\n  constructor(gl: WebGL2RenderingContext, positions: V3[], colors: V3[], indices: V3[], normalsOverride?: V3[]) {\n    this.gl = gl;\n\n    const normals = calculateNormals(positions, indices, normalsOverride);\n    this.positions = new Buffer(gl, positions.flat(), 3, gl.FLOAT);\n    this.colors = new Buffer(gl, colors.flat(), 3, gl.FLOAT);\n    this.normals = new Buffer(gl, normals, 3, gl.FLOAT);\n    this.indices = new IndexBuffer(gl, indices.flat());\n\n    this.transform = mat4.create();\n  }\n\n  update(positions: V3[], colors: V3[], indices: V3[], normalsOverride?: V3[]) {\n    const normals = calculateNormals(positions, indices, normalsOverride);\n    this.positions.write(positions.flat());\n    this.colors.write(colors.flat());\n    this.normals.write(normals.flat());\n    this.indices.write(indices.flat());\n  }\n\n  draw(shader: SimpleShader | PBRShader) {\n    shader.setUniform(\"u_ModelMatrix\", this.transform);\n\n    this.positions.bind(shader.vertexPosition);\n    this.colors.bind(shader.vertexColor);\n    this.normals.bind(shader.vertexNormal);\n    this.indices.bind();\n    this.gl.drawElements(this.gl.TRIANGLES, this.indices.indexCount, this.gl.UNSIGNED_SHORT, 0);\n  }\n}\n","export type Preset = {\n  spread: number;\n  blockR: number;\n  bevelW: number;\n  faceCover: number;\n  faceR: number;\n  faceEdgeR: number;\n  faceRingW: number;\n  faceExtrude: number;\n\n  blockType: \"stickered\" | \"stickerless\";\n  blockColor: string | string[];\n  blockMetallic: number;\n  blockRoughness: number;\n\n  addStickers: boolean;\n  faceColor: string | string[];\n  faceMetallic: number;\n  faceRoughness: number;\n\n  wearTear: number;\n};\n\nexport const faceDefaults = {\n  faceCover: 0.85,\n  faceR: 0.15,\n  faceEdgeR: 0.5,\n  faceRingW: 1,\n  faceExtrude: 0.005,\n  faceColor: \"classic\",\n  faceMetallic: 0,\n  faceRoughness: 0.15,\n};\n\nexport const presetDefault: Preset = {\n  spread: 1,\n  blockR: 0.15,\n  bevelW: 0,\n\n  blockType: \"stickered\",\n  blockColor: \"bl\",\n  blockMetallic: 0,\n  blockRoughness: 0.15,\n\n  addStickers: false,\n\n  ...faceDefaults,\n\n  wearTear: 0.2,\n};\n\nconst classic: Preset = {\n  spread: 1.025,\n  blockR: 0.15,\n  bevelW: 0,\n  faceCover: 0.85,\n  faceR: 0.15,\n  faceEdgeR: 0.5,\n  faceRingW: 1,\n  faceExtrude: 0.005,\n\n  blockType: \"stickered\",\n  blockColor: \"bl\",\n  blockMetallic: 0,\n  blockRoughness: 0.15,\n\n  addStickers: true,\n  faceColor: \"classic\",\n  faceMetallic: 0,\n  faceRoughness: 0.15,\n\n  wearTear: 0.2,\n};\n\nconst classic2: Preset = {\n  spread: 1,\n  blockR: 0.1,\n  bevelW: 0.2,\n  faceCover: 0.95,\n  faceR: 0.1,\n  faceEdgeR: 0.5,\n  faceRingW: 1,\n  faceExtrude: 0.005,\n\n  blockType: \"stickered\",\n  blockColor: \"bl\",\n  blockMetallic: 0,\n  blockRoughness: 0.05,\n\n  addStickers: true,\n  faceColor: \"classic\",\n  faceMetallic: 0,\n  faceRoughness: 0.15,\n\n  wearTear: 0.2,\n};\n\nconst reverse: Preset = {\n  spread: 1.025,\n  blockR: 0.15,\n  bevelW: 0,\n  faceCover: 0.85,\n  faceR: 0.15,\n  faceEdgeR: 0.5,\n  faceRingW: 1,\n  faceExtrude: 0.005,\n\n  blockType: \"stickerless\",\n  blockColor: \"classic\",\n  blockMetallic: 0,\n  blockRoughness: 0.05,\n\n  addStickers: true,\n  faceColor: \"bl\",\n  faceMetallic: 0,\n  faceRoughness: 0.05,\n\n  wearTear: 0.2,\n};\n\nconst reverse2: Preset = {\n  spread: 1,\n  blockR: 0.1,\n  bevelW: 0.2,\n  faceCover: 0.95,\n  faceR: 0.1,\n  faceEdgeR: 0.5,\n  faceRingW: 1,\n  faceExtrude: 0.005,\n\n  blockType: \"stickerless\",\n  blockColor: \"classic\",\n  blockMetallic: 0,\n  blockRoughness: 0.15,\n\n  addStickers: true,\n  faceColor: \"bl\",\n  faceMetallic: 0,\n  faceRoughness: 0.05,\n\n  wearTear: 0.2,\n};\n\nconst toy: Preset = {\n  spread: 1,\n  blockR: 0.15,\n  bevelW: 0.15,\n\n  blockType: \"stickerless\",\n  blockColor: \"bright\",\n  blockMetallic: 0,\n  blockRoughness: 0.1,\n\n  addStickers: false,\n\n  ...faceDefaults,\n\n  wearTear: 0.2,\n};\n\nconst precious: Preset = {\n  spread: 1.05,\n  blockR: 0.1,\n  bevelW: 0,\n  faceCover: 0.85,\n  faceR: 1,\n  faceEdgeR: 1,\n  faceRingW: 0.35,\n  faceExtrude: 0.07,\n\n  blockType: \"stickered\",\n  blockColor: \"go\",\n  blockMetallic: 1,\n  blockRoughness: 0.05,\n\n  addStickers: true,\n  faceColor: \"bright\",\n  faceMetallic: 1,\n  faceRoughness: 0.15,\n\n  wearTear: 0.2,\n};\n\nconst bubble: Preset = {\n  spread: 1,\n  blockR: 1,\n  bevelW: 0,\n\n  blockType: \"stickerless\",\n  blockColor: \"bright\",\n  blockMetallic: 0,\n  blockRoughness: 0.1,\n\n  addStickers: false,\n\n  ...faceDefaults,\n\n  wearTear: 0.2,\n};\n\nconst retro: Preset = {\n  spread: 1,\n  blockR: 0.25,\n  bevelW: 0,\n  faceCover: 0.9,\n  faceR: 0.4,\n  faceEdgeR: 0.5,\n  faceRingW: 0.35,\n  faceExtrude: 0.02,\n\n  blockType: \"stickered\",\n  blockColor: \"#292929\",\n  blockMetallic: 0,\n  blockRoughness: 0.05,\n\n  addStickers: true,\n  faceColor: \"neutral\",\n  faceMetallic: 0,\n  faceRoughness: 0.15,\n\n  wearTear: 0.5,\n};\n\nconst retro2: Preset = {\n  spread: 1,\n  blockR: 0.05,\n  bevelW: 0.2,\n  faceCover: 0.95,\n  faceR: 0.15,\n  faceEdgeR: 0.5,\n  faceRingW: 0.07,\n  faceExtrude: 0,\n\n  blockType: \"stickered\",\n  blockColor: \"bl\",\n  blockMetallic: 0,\n  blockRoughness: 0.3,\n\n  addStickers: true,\n  faceColor: \"pastel\",\n  faceMetallic: 0,\n  faceRoughness: 0.1,\n\n  wearTear: 0.75,\n};\n\nconst framed: Preset = {\n  spread: 1.025,\n  blockR: 0,\n  bevelW: 0,\n  faceCover: 1,\n  faceR: 0.05,\n  faceEdgeR: 1,\n  faceRingW: 0.15,\n  faceExtrude: 0.05,\n\n  blockType: \"stickerless\",\n  blockColor: \"bright\",\n  blockMetallic: 0,\n  blockRoughness: 0.15,\n\n  addStickers: true,\n  faceColor: \"si\",\n  faceMetallic: 1,\n  faceRoughness: 0.05,\n\n  wearTear: 0.2,\n};\n\nconst colorful: Preset = {\n  spread: 1.025,\n  blockR: 0.15,\n  bevelW: 0,\n  faceCover: 0.85,\n  faceR: 0.35,\n  faceEdgeR: 0.5,\n  faceRingW: 0.13,\n  faceExtrude: 0.01,\n\n  blockType: \"stickered\",\n  blockColor: \"colorful\",\n  blockMetallic: 0,\n  blockRoughness: 0.15,\n\n  addStickers: true,\n  faceColor: \"bright\",\n  faceMetallic: 0,\n  faceRoughness: 0.15,\n\n  wearTear: 0.2,\n};\n\nconst unicorn: Preset = {\n  spread: 1,\n  blockR: 1,\n  bevelW: 0,\n\n  blockType: \"stickered\",\n  blockColor: \"colorful\",\n  blockMetallic: 0.5,\n  blockRoughness: 0.25,\n\n  addStickers: false,\n\n  ...faceDefaults,\n\n  wearTear: 0.2,\n};\n\nconst lego: Preset = {\n  spread: 1,\n  blockR: 0.05,\n  bevelW: 0,\n  faceCover: 0.4,\n  faceR: 1,\n  faceEdgeR: 0.2,\n  faceRingW: 1,\n  faceExtrude: 0.1,\n\n  blockType: \"stickerless\",\n  blockColor: \"neutral\",\n  blockMetallic: 0,\n  blockRoughness: 0.1,\n\n  addStickers: true,\n  faceColor: \"neutral\",\n  faceMetallic: 0,\n  faceRoughness: 0.1,\n\n  wearTear: 0.2,\n};\n\nconst fancy: Preset = {\n  spread: 1.03,\n  blockR: 0.05,\n  bevelW: 0.32,\n  blockType: \"stickerless\",\n  blockColor: \"pastel\",\n  blockMetallic: 0,\n  blockRoughness: 0.38,\n\n  addStickers: true,\n  faceCover: 0.98,\n  faceR: 0.15,\n  faceEdgeR: 0.72,\n  faceRingW: 0.67,\n  faceExtrude: 0.023,\n  faceColor: \"go\",\n  faceMetallic: 0.5,\n  faceRoughness: 0.23,\n\n  wearTear: 0.2,\n};\n\nexport const PRESETS: { [key: string]: Preset } = {\n  classic,\n  reverse,\n  classic2,\n  reverse2,\n  toy,\n  precious,\n  bubble,\n  colorful,\n  framed,\n  retro,\n  retro2,\n  unicorn,\n  lego,\n  fancy,\n};\n","import { vec3 } from \"gl-matrix\";\nimport {\n  arrayIntersect,\n  arrayRange,\n  arrayUniqueVals,\n  clamp,\n  convertToFacePositions,\n  divmod,\n  indexCircleToTriangles,\n  indexRingToTriangles,\n  indexRowsToTriangles,\n  indexSectorToTriangles,\n  mR,\n  rad,\n  sortNum,\n  subdivideIndexRows,\n  V2,\n  V3,\n  vec3ToV3,\n  zip,\n} from \"./utils\";\n\n// prettier-ignore\nexport const squareData = (side = 1, z = 0): [V3[], V3[]] => {\n  const s = side / 2;\n  const vertices: V3[] = [\n    [-s, -s, z],\n    [ s, -s, z],\n    [ s,  s, z],\n    [-s,  s, z],\n  ]\n  const indices: V3[] = [\n    [0, 1, 2],    [0, 2, 3],\n  ]\n  return [vertices, indices];\n};\n\nfunction roundedSquarePositions(\n  side: number,\n  z: number,\n  rPercent: number,\n  noCenter = false,\n  subEdges?: number | number[]\n): V3[] {\n  if (rPercent > 0.99) {\n    rPercent = 1;\n  }\n  if (rPercent < 0.01) {\n    rPercent = 0;\n  }\n\n  const isCircle = rPercent == 1;\n  const isSquare = rPercent == 0;\n\n  const subdivisions = isSquare ? 0 : clamp(mR(rPercent * 20), 4, 16);\n  const s = side / 2;\n  const r = rPercent * s;\n  const R = isCircle ? 0 : s - r;\n\n  const center: V3 = [0, 0, 0];\n  const v: V3 = [r, 0, 0];\n\n  const rotate90 = (p: vec3): V3 => [-p[1], p[0], p[2]];\n  const quadrantSubs = () =>\n    Array.from({ length: subdivisions - 1 }, (_, i) =>\n      vec3ToV3(vec3.rotateZ(vec3.create(), v, center, rad((i + 1) * (90 / subdivisions))))\n    );\n\n  const quadrant0 = isCircle\n    ? [v, ...quadrantSubs()]\n    : noCenter\n    ? [v, ...quadrantSubs(), rotate90(v)]\n    : isSquare\n    ? [center]\n    : [center, v, ...quadrantSubs(), rotate90(v)];\n  const quadrant1 = quadrant0.map(rotate90);\n  const quadrant2 = quadrant1.map(rotate90);\n  const quadrant3 = quadrant2.map(rotate90);\n\n  isCircle && !noCenter && quadrant0.unshift(center);\n\n  // prettier-ignore\n  const corners: V3[] = [\n    [ R,  R,  z],\n    [-R,  R,  z],\n    [-R, -R,  z],\n    [ R, -R,  z],\n  ];\n\n  const cornerTranslate = (allP: V3[], c: vec3) => {\n    for (let p of allP) {\n      p[0] += c[0];\n      p[1] += c[1];\n      p[2] += c[2];\n    }\n  };\n\n  cornerTranslate(quadrant0, corners[0]);\n  cornerTranslate(quadrant1, corners[1]);\n  cornerTranslate(quadrant2, corners[2]);\n  cornerTranslate(quadrant3, corners[3]);\n\n  if (subEdges) {\n    [quadrant0, quadrant1, quadrant2, quadrant3].forEach((quadrant, i, quadrants) => {\n      const currLast = quadrant[quadrant.length - 1];\n      const nextFirst = quadrants[(i + 1) % 4][0];\n      const [newPositions] = subdivideIndexRows([0], [1], subEdges, [currLast, nextFirst]);\n      quadrant.push(...newPositions.flat());\n    });\n  }\n\n  return [...quadrant0, ...quadrant1, ...quadrant2, ...quadrant3];\n}\n\nexport function extrudedRingData(\n  side: number,\n  z: number,\n  rPercent: number,\n  wPercent: number,\n  extrude: number,\n  edgeR: number,\n  bevelW: number\n): [V3[], V3[], V3[], number[]] {\n  const eps = 0.001;\n\n  if (wPercent < 0.01) {\n    wPercent = 0.01;\n  }\n  if (edgeR < 0.01) {\n    edgeR = 0;\n  }\n  const ring = !(wPercent > 0.99);\n  const roundEdge = edgeR > 0;\n\n  const zEx = z + Math.max(eps, extrude);\n\n  const faceR = rPercent * 0.5;\n  const bevelW2 = (bevelW - faceR) / (1 - 2 * faceR);\n  const subs = bevelW - faceR < 0.01 ? undefined : bevelW < 0.5 ? [bevelW2, 1 - bevelW2] : 1;\n\n  const innerSide = (1 - wPercent) * side;\n\n  const maxR = Math.min(extrude, ring ? (side - innerSide) / 4 : side / 2);\n  const r = edgeR * maxR;\n\n  let upperPosOuter0: V3[];\n  let upperPosInner0: V3[] = [];\n  let faceIndices: V3[];\n  let faceInfo: [number, number][];\n\n  if (ring) {\n    upperPosOuter0 = roundedSquarePositions(side - r * 2, zEx, rPercent, true, subs);\n    upperPosInner0 = roundedSquarePositions(innerSide + r * 2, zEx, rPercent, true, subs);\n    faceInfo = [\n      [upperPosInner0.length, innerSide + r * 2],\n      [upperPosOuter0.length, side - r * 2],\n    ];\n    const posLen = upperPosInner0.length;\n    faceIndices = indexRingToTriangles(arrayRange(posLen), arrayRange(posLen, posLen));\n  } else {\n    [upperPosOuter0, faceIndices] = roundedSquareData(side - r * 2, zEx, rPercent, subs);\n    faceInfo = [[upperPosOuter0.length, side - r * 2]];\n  }\n\n  if (extrude < 0.01) {\n    const faceInfoExpanded = faceInfo.map(([i, w]): number[] => Array(i).fill(w)).flat();\n    return [[...upperPosInner0, ...upperPosOuter0], faceIndices, [], faceInfoExpanded];\n  }\n\n  const len0 = upperPosOuter0.length + upperPosInner0.length;\n  let len = 0;\n\n  const positions = [];\n  const indices = [];\n  const info: [number, number][] = [];\n\n  const vars = [\n    [side, 1, 0],\n    [innerSide, -1, 1],\n  ];\n\n  for (let [iSide, dir, inner] of vars) {\n    if (inner && !ring) {\n      positions.push([]);\n      indices.push([]);\n      continue;\n    }\n\n    const upperPos = roundedSquarePositions(iSide, zEx, rPercent, true, subs);\n    const lowerPos = upperPos.map((p): V3 => [p[0], p[1], z]);\n    len = upperPos.length;\n\n    const ar = arrayRange;\n\n    if (!roundEdge) {\n      const iF = indexRingToTriangles(ar(len, len0 + (0 + 3 * inner) * len), ar(len, len0 + (1 + 1 * inner) * len));\n      positions.push([...upperPos, ...lowerPos]);\n      indices.push(iF);\n      info.push([len, iSide], [len, iSide]);\n      continue;\n    }\n\n    const pos1s = iSide - r * dir * 2;\n    const upperPos1 = roundedSquarePositions(pos1s, zEx, rPercent, true, subs);\n\n    const upperPos2 = upperPos.map((p, i) => {\n      const cp: V3 = [upperPos1[i][0], upperPos1[i][1], upperPos1[i][2] - r];\n      return vec3ToV3(vec3.lerp(vec3.create(), cp, p, r / vec3.distance(p, cp)));\n    });\n\n    const upperPos3 = upperPos.map((p): V3 => [p[0], p[1], p[2] - r]);\n\n    const i1 = indexRingToTriangles(ar(len, len0 + (0 + 5 * inner) * len), ar(len, len0 + (1 + 3 * inner) * len));\n    const i2 = indexRingToTriangles(ar(len, len0 + (1 + 5 * inner) * len), ar(len, len0 + (2 + 3 * inner) * len));\n    const iF = indexRingToTriangles(ar(len, len0 + (2 + 5 * inner) * len), ar(len, len0 + (3 + 3 * inner) * len));\n\n    positions.push([...upperPos1, ...upperPos2, ...upperPos3, ...lowerPos]);\n    indices.push([...i1, ...i2, ...iF]);\n    info.push([len, pos1s], [len, 2 * upperPos2[0][0]], [len, iSide], [len, iSide]);\n  }\n  const allPositions = [...upperPosInner0, ...upperPosOuter0, ...positions[0], ...positions[1]];\n  const allIndices = [...faceIndices, ...indices[0], ...indices[1]];\n  const allInfo = [...faceInfo, ...info];\n\n  const normalsOverride: V3[] = [];\n  if (roundEdge) {\n    for (let i = 0; i < len; i++) {\n      const j = len0 + 0 * len + i;\n      normalsOverride[j] = [0, 0, 1];\n      if (ring) {\n        const k = len0 + 4 * len + i;\n        normalsOverride[k] = [0, 0, 1];\n      }\n    }\n  }\n  const allInfoExpanded = allInfo.map(([i, w]): number[] => Array(i).fill(w)).flat();\n\n  // return [...convertToFacePositions(allPositions, allIndices), [], allInfoExpanded];\n  return [allPositions, allIndices, normalsOverride, allInfoExpanded];\n}\n\nexport function roundedRingData(side: number, z: number, rPercent: number, wPercent: number): [V3[], V3[]] {\n  if (wPercent > 0.99) {\n    return roundedSquareData(side, z, rPercent);\n  }\n  if (wPercent < 0.01) {\n    wPercent = 0.01;\n  }\n  const innerSide = (1 - wPercent) * side;\n  const square = rPercent < 0.01;\n\n  const posInner = square ? squareData(innerSide, z)[0] : roundedSquarePositions(innerSide, z, rPercent, true);\n  const posOuter = square ? squareData(side, z)[0] : roundedSquarePositions(side, z, rPercent, true);\n\n  const posLen = posInner.length;\n\n  return [[...posInner, ...posOuter], indexRingToTriangles(arrayRange(posLen), arrayRange(posLen, posLen))];\n}\n\nexport function roundedSquareData(side = 1, z = 0, rPercent = 0.25, subs?: number | number[]): [V3[], V3[]] {\n  if (rPercent > 0.99) {\n    rPercent = 1;\n  }\n  if (rPercent < 0.01) {\n    rPercent = 0;\n  }\n\n  const isCircle = rPercent == 1;\n  const isSquare = rPercent == 0;\n\n  const allPositions = roundedSquarePositions(side, z, rPercent);\n\n  if (isCircle) {\n    const allIndices = indexCircleToTriangles(arrayRange(allPositions.length));\n    return [allPositions, allIndices];\n  }\n\n  const allIndices: V3[] = [];\n  const qLen = allPositions.length / 4;\n\n  const getIndices = (batch: number) => Array.from({ length: qLen }, (_, i) => i + batch * qLen);\n\n  const indicesBatches = [getIndices(0), getIndices(1), getIndices(2), getIndices(3)];\n\n  const nextBatchPoints = (batch: number) => {\n    const nextBatch = indicesBatches[(batch + 1) % indicesBatches.length];\n    return [nextBatch[0], nextBatch[1]];\n  };\n\n  const edges: number[][] = [];\n\n  indicesBatches.forEach((indicesBatch, i) => {\n    if (isSquare) {\n      if (subs) {\n        const [curr, next] = [indicesBatch[0], nextBatchPoints(i)[0]];\n        const [newPositions, newPoints] = subdivideIndexRows([next], [curr], subs, allPositions);\n        allPositions.push(...newPositions.flat());\n        edges.push([next, ...newPoints.flat(), curr]);\n      }\n    } else {\n      allIndices.push(...indexSectorToTriangles(indicesBatch));\n\n      const [curr0, currLast] = [indicesBatch[0], indicesBatch[indicesBatch.length - 1]];\n      const [next0, next1] = nextBatchPoints(i);\n\n      let newPoints0: number[][] = [];\n      let newPoints1: number[][] = [];\n\n      if (subs) {\n        const [extraPositions0, midEdgePoints0] = subdivideIndexRows([next0], [curr0], subs, allPositions);\n        allPositions.push(...extraPositions0.flat());\n        newPoints0 = midEdgePoints0;\n        const [extraPositions1, midEdgePoints1] = subdivideIndexRows([next1], [currLast], subs, allPositions);\n        allPositions.push(...extraPositions1.flat());\n        newPoints1 = midEdgePoints1;\n      }\n\n      const row1 = [next1, ...newPoints1.flat(), currLast];\n      const row2 = [next0, ...newPoints0.flat(), curr0];\n      allIndices.push(...indexRowsToTriangles(row1, row2));\n      edges.push(row2);\n    }\n  });\n\n  if (subs) {\n    allIndices.push(\n      ...subdivideInnerFace([edges[0], [...edges[1]].reverse(), [...edges[2]].reverse(), edges[3]], allPositions, subs)\n    );\n  } else {\n    allIndices.push(\n      ...indexRowsToTriangles(\n        [indicesBatches[1][0], indicesBatches[0][0]],\n        [indicesBatches[2][0], indicesBatches[3][0]]\n      )\n    );\n  }\n\n  return [allPositions, allIndices];\n}\n\nfunction subdivideInnerFace(face: number[][], positions: V3[], subs: number | number[]): V3[] {\n  const face0b = face[0].slice(1, face[0].length - 1);\n  const face2b = face[2].slice(1, face[2].length - 1);\n  const [extraPositions, midEdgePoints] = subdivideIndexRows(face0b, face2b, subs, positions);\n\n  positions.push(...extraPositions.flat());\n\n  const triangles: V3[] = [];\n  const midRows = midEdgePoints.map((points, i) => [face[1][i + 1], ...points, face[3][i + 1]]);\n\n  const pointsList = [face[0], ...midRows, face[2]];\n  pointsList.forEach((_, i) => {\n    if (i) {\n      triangles.push(...indexRowsToTriangles(pointsList[i - 1], pointsList[i]));\n    }\n  });\n  return triangles;\n}\n\n// prettier-ignore\nexport const cubeData = (side=1): [V3[], V3[]] => {\n  const s = side / 2;\n  const vertices: V3[] = [\n    [-s, -s,  s],  [ s, -s,  s],   [s,  s,  s],  [-s,  s,  s],\n    [-s, -s, -s],  [-s,  s, -s],   [s,  s, -s],  [ s, -s, -s],\n  ];\n  const indices: V3[] = [\n    [0, 1, 2],    [0, 2, 3],\n    [7, 4, 5],    [7, 5, 6],\n    [3, 2, 6],    [3, 6, 5],\n    [4, 7, 1],    [4, 1, 0],\n    [1, 7, 6],    [1, 6, 2],\n    [4, 0, 3],    [4, 3, 5],\n  ]\n  return [vertices, indices];\n};\n\nconst edgeSplitComponentsToId = (c: V2) => {\n  return c[0] * 6 + c[1];\n};\nconst edgeSplitIdToComponents = (id: number): V2 => {\n  return divmod(id, 6);\n};\n\nconst _addTransformedSplitEdges = (edges: number[]) => {\n  const _edgeSplitIdToComponents = (id: number): V2 => {\n    if (![1, 2, 6, 8, 12, 13].includes(id)) console.error(\"invalid id: \" + id);\n    return edgeSplitIdToComponents(id);\n  };\n  const components = edges.map(_edgeSplitIdToComponents);\n\n  const getBottom = (n: number) => (n == 0 ? 2 : n == 2 ? 0 : 4);\n  const rotate90 = (n: number) => (n == 2 ? 0 : n == 0 ? 5 : n);\n  const rotate180 = (n: number) => (n == 2 ? 5 : n == 0 ? 3 : n);\n  const rotate270 = (n: number) => (n == 2 ? 3 : n == 0 ? 2 : n);\n\n  const a = (f: (n: number) => number, comps: V2[]): V2[] => comps.map((c) => [f(c[0]), f(c[1])]);\n\n  const top = [...components];\n  const bot = a(getBottom, top);\n  const [top1, top2, top3] = [a(rotate90, top), a(rotate180, top), a(rotate270, top)];\n  const [bot1, bot2, bot3] = [a(rotate90, bot), a(rotate180, bot), a(rotate270, bot)];\n  return [top, bot, top1, bot1, top2, bot2, top3, bot3].map((comps) => comps.map(edgeSplitComponentsToId));\n};\n\nexport function roundedCubeData(side = 1, rPercent = 0.25, bevelW: number): [V3[], V3[], number[][]] {\n  if (rPercent < 0.01) {\n    rPercent = 0;\n  }\n  if (rPercent > 0.99) {\n    rPercent = 1;\n  }\n\n  const rounded = rPercent > 0;\n  const sphere = rPercent == 1;\n\n  const faceEdgeSplit = true;\n  const subdivisions = faceEdgeSplit ? Math.ceil(((rPercent * 480) / 6) ** 0.5) + 1 : Math.max(4, mR(rPercent * 20));\n\n  const s = side / 2;\n  const r = rPercent * s;\n\n  // prettier-ignore\n  const adjusted: vec3[] = [\n      [s-r, s-r, s-r],\n      [s-r, s-r, s  ],\n      [s  , s-r, s-r],\n      [s-r, s  , s-r],\n    ];\n  const [center, A0, B0, C0] = adjusted;\n\n  const positions: vec3[] = [\n    vec3.sub(vec3.create(), A0, center),\n    vec3.sub(vec3.create(), B0, center),\n    vec3.sub(vec3.create(), C0, center),\n  ];\n  const edges = [\n    [0, 2],\n    [1, 0],\n    [2, 1],\n  ];\n\n  const esi = (id: number) => edgeSplitIdToComponents(id);\n  const esc = (component1: number, component2: number) => edgeSplitComponentsToId([component1, component2]);\n  // prettier-ignore\n  const splitEdges = [\n    [ [2, 0], [2, 1] ].map(([c0, c1]) => esc(c0, c1)),\n    [ [0, 1], [0, 2] ].map(([c0, c1]) => esc(c0, c1)),\n    [ [1, 0], [1, 2] ].map(([c0, c1]) => esc(c0, c1)),\n  ];\n\n  const indices: V3[] = [];\n\n  const edgeIndices: [[number, number][], [number, number][], [number, number][]] = [[], [], []];\n\n  const storeEdgeP = (p: vec3, edge: number[], i: number) => {\n    if (sphere) return;\n    for (let edgeI of edge) {\n      edgeIndices[edgeI].push([vec3.distance(p, positions[edgeI]), i]);\n    }\n  };\n  positions.forEach((p, i) => storeEdgeP(p, edges[i], i));\n\n  const getTopPos = (p: vec3): V3 => [p[0] + center[0], p[1] + center[0], p[2] + center[0]];\n  const getBottomPos = (p: vec3): V3 => [p[2], -p[1], p[0]];\n\n  const rotate90Pos = (p: vec3): V3 => [p[2], p[1], -p[0]];\n  const rotate180Pos = (p: vec3): V3 => [-p[0], p[1], -p[2]];\n  const rotate270Pos = (p: vec3): V3 => [-p[2], p[1], p[0]];\n\n  const positionsTransformed: [V3[], V3[], V3[], V3[], V3[], V3[], V3[], V3[]] = [[], [], [], [], [], [], [], []];\n  const splitEdgesTransformed: number[][][] = [[], [], [], [], [], [], [], []];\n\n  const addTransformedPositions = (p: vec3) => {\n    if (sphere) return;\n    const top = getTopPos(p);\n    const bot = getBottomPos(top);\n    const [top1, top2, top3] = [rotate90Pos(top), rotate180Pos(top), rotate270Pos(top)];\n    const [bot1, bot2, bot3] = [rotate90Pos(bot), rotate180Pos(bot), rotate270Pos(bot)];\n    [top, bot, top1, bot1, top2, bot2, top3, bot3].forEach((pos, i) => positionsTransformed[i].push(pos));\n  };\n  positions.forEach(addTransformedPositions);\n\n  const addTransformedSplitEdges = (edges: number[]) => {\n    if (sphere) return;\n    const transformed = _addTransformedSplitEdges(edges);\n    transformed.forEach((edges, i) => splitEdgesTransformed[i].push(edges));\n  };\n  splitEdges.forEach(addTransformedSplitEdges);\n\n  const midpoints: { [key: string]: { p: number[]; orig: string } } = {};\n\n  const cachePoint = (p: vec3, edge: number[], splitEdge: number[]) => {\n    const i = positions.length;\n    storeEdgeP(p, edge, i);\n    vec3.scale(p, p, r / vec3.length(p)); // normalize to rounded corner sphere radius\n    positions.push(p);\n    edges.push(edge);\n    splitEdges.push(splitEdge);\n    addTransformedPositions(p);\n    addTransformedSplitEdges(splitEdge);\n\n    return i;\n  };\n\n  const cacheMidpoints = (i1: number, i2: number, points: number, _splitEdge?: number[]) => {\n    const key = sortNum([i1, i2]).join(\"-\");\n    const keyOrig = [i1, i2].join(\"-\");\n    if (!midpoints[key]) {\n      const [p1, p2] = [positions[i1], positions[i2]];\n      const [e1, e2] = [edges[i1], edges[i2]];\n      const edge = arrayIntersect(e1, e2);\n      const splitEdge = _splitEdge || arrayIntersect(splitEdges[i1], splitEdges[i2]);\n      const cacheVal = Array.from({ length: points }, (_, i) =>\n        cachePoint(vec3.lerp(vec3.create(), p1, p2, (i + 1) / (points + 1)), [...edge], [...splitEdge])\n      );\n      midpoints[key] = { p: cacheVal, orig: keyOrig };\n    }\n    return keyOrig != midpoints[key].orig ? [...midpoints[key].p].reverse() : [...midpoints[key].p];\n  };\n\n  const subdivideTriangle = (iA: number, iB: number, iC: number, subs: number) => {\n    const edgeA = [...cacheMidpoints(iC, iA, subs - 1), iA];\n    const edgeB = [...cacheMidpoints(iC, iB, subs - 1), iB];\n    const rows = [[iC]];\n    zip(edgeA, edgeB).forEach(([a, b], i) => {\n      const midPs = cacheMidpoints(a, b, i);\n      rows.push([a, ...midPs, b]);\n    });\n    for (let i = 1; i < rows.length; i++) {\n      const row1 = rows[i - 1];\n      const row2 = rows[i];\n      const j = row1.length - 1;\n      indices.push(...indexRowsToTriangles(row1, row2, false, () => true), [row1[j], row2[j], row2[j + 1]]);\n    }\n  };\n\n  const subdivideCentroidTriangle = (iA: number, iB: number, iC: number, subs: number) => {\n    const [p0, p1, p2] = [positions[iA], positions[iB], positions[iC]];\n\n    const centroid = vec3.create();\n    vec3.add(centroid, p0, vec3.add(centroid, p1, p2));\n    vec3.normalize(centroid, centroid);\n    vec3.scale(centroid, centroid, r);\n\n    const iM = positions.length;\n\n    const getMidSplitEdges = (orig: number[]) => {\n      const allowed = orig.map((i) => esi(i)[0]);\n      return orig.filter((id) => {\n        const [c0, c1] = esi(id);\n        return allowed.includes(c0) && allowed.includes(c1);\n      });\n    };\n\n    const centroidSplitEdges = getMidSplitEdges([...splitEdges[iA], ...splitEdges[iB], ...splitEdges[iC]]);\n\n    positions.push(centroid);\n    edges.push([]);\n    splitEdges.push(centroidSplitEdges);\n    addTransformedPositions(centroid);\n    addTransformedSplitEdges(centroidSplitEdges);\n\n    const [iD] = cacheMidpoints(iA, iB, 1, getMidSplitEdges([...splitEdges[iA], ...splitEdges[iB]]));\n    const [iE] = cacheMidpoints(iB, iC, 1, getMidSplitEdges([...splitEdges[iB], ...splitEdges[iC]]));\n    const [iF] = cacheMidpoints(iC, iA, 1, getMidSplitEdges([...splitEdges[iC], ...splitEdges[iA]]));\n\n    subdivideTriangle(iA, iD, iM, subs - 1);\n    subdivideTriangle(iD, iB, iM, subs - 1);\n\n    subdivideTriangle(iB, iE, iM, subs - 1);\n    subdivideTriangle(iE, iC, iM, subs - 1);\n\n    subdivideTriangle(iC, iF, iM, subs - 1);\n    subdivideTriangle(iF, iA, iM, subs - 1);\n  };\n\n  const doSubdivide = faceEdgeSplit ? subdivideCentroidTriangle : subdivideTriangle;\n\n  if (sphere) {\n    splitEdges[0].push(esc(2, 3), esc(2, 4));\n    splitEdges[1].push(esc(0, 4), esc(0, 5));\n    splitEdges[2].push(esc(1, 3), esc(1, 5));\n\n    positions.push([0, 0, -s], [-s, 0, 0], [0, -s, 0]);\n    edges.push([], [], []);\n    // prettier-ignore\n    splitEdges.push(\n      [ [5, 0], [5, 1], [5, 3], [5, 4] ].map(([c0, c1]) => esc(c0, c1)),\n      [ [3, 1], [3, 2], [3, 4], [3, 5] ].map(([c0, c1]) => esc(c0, c1)),\n      [ [4, 0], [4, 2], [4, 3], [4, 5] ].map(([c0, c1]) => esc(c0, c1)),\n    );\n\n    doSubdivide(0, 1, 2, subdivisions);\n    doSubdivide(1, 3, 2, subdivisions);\n    doSubdivide(3, 4, 2, subdivisions);\n    doSubdivide(4, 0, 2, subdivisions);\n\n    doSubdivide(1, 0, 5, subdivisions);\n    doSubdivide(3, 1, 5, subdivisions);\n    doSubdivide(4, 3, 5, subdivisions);\n    doSubdivide(0, 4, 5, subdivisions);\n\n    const [allPositions, allIndices] = [positions.map((p) => vec3ToV3(p)), indices];\n\n    // return convertToFacePositions(allPositions, allIndices);\n    return [allPositions, allIndices, splitEdges];\n  }\n\n  rounded && doSubdivide(0, 1, 2, subdivisions);\n\n  // get positions and indices for all corner triangles\n  const getIndex = (i: number, batch: number) => i + batch * positions.length;\n  const allPositions: V3[] = [...positionsTransformed].flat();\n  const allIndices: V3[] = Array.from(Array(8))\n    .map((_, batch): V3[] => indices.map((t) => [getIndex(t[0], batch), getIndex(t[1], batch), getIndex(t[2], batch)]))\n    .flat();\n  const allSplitEdges = [...splitEdgesTransformed].flat();\n\n  const flat: V3[] = [];\n\n  edgeIndices.forEach((edge) => edge.sort((a, b) => a[0] - b[0]));\n  const [edge0Points_, edge1Points_, edge2Points_] = edgeIndices;\n  const edge0PointsR = [...edge0Points_].reverse();\n  const edge1PointsR = [...edge1Points_].reverse();\n  const edge2PointsR = [...edge2Points_].reverse();\n\n  const tops = [];\n  const bots = [];\n  const sides: number[][] = [];\n  const faces: [number[][], number[][], number[][], number[][], number[][], number[][]] = [[], [], [], [], [], []];\n\n  const subN = rounded ? Math.floor(0.001 + ((1 - rPercent) * 10) / 2) * 2 + 1 : bevelW > 0 ? 9 : 3;\n  const subs = Array.from({ length: subN }, (_, i) => (i + 1) / (subN + 1));\n\n  if (bevelW - r > 0.01 && bevelW < 0.5) {\n    const w = (bevelW - r) / (1 - 2 * r);\n    const i = Math.max(1, Math.min(Math.floor(subN / 2), mR(w * (subN + 1)))) - 1;\n    subs[i] = w;\n    subs[subN - 1 - i] = 1 - w;\n  }\n\n  for (let turn of [0, 1, 2, 3]) {\n    const prevTurn = turn ? turn - 1 : 3;\n    const getBatch = (i: number) => (turn * 2 + i) % 8;\n    const [top0, bot0, top1, bot1] = [getBatch(0), getBatch(1), getBatch(2), getBatch(3)];\n    tops.push(getIndex(2, top0));\n    bots.push(getIndex(2, bot0));\n\n    if (rounded) {\n      const verticalEdgePoints1 = edge0Points_.map(([_, i]) => getIndex(i, top0));\n      const verticalEdgePoints2 = edge0PointsR.map(([_, i]) => getIndex(i, bot0));\n\n      const horizEdgeTopPoints1 = edge1Points_.map(([_, i]) => getIndex(i, top0));\n      const horizEdgeTopPoints2 = edge2PointsR.map(([_, i]) => getIndex(i, top1));\n\n      const horizEdgeBotPoints1 = edge2Points_.map(([_, i]) => getIndex(i, bot0));\n      const horizEdgeBotPoints2 = edge1PointsR.map(([_, i]) => getIndex(i, bot1));\n\n      for (let [row1, row2, edge] of [\n        [verticalEdgePoints1, verticalEdgePoints2, [1]],\n        [horizEdgeTopPoints1, horizEdgeTopPoints2, [0]],\n        [horizEdgeBotPoints1, horizEdgeBotPoints2, [2]],\n      ]) {\n        const subdivides = subdivideIndexRows(row1, row2, subs, allPositions, allSplitEdges);\n        const [extraPositions, midEdgePoints, extraSplitEdges] = subdivides;\n\n        allPositions.push(...extraPositions.flat());\n        allSplitEdges.push(...extraSplitEdges.flat());\n\n        const pointsList = [row1, ...midEdgePoints, row2];\n        pointsList.forEach((_, i) => {\n          if (i) {\n            allIndices.push(...indexRowsToTriangles(pointsList[i - 1], pointsList[i]));\n          }\n        });\n\n        const edge0 = pointsList.map((l) => l[0]);\n        const edge1 = pointsList.map((l) => l[l.length - 1]);\n\n        edge[0] == 0 && (faces[turn][0] = edge0);\n        edge[0] == 1 && (faces[turn][1] = edge1);\n        edge[0] == 2 && (faces[turn][2] = edge1);\n\n        edge[0] == 0 && (faces[4][turn] = turn == 0 || turn == 3 ? [...edge1].reverse() : edge1);\n        edge[0] == 1 && (faces[prevTurn][3] = edge0);\n        edge[0] == 2 && (faces[5][3 - turn] = turn == 1 || turn == 2 ? [...edge0].reverse() : edge0);\n      }\n    }\n\n    if (!rounded) {\n      sides.push([getIndex(1, top0), getIndex(0, top1), getIndex(0, bot0), getIndex(1, bot1)]);\n    }\n  }\n\n  let edgeFaces: number[][][];\n\n  if (rounded) {\n    edgeFaces = faces;\n  } else {\n    const faces2: number[][][] = [];\n    sides.push([tops[3], tops[2], tops[0], tops[1]]);\n    sides.push([bots[0], bots[1], bots[3], bots[2]]);\n\n    for (let [t0, t1, b0, b1] of sides) {\n      const face: number[][] = [];\n      // prettier-ignore\n      ([[t0, t1], [t0, b0], [b0, b1], [t1, b1]]).forEach(([i0, i1]) => {\n        const subdivides = subdivideIndexRows([i0], [i1], subs, allPositions, allSplitEdges);\n        const [extraPositions, midEdgePoints, extraSplitEdges] = subdivides;\n\n        allPositions.push(...extraPositions.flat());\n        allSplitEdges.push(...extraSplitEdges.flat());\n\n        face.push([i0, ...midEdgePoints.flat(), i1]);\n      });\n      faces2.push(face);\n    }\n    edgeFaces = faces2;\n  }\n\n  for (let face of edgeFaces) {\n    const face0b = face[0].slice(1, face[0].length - 1);\n    const face2b = face[2].slice(1, face[2].length - 1);\n    const [extraPositions, midEdgePoints] = subdivideIndexRows(face0b, face2b, subs, allPositions);\n    const newSplitEdges = getFlatFaceSplitEdges(face[0], face[1], face[2], face[3], midEdgePoints, allSplitEdges, subN);\n\n    allPositions.push(...extraPositions.flat());\n    allSplitEdges.push(...newSplitEdges.flat());\n\n    const midRows = midEdgePoints.map((points, i) => [face[1][i + 1], ...points, face[3][i + 1]]);\n\n    const pointsList = [face[0], ...midRows, face[2]];\n    pointsList.forEach((_, i) => {\n      if (i) {\n        flat.push(...indexRowsToTriangles(pointsList[i - 1], pointsList[i], false, (j) => j == i - 1));\n      }\n    });\n  }\n\n  allIndices.push(...flat);\n\n  // return [...convertToFacePositions(allPositions, allIndices), allSplitEdges];\n  return [allPositions, allIndices, allSplitEdges];\n}\n\nfunction getFlatFaceSplitEdges(\n  edge_ny: number[],\n  edge_nx: number[],\n  edge_py: number[],\n  edge_px: number[],\n  midEdgePoints: number[][],\n  splitEdges: number[][],\n  subdivisions: number\n) {\n  const [ny, nx, py, px] = [edge_ny[1], edge_nx[1], edge_py[1], edge_px[1]].map((i) => splitEdges[i][0]);\n\n  const cmp = (a: number, b: number) => a >= Math.abs(b);\n  return midEdgePoints.map((row, j) =>\n    row.map((col, i) => {\n      const x = i - Math.floor(subdivisions / 2);\n      const y = j - Math.floor(subdivisions / 2);\n      const checks = [cmp(-y, x), cmp(-x, y), cmp(y, x), cmp(x, y)];\n      return [ny, nx, py, px].filter((_, k) => checks[k]);\n    })\n  );\n}\n\nfunction assertAdjacentOnly(arr: number[]) {\n  arr.forEach((n) => {\n    if (arr.includes(n < 3 ? n + 3 : n - 3)) throw \"invalid choice (non adjacent) faces.\";\n  });\n}\n\nfunction getSplitCube2(x: number, y: number) {\n  const ws = [x, y];\n  assertAdjacentOnly(ws);\n\n  const all = [0, 1, 2, 3, 4, 5];\n  const other = all.filter((a) => !ws.includes(a));\n\n  const esc = (component1: number, component2: number) => edgeSplitComponentsToId([component1, component2]);\n\n  const buckets: number[][] = Array.from({ length: 6 }, () => []);\n  for (let [w, w2] of [\n    [x, y],\n    [y, x],\n  ]) {\n    const opp = w < 3 ? w + 3 : w - 3;\n    const opp2 = w2 < 3 ? w2 + 3 : w2 - 3;\n    // full faces\n    buckets[w].push(...all.filter((a) => a != w && a != opp).map((a) => esc(w, a)));\n    buckets[w].push(...all.filter((a) => a != w2 && a != opp2).map((a) => esc(opp2, a)));\n    // adjacent faces\n    const [a1, a2] = other.filter((a) => a != opp && a != opp2);\n    buckets[w].push(esc(a1, w), esc(a2, w), esc(a1, opp2), esc(a2, opp2));\n  }\n\n  return [buckets[x], buckets[y]];\n}\n\nfunction getSplitCube3(x: number, y: number, z: number) {\n  const ws = [x, y, z];\n  assertAdjacentOnly(ws);\n\n  const all = [0, 1, 2, 3, 4, 5];\n  const other = all.filter((a) => !ws.includes(a));\n\n  const esc = (component1: number, component2: number) => edgeSplitComponentsToId([component1, component2]);\n\n  const buckets: number[][] = Array.from({ length: 6 }, () => []);\n  for (let w of ws) {\n    const opp = w < 3 ? w + 3 : w - 3;\n    // full face\n    buckets[w].push(...all.filter((a) => a != w && a != opp).map((a) => esc(w, a)));\n    // adjacent faces\n    const [a1, a2] = other.filter((a) => a != opp);\n    buckets[w].push(esc(a1, w), esc(a2, w), esc(a1, a2), esc(a2, a1));\n  }\n\n  return [buckets[x], buckets[y], buckets[z]];\n}\n\nfunction getSplitCube6(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number) {\n  const ws = [x0, y0, z0, x1, y1, z1];\n  const all = [0, 1, 2, 3, 4, 5];\n\n  const esc = (component1: number, component2: number) => edgeSplitComponentsToId([component1, component2]);\n\n  const buckets: number[][] = Array.from({ length: 6 }, () => []);\n  for (let w of ws) {\n    const opp = w < 3 ? w + 3 : w - 3;\n    // full face\n    buckets[w].push(...all.filter((a) => a != w && a != opp).map((a) => esc(w, a)));\n  }\n\n  return [buckets[x0], buckets[y0], buckets[z0], buckets[x1], buckets[y1], buckets[z1]];\n}\n\nexport function splitCubeFaceData(positions: V3[], indices: V3[], splitEdges: number[][], colors: number[]) {\n  let bucketsInfo: number[][];\n\n  if (colors.length == 2) {\n    bucketsInfo = getSplitCube2(colors[0], colors[1]);\n  } else if (colors.length == 3) {\n    bucketsInfo = getSplitCube3(colors[0], colors[1], colors[2]);\n  } else if (colors.length == 6) {\n    bucketsInfo = getSplitCube6(colors[0], colors[1], colors[2], colors[3], colors[4], colors[5]);\n  } else {\n    return [positions, indices];\n  }\n\n  const bucketsMap: { [key: number]: number } = {};\n  bucketsInfo.forEach((bucketInfo, n) => bucketInfo.forEach((i) => (bucketsMap[i] = n)));\n\n  const positionsCopy = [...positions];\n  const buckets: number[][] = Array.from(bucketsInfo, () => []);\n  const bucketedNewIndices: { [key: number]: number }[] = Array.from(bucketsInfo, () => ({}));\n\n  positions.forEach((p, i) => {\n    const edgeBuckets = sortNum(arrayUniqueVals(splitEdges[i].map((j) => bucketsMap[j])));\n\n    edgeBuckets.forEach((edgeBucket, bI) => {\n      let index = i;\n      if (bI) {\n        index = positionsCopy.length;\n        positionsCopy.push([...p]);\n        bucketedNewIndices[edgeBucket][i] = index;\n      }\n      buckets[edgeBucket].push(index);\n    });\n  });\n\n  const ordering = buckets.flat();\n  const indexMap = Object.fromEntries(ordering.map((oldI, newI) => [oldI, newI]));\n  const newPositions = ordering.map((oldI) => positionsCopy[oldI]);\n\n  const newIndices: V3[] = indices.map(([i0, i1, i2]) => {\n    const commonEdges = arrayIntersect(splitEdges[i0], arrayIntersect(splitEdges[i1], splitEdges[i2]));\n    const edgeBucket = arrayUniqueVals(commonEdges.map((j) => bucketsMap[j]))[0];\n    const findNewIndex = (i: number) => indexMap[bucketedNewIndices[edgeBucket][i] ?? i];\n    return [findNewIndex(i0), findNewIndex(i1), findNewIndex(i2)];\n  });\n\n  return [newPositions, newIndices];\n}\n\nfunction _bevelActions(blockPos: V3) {\n  return [\n    [0, 1, 2, 1],\n    [2, 0, 1, 1],\n    [2, 1, 0, -1],\n  ]\n    .map(([x, y, z, a]): [boolean, number, number, number][] => [\n      [!!blockPos[z] && blockPos[x] < 1 && blockPos[y] < 1, y, z, a * 45],\n      [!!blockPos[z] && blockPos[x] < 1 && blockPos[y] > -1, y, z, a * (45 + 90)],\n      [!!blockPos[z] && blockPos[x] > -1 && blockPos[y] > -1, y, z, a * (45 + 180)],\n      [!!blockPos[z] && blockPos[x] > -1 && blockPos[y] < 1, y, z, a * (45 + 270)],\n    ])\n    .flat();\n}\n\nexport function addBevel(bevelW: number, blockR: number, blockPos: V3, positions: V3[]) {\n  if (bevelW < 0.01) return positions;\n  if (!(blockPos[0] || blockPos[1] || blockPos[2])) return positions;\n\n  const s = 0.5; //block s\n  const bR = Math.min(blockR, 0.5) * s; //block R\n\n  const diag = Math.sqrt(2) / 2;\n  const h = diag - Math.sqrt((bevelW * bevelW) / 2); // target block height\n\n  const actions = _bevelActions(blockPos);\n\n  return positions.map((p): V3 => {\n    const res = vec3.fromValues(...p);\n    for (let [condition, iY, iZ, th] of actions) {\n      if (condition) {\n        const rotate = [vec3.rotateX, vec3.rotateY, vec3.rotateZ][iZ];\n        rotate(res, res, [0, 0, 0], rad(th));\n\n        const t = Math.min(1, (p[iZ] * Math.sign(blockPos[iZ]) + 0.5) / bevelW);\n        const hh = diag + t * (h - diag);\n\n        const q: V3 = [res[0], res[1], res[2]];\n        q[iY] = Math.min(res[iY], hh);\n\n        const [y, z] = [q[iY] - h + bR, q[iZ] * Math.sign(blockPos[iZ]) - s + bR];\n        if (y > 0 && z > 0) {\n          q[iY] = Math.min(y, Math.sqrt(bR * bR - z * z)) + h - bR;\n        }\n        rotate(res, q, [0, 0, 0], rad(-th));\n      }\n    }\n    return vec3ToV3(res);\n  });\n}\n\nexport function addFaceBevel(bevelW: number, blockPos: V3, positions: V3[], info: number[]) {\n  if (bevelW < 0.01) return positions;\n\n  const diag = Math.sqrt(2) / 2;\n  const h = diag - Math.sqrt((bevelW * bevelW) / 2); // target block height\n\n  const actions = _bevelActions(blockPos);\n\n  return positions.map((p, i): V3 => {\n    const res = vec3.fromValues(...p);\n    for (let [condition, iY, iZ, th] of actions) {\n      if (condition) {\n        const rotate = [vec3.rotateX, vec3.rotateY, vec3.rotateZ][iZ];\n        rotate(res, res, [0, 0, 0], rad(th));\n\n        const q: V3 = [res[0], res[1], res[2]];\n        q[iY] = Math.min(res[iY], h * (info[i] ?? 1));\n\n        rotate(res, q, [0, 0, 0], rad(-th));\n      }\n    }\n    return vec3ToV3(res);\n  });\n}\n","import { mat3, mat4, vec2, vec3 } from \"gl-matrix\";\n\nimport { Resources, loadMaterialResources, setTexture } from \"../../lib/pbr/renderer/resource_handler\";\n\nimport { initSolver, solve } from \"./asyncSolver\";\nimport { Camera } from \"./camera\";\nimport { Geometry } from \"./geometry\";\nimport { faceDefaults, Preset, presetDefault, PRESETS } from \"./presets\";\nimport {\n  addBevel,\n  addFaceBevel,\n  cubeData,\n  extrudedRingData,\n  roundedCubeData,\n  splitCubeFaceData,\n  squareData,\n} from \"./shapes\";\nimport * as utils from \"./utils\";\nimport {\n  acosC,\n  clamp,\n  deg,\n  hexToNRgb,\n  max,\n  min,\n  mR,\n  nRgbToHex,\n  rad,\n  randExp,\n  randInt,\n  ShallowNormalsInfo,\n  TriVec3,\n  V3,\n  vec3ToV3,\n} from \"./utils\";\nimport { Scene } from \"./scene\";\n\nconst EPSILON = 0.0000001;\n\ntype Side = 1 | -1;\n\nenum FaceId {\n  L = \"L\",\n  R = \"R\",\n  D = \"D\",\n  U = \"U\",\n  B = \"B\",\n  F = \"F\",\n}\nconst FACES = [FaceId.F, FaceId.U, FaceId.R, FaceId.B, FaceId.D, FaceId.L] as const;\n\nenum Axis {\n  x = \"x\",\n  y = \"y\",\n  z = \"z\",\n}\n\nenum Level {\n  m1 = -1,\n  z0 = 0,\n  p1 = 1,\n}\n\nenum Dir {\n  ccw = 1,\n  cw = -1,\n}\n\nfunction getAxisVector(axis: Axis, s = 1): V3 {\n  return [axis == Axis.x ? s : 0, axis == Axis.y ? s : 0, axis == Axis.z ? s : 0];\n}\n\nfunction getAxisAndSide(v: vec3): [Axis, Side] {\n  const v2 = vec3ToV3(v).map((val, i) => [val, i]);\n  const [val, idx] = max(v2, (k) => Math.abs(k[0]));\n  return [[Axis.x, Axis.y, Axis.z][idx], val > 0 ? 1 : -1];\n}\n\nfunction getFaceId(axis: Axis, side: Side): FaceId {\n  return {\n    x: { \"-1\": FaceId.L, \"1\": FaceId.R },\n    y: { \"-1\": FaceId.D, \"1\": FaceId.U },\n    z: { \"-1\": FaceId.B, \"1\": FaceId.F },\n  }[axis][side];\n}\n\nfunction orientFace(vertices: V3[], axis: Axis, side: Side): V3[] {\n  if (axis == Axis.z && side == 1) {\n    return vertices;\n  }\n  const rotateFn: (a: vec3, b: vec3, c: vec3, d: number) => vec3 = axis == Axis.y ? vec3.rotateX : vec3.rotateY;\n  const angle = axis == Axis.z ? 180 : (axis == Axis.x && side == -1) || (axis == Axis.y && side == 1) ? -90 : 90;\n\n  return vertices.map((v) => vec3ToV3(rotateFn(vec3.create(), v, [0, 0, 0], rad(angle))));\n}\n\ntype ColorSet = { R: V3; U: V3; F: V3; L: V3; D: V3; B: V3 };\n\n// prettier-ignore\nconst COLORS_CLASSIC: ColorSet = {\n  [FaceId.L]: [0.70, 0.30, 0.00], [FaceId.R]: [0.60, 0.00, 0.10],\n  [FaceId.D]: [0.90, 0.90, 0.15], [FaceId.U]: [0.85, 0.88, 0.90],\n  [FaceId.B]: [0.00, 0.20, 0.55], [FaceId.F]: [0.00, 0.45, 0.22],\n};\n// prettier-ignore\nconst COLORS_BRIGHT: ColorSet = {\n  [FaceId.L]: [0.90, 0.42, 0.10], [FaceId.R]: [0.81, 0.39, 0.58],\n  [FaceId.D]: [0.95, 0.90, 0.20], [FaceId.U]: [0.85, 0.85, 0.85],\n  [FaceId.B]: [0.24, 0.62, 0.81], [FaceId.F]: [0.45, 0.75, 0.15],\n};\n\n// prettier-ignore\nconst COLORS_NEUTRAL: ColorSet = {\n  [FaceId.L]: [0.898, 0.459, 0.122], [FaceId.R]: [0.878, 0.141, 0.267],\n  [FaceId.D]: [0.929, 0.929, 0.269], [FaceId.U]: [0.878, 0.878, 0.878],\n  [FaceId.B]: [0.051, 0.435, 0.729], [FaceId.F]: [0.031, 0.667, 0.161],\n};\n\n// prettier-ignore\nconst COLORS_PASTEL: ColorSet = {\n  [FaceId.L]: [0.961, 0.701, 0.456], [FaceId.R]: [0.923, 0.621, 0.601],\n  [FaceId.D]: [0.960, 0.903, 0.549], [FaceId.U]: [0.973, 0.933, 0.902],\n  [FaceId.B]: [0.552, 0.790, 0.885], [FaceId.F]: [0.592, 0.885, 0.750],\n};\n\nconst COLOR_SCHEMES: { [key: string]: ColorSet } = {\n  classic: COLORS_CLASSIC,\n  bright: COLORS_BRIGHT,\n  neutral: COLORS_NEUTRAL,\n  pastel: COLORS_PASTEL,\n};\n\nfunction getFaceColors(faceId: FaceId, vertexCount: number, scheme: string): V3[] {\n  const colorMap = COLOR_SCHEMES[scheme] || COLOR_SCHEMES.classic;\n  const color = colorMap[faceId];\n  return Array(vertexCount).fill(color);\n}\n\nconst COLORS: { [key: string]: [number, number, number] } = {\n  bl: [0.08, 0.08, 0.08],\n  st: [0.42, 0.42, 0.42],\n  si: [0.594, 0.588, 0.576],\n  go: [0.6, 0.54, 0.36],\n  rg: [0.6, 0.42, 0.36],\n};\n\nconst COLORS_PROC: { [key: string]: number } = {\n  colorful: 1,\n};\n\nconst randomizer = (): Preset => {\n  const r = (s = 1, t = 0, dp = 2) => mR(s * Math.random() + t, dp);\n  const blockType = r() < 0.5 ? \"stickered\" : \"stickerless\";\n\n  const [cols, colsProc, colSchemes] = [Object.keys(COLORS), Object.keys(COLORS_PROC), Object.keys(COLOR_SCHEMES)];\n  const bOptions1 = [...cols, ...colsProc];\n  const bOptions2 = [...colSchemes];\n  const fOptions = [...colSchemes, ...colSchemes, ...colsProc, ...cols];\n\n  const randCol = () => nRgbToHex(Math.random(), Math.random(), Math.random());\n  const randCol6 = () => Array.from({ length: 6 }, () => nRgbToHex(Math.random(), Math.random(), Math.random()));\n\n  const blockColor =\n    blockType == \"stickered\"\n      ? Math.random() < 1 / (1 + bOptions1.length)\n        ? randCol()\n        : bOptions1[randInt(bOptions1.length)]\n      : Math.random() < 1 / (1 + bOptions2.length)\n      ? randCol6()\n      : bOptions2[randInt(bOptions2.length)];\n\n  const faceColor =\n    Math.random() < 1 / (2 + fOptions.length)\n      ? randCol()\n      : Math.random() < 2 / (2 + fOptions.length)\n      ? randCol6()\n      : fOptions[randInt(fOptions.length)];\n\n  const blockR = mR(Math.random() * (blockType == \"stickered\" ? 0.85 : 1), 2);\n  const addStickers =\n    blockR < 0.85 ? [blockType == \"stickered\", blockType == \"stickered\", true, true, false][randInt(5)] : false;\n\n  const faceOptions = addStickers\n    ? {\n        faceCover: mR(1 - randExp(2) * (1 - (0.25 + blockR * 0.25)), 2),\n        faceR: r(),\n        faceEdgeR: r(),\n        faceRingW: r(0.95, 0.05),\n        faceExtrude: mR(randExp(2) * 0.1, 3),\n        faceColor,\n        faceMetallic: [0, 0, 0.5, 1, 1][randInt(5)],\n        faceRoughness: r(0.5),\n      }\n    : faceDefaults;\n\n  return {\n    spread: mR(1 + randExp(5) * 0.25, 3),\n    blockR,\n    bevelW: r() < 0.5 ? 0 : mR(randExp(4) * 0.5, 2),\n\n    blockType,\n    blockColor,\n    blockMetallic: [0, 0, 0.5, 1, 1][randInt(5)],\n    blockRoughness: r(0.5),\n\n    addStickers,\n    ...faceOptions,\n    wearTear: mR(randExp(2), 2),\n  };\n};\n\nfunction sanitizeInput(val: string) {\n  const res = [];\n  for (let a of val) {\n    const code = a.charCodeAt(0);\n    if (\n      (code > 47 && code < 58) || // numeric (0-9)\n      (code > 64 && code < 91) || // upper alpha (A-Z)\n      (code > 96 && code < 123) // lower alpha (a-z)\n    ) {\n      res.push(a);\n      if (res.length == 16) break;\n    }\n  }\n  return res.join(\"\");\n}\n\ntype ClickedInfo = {\n  axis: Axis;\n  side: Side;\n  block: Block;\n  p: vec3;\n  normal: vec3;\n  center: vec3;\n};\n\ntype MoveInfo = {\n  currAngle: number;\n  level: Level;\n  normal: vec3;\n  center: vec3;\n  blockDir: vec3;\n  shallowNormals?: ShallowNormalsInfo;\n};\n\ntype MovedInfo = {\n  axis: Axis;\n  level: Level;\n  side: Side;\n};\n\ntype RotQueueItem = {\n  axis: Axis;\n  level: Level;\n  dir: Dir;\n  elapsedA: number;\n  elapsedT: number;\n  turns: number;\n  finalTurns: number;\n  reverse?: boolean;\n};\n\nclass FaceBounds {\n  private readonly root: Rubik;\n  private readonly _geometry: Geometry;\n\n  get geometry() {\n    return this._geometry;\n  }\n\n  constructor(geo: Geometry, root: Rubik) {\n    this.root = root;\n    this._geometry = geo;\n  }\n\n  draw() {\n    this.geometry.draw(this.root.shader);\n  }\n}\n\nclass Face {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly block: Block;\n  private readonly root: Rubik;\n  readonly axis: Axis;\n  readonly side: Side;\n  readonly faceId: FaceId;\n\n  private readonly _geometry: Geometry;\n\n  get geometry() {\n    return this._geometry;\n  }\n\n  constructor(gl: WebGL2RenderingContext, block: Block, root: Rubik, axis: Axis, side: Side, faceId?: FaceId) {\n    this.gl = gl;\n    this.block = block;\n    this.root = root;\n\n    this.axis = axis;\n    this.side = side;\n    this.faceId = faceId || getFaceId(axis, side);\n\n    const [v, i, c, n] = this.initGeo();\n\n    this._geometry = new Geometry(gl, v, c, i, n);\n    this.initPosition();\n  }\n\n  initGeo() {\n    const { root, axis, side, faceId } = this;\n    const { faceColor, faceColorCustom6 } = root.config;\n    const [v, i, n, info] = this.root.faceGeoData;\n    const vertices0 = orientFace(v, axis, side);\n    const normals = orientFace(n, axis, side);\n\n    const vertices = addFaceBevel(this.root.bevelW, this.block.origPosition, vertices0, info);\n\n    // const colors3: V3[] = Array.from({ length: vertices.length }, () => [Math.random(), Math.random(), Math.random()]);\n    // const colors4: V3[] = Array.from({ length: 1 + vertices.length / 3 }, () => {\n    //   const col: V3 = [Math.random(), Math.random(), Math.random()];\n    //   return [col, col, col];\n    // }).flat();\n\n    const colors =\n      faceColor == \"custom6\"\n        ? Array(vertices.length).fill(faceColorCustom6[faceId])\n        : getFaceColors(faceId, vertices.length, this.root.config.faceColor);\n\n    return [vertices, i, colors, normals];\n  }\n\n  updateGeo() {\n    const [v, i, c, n] = this.initGeo();\n    this.geometry.update(v, c, i, n);\n  }\n\n  private initPosition() {\n    mat4.translate(this.geometry.transform, mat4.create(), this.block.displayPosition);\n  }\n\n  updatePosition() {\n    this.geometry.transform = mat4.create();\n    this.initPosition();\n  }\n\n  draw() {\n    this.geometry.draw(this.root.shader);\n  }\n}\n\nclass Block {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly root: Rubik;\n  faces: Face[];\n  position: vec3;\n  readonly origPosition: V3;\n  private _boundingBox: TriVec3[] = [];\n\n  readonly faceRotation = mat3.create();\n  private readonly _geometry: Geometry;\n\n  get boundingBox(): TriVec3[] {\n    return this._boundingBox.map((t) => utils.transformTriangle(t, this.root.transform));\n  }\n\n  get geometry() {\n    return this._geometry;\n  }\n\n  constructor(gl: WebGL2RenderingContext, root: Rubik, position: V3) {\n    this.gl = gl;\n\n    this.root = root;\n    this.position = position;\n    this.origPosition = [...position];\n\n    const [v, i, c] = this.initGeo();\n\n    this._geometry = new Geometry(gl, v, c, i);\n    this.faces = this.createFaces();\n    this.initPosition();\n  }\n\n  initGeo() {\n    const { blockType, blockColor2, blockColorCustom6 } = this.root.config;\n    const stickerless = blockType == \"stickerless\";\n\n    const pos = this.origPosition;\n\n    let faces = pos.map((p, i) => (p < 0 ? i + 3 : i)).filter((_, i) => pos[i]);\n\n    if (!faces.length) {\n      faces = [0, 1, 2, 3, 4, 5];\n    }\n\n    const [v0, i] = stickerless ? splitCubeFaceData(...this.root.blockGeoData, faces) : this.root.blockGeoData;\n\n    const v = addBevel(this.root.bevelW, this.root.blockR, pos, v0);\n\n    const vCount = v.length;\n    // const triCount = vCount / 3;\n\n    // const colors2: V3[] = Array(vCount).fill([1, 1, 1]);\n    // const colors3: V3[] = Array.from({ length: vCount }, () => [Math.random(), Math.random(), Math.random()]);\n    // const colors4: V3[] = Array.from({ length: triCount + 1 }, () => {\n    //   const col: V3 = [Math.random(), Math.random(), Math.random()];\n    //   return [col, col, col];\n    // }).flat();\n\n    const colors0: () => V3[] = () => Array(vCount).fill([1, 1, 1]);\n    const colors1: () => V3[] = () =>\n      faces\n        .map((f) => {\n          const faceId = getFaceId([Axis.x, Axis.y, Axis.z][f % 3], f < 3 ? 1 : -1);\n          const count = vCount / faces.length;\n          return blockColor2 == \"custom6\"\n            ? Array(count).fill(blockColorCustom6[faceId])\n            : getFaceColors(faceId, count, blockColor2);\n        })\n        .flat();\n\n    const colors = stickerless ? colors1() : colors0();\n\n    return [v, i, colors];\n  }\n\n  updateGeo() {\n    const [v, i, c] = this.initGeo();\n    this.geometry.update(v, c, i);\n  }\n\n  get displayPosition(): V3 {\n    const { spread } = this.root;\n    return [this.position[0] * spread, this.position[1] * spread, this.position[2] * spread];\n  }\n\n  private createFaces(): Face[] {\n    const position = this.position;\n    const faces: Face[] = [];\n    position.forEach((p, i) => {\n      if (p) {\n        faces.push(new Face(this.gl, this, this.root, [Axis.x, Axis.y, Axis.z][i], p > 0 ? 1 : -1));\n      }\n    });\n    return faces;\n  }\n\n  private initPosition() {\n    mat4.translate(this.geometry.transform, mat4.create(), this.displayPosition);\n\n    const [v, i] = cubeData();\n\n    const vertices = v.map((bVertex) => vec3ToV3(vec3.add(vec3.create(), bVertex, this.displayPosition)));\n    this._boundingBox = utils.getTriangles(vertices, i);\n  }\n\n  updatePosition() {\n    this.geometry.transform = mat4.create();\n    this.faces.forEach((f) => {\n      f.updatePosition();\n    });\n    this.initPosition();\n  }\n\n  private rotateUpdatePosition(rotateFn: (pos: vec3) => vec3, axis: Axis, dir: Dir, turns: number) {\n    const rotatedPos = rotateFn(this.position);\n    this.position = [mR(rotatedPos[0]), mR(rotatedPos[1]), mR(rotatedPos[2])];\n\n    mat3.multiply(this.faceRotation, utils.mat3Rotation90(axis, dir * turns), this.faceRotation);\n    this.updatePosition();\n  }\n\n  rotate(axis: Axis, dir: Dir, amt: number, isFinal: boolean, turns: number) {\n    const axisV = getAxisVector(axis);\n\n    if (isFinal) {\n      const rotateFn = (pos: vec3) =>\n        ({\n          x: vec3.rotateX,\n          y: vec3.rotateY,\n          z: vec3.rotateZ,\n        }[axis](vec3.create(), pos, [0, 0, 0], rad(90 * dir * turns)));\n      this.rotateUpdatePosition(rotateFn, axis, dir, turns);\n    } else {\n      const angle = rad(amt * dir);\n      const rotation = mat4.fromRotation(mat4.create(), angle, axisV);\n      const _rotate = (entity: Block | Face) => {\n        mat4.multiply(entity.geometry.transform, rotation, entity.geometry.transform);\n      };\n      _rotate(this);\n      this.faces.forEach(_rotate);\n    }\n  }\n\n  draw() {\n    const { blockColor, blockColorCustom, blockMetallic, blockRoughness, addStickers } = this.root.config;\n    const stickered = this.root.config.blockType == \"stickered\";\n    this.root.shader.setUniform(\"u_BlockPosition\", this.position);\n    this.root.shader.setUniform(\"u_BlockPositionOrig\", this.origPosition);\n    this.root.shader.setUniform(\"u_FaceRotation\", this.faceRotation);\n\n    const baseColor = [...(COLORS[blockColor] || blockColorCustom), 1];\n    const procColor = COLORS_PROC[blockColor] || 0;\n\n    this.root.shader.setUniform(\"u_BaseColorFactor\", stickered ? baseColor : [1, 1, 1, 1]);\n    this.root.shader.setUniform(\"u_NonVColor\", stickered ? 1 : 0);\n    this.root.shader.setUniform(\"u_ProcColor\", stickered ? procColor : 0);\n\n    this.root.shader.setUniform(\"u_MetallicFactor\", blockMetallic);\n    this.root.shader.setUniform(\"u_RoughnessFactor\", blockRoughness);\n\n    this.root.shader.setUniform(\"u_EnableBlockingAO\", this.root.blockAO ? 1 : 0);\n\n    this.geometry.draw(this.root.shader);\n    addStickers && this.drawFaces();\n  }\n\n  drawFaces() {\n    const { faceMetallic, faceRoughness, faceColor, faceColorCustom } = this.root.config;\n    const useVColor = COLOR_SCHEMES.hasOwnProperty(faceColor) || faceColor == \"custom6\";\n\n    const baseColor = [...(COLORS[faceColor] || faceColorCustom), 1];\n    const procColor = COLORS_PROC[faceColor] || 0;\n\n    this.root.shader.setUniform(\"u_BaseColorFactor\", useVColor ? [1, 1, 1, 1] : baseColor);\n    this.root.shader.setUniform(\"u_NonVColor\", useVColor ? 0 : 1);\n    this.root.shader.setUniform(\"u_ProcColor\", useVColor ? 0 : procColor);\n    this.root.shader.setUniform(\"u_EnableBlockingAO\", 0);\n    this.root.shader.setUniform(\"u_MetallicFactor\", faceMetallic);\n    this.root.shader.setUniform(\"u_RoughnessFactor\", faceRoughness);\n\n    for (let face of this.faces) {\n      face.draw();\n    }\n  }\n}\n\ntype Config = {\n  blockType: \"stickered\" | \"stickerless\";\n  blockColor: string;\n  blockColorCustom: [number, number, number];\n  blockColor2: string;\n  blockMetallic: number;\n  blockRoughness: number;\n  blockColorCustom6: ColorSet;\n  addStickers: boolean;\n  faceColor: string;\n  faceColorCustom: [number, number, number];\n  faceColorCustom6: ColorSet;\n  faceMetallic: number;\n  faceRoughness: number;\n  wearTear: number;\n};\n\ntype ConfigUpdate = {\n  _spread?: number;\n  blockR?: number;\n  bevelW?: number;\n  faceCover?: number;\n  faceR?: number;\n  faceEdgeR?: number;\n  faceRingW?: number;\n  faceExtrude?: number;\n\n  blockType?: \"stickered\" | \"stickerless\";\n  blockColor?: string;\n  blockColorCustom?: [number, number, number];\n  blockColor2?: string;\n  blockColorCustom6?: ColorSet;\n  blockMetallic?: number;\n  blockRoughness?: number;\n\n  addStickers?: boolean;\n  faceColor?: string;\n  faceColorCustom?: [number, number, number];\n  faceColorCustom6?: ColorSet;\n  faceMetallic?: number;\n  faceRoughness?: number;\n\n  wearTear?: number;\n};\n\nexport class Rubik {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly scene: Scene;\n  private readonly camera: Camera;\n\n  private readonly speed = 2; // turns/s\n  private solveSpeed = 3; // turns/s\n  private scrambleSpeed = 4; // turns/s\n  private scrambleMoves = 20;\n  private rotationQueue: RotQueueItem[] = [];\n\n  transform = mat4.create();\n  invTransform = mat4.create();\n  invTransform3 = mat3.create();\n\n  private readonly animAlpha = 2.25;\n  private blocks: Block[];\n\n  private solving = false;\n  private scrambling = false;\n  private showBounding = false;\n\n  _blockGeoData: [V3[], V3[], number[][]] = [[], [], []];\n  _faceGeoData: [V3[], V3[], V3[], number[]] = [[], [], [], []];\n\n  private boundingBox: [Axis, Side, TriVec3[]][] | undefined;\n  private bounds: FaceBounds[] | undefined;\n\n  manualBlockMoving = false;\n\n  private moveBlockInfo: null | MoveInfo = null;\n  private movedBlockInfo: null | MovedInfo = null;\n  private clickedBlockInfo: null | ClickedInfo = null;\n\n  blockRays = true;\n  blockAO = true;\n\n  _spread = 1;\n  blockR = 0.15;\n  bevelW = 0;\n  faceCover = 0.85;\n  faceR = 0.15;\n  faceEdgeR = 0.5;\n  faceRingW = 1;\n  faceExtrude = 0.005;\n\n  config: Config = {\n    blockType: \"stickered\",\n    blockColor: \"bl\",\n    blockColorCustom: [1, 0.5, 0.5],\n    blockColor2: \"classic\",\n    blockColorCustom6: { ...COLORS_CLASSIC },\n    blockMetallic: 0,\n    blockRoughness: 0.25,\n\n    addStickers: true,\n    faceColor: \"classic\",\n    faceColorCustom: [1, 0.5, 0.5],\n    faceColorCustom6: { ...COLORS_CLASSIC },\n    faceMetallic: 0,\n    faceRoughness: 0.25,\n\n    wearTear: 0.5,\n  };\n\n  private preset = \"classic\";\n  private userPresets: { [key: string]: Preset } = {};\n  private presetToDelete: string | null = null;\n\n  private resources?: Resources;\n\n  get spread() {\n    return Math.max(this._spread, 1.001);\n  }\n\n  get faceCoverAdj() {\n    const blockSide = 1 - this.blockR;\n    return this.faceCover * blockSide;\n  }\n\n  get cubeR() {\n    return 0.5 * (3 + 2 * (this.spread - 1));\n  }\n\n  get boundingPlanes(): [Axis, Side, TriVec3[]][] {\n    return (this.boundingBox || []).map(([axis, side, triangles]) => [\n      axis,\n      side,\n      triangles.map((t) => utils.transformTriangle(t, this.transform)),\n    ]);\n  }\n\n  get rotating() {\n    return this.rotationQueue.length > 0;\n  }\n\n  get shader() {\n    return this.scene.activeShader;\n  }\n\n  constructor(gl: WebGL2RenderingContext, scene: Scene) {\n    this.gl = gl;\n\n    this.scene = scene;\n    this.camera = scene.camera;\n\n    loadMaterialResources(gl).then((resources) => {\n      this.resources = resources;\n      this.scene.materialsLoaded = true;\n      this.scene.environment.setBG();\n    });\n\n    this.updateBoundingBox();\n\n    this.updateFaceGeo();\n    this.updateBlockGeo();\n    this.blocks = this.createBlocks();\n\n    this.loadUserPresets();\n    this.initDOMInputs();\n\n    this.initialPosition();\n\n    this.loadConfigFromPreset();\n\n    initSolver();\n  }\n\n  private updateBlockGeo() {\n    this._blockGeoData = roundedCubeData(1, this.blockR, this.bevelW);\n  }\n\n  private loadUserPresets() {\n    const presets = JSON.parse(localStorage.getItem(\"userPresets\") || \"null\");\n    if (!presets) {\n      localStorage.setItem(\"userPresets\", \"{}\");\n    } else {\n      this.userPresets = presets;\n    }\n  }\n\n  private loadConfigFromPreset(preset?: Preset) {\n    preset = preset || PRESETS[this.preset] || this.userPresets[this.preset] || PRESETS.classic;\n\n    const update: ConfigUpdate = {\n      _spread: preset.spread,\n      blockR: preset.blockR,\n      bevelW: preset.bevelW,\n      faceCover: preset.faceCover,\n      faceR: preset.faceR,\n      faceEdgeR: preset.faceEdgeR,\n      faceRingW: preset.faceRingW,\n      faceExtrude: preset.faceExtrude,\n\n      blockType: preset.blockType,\n      blockMetallic: preset.blockMetallic,\n      blockRoughness: preset.blockRoughness,\n\n      addStickers: preset.addStickers,\n      faceMetallic: preset.faceMetallic,\n      faceRoughness: preset.faceRoughness,\n\n      wearTear: preset.wearTear,\n    };\n\n    const col = preset.blockColor;\n    if (Array.isArray(col)) {\n      update.blockColor2 = \"custom6\";\n      const cols = [...col, ...Array(6).fill(\"#000000\")].map(hexToNRgb);\n      update.blockColorCustom6 = { R: cols[0], U: cols[1], F: cols[2], L: cols[3], D: cols[4], B: cols[5] };\n    } else {\n      if (COLORS.hasOwnProperty(col) || COLORS_PROC.hasOwnProperty(col)) {\n        update.blockColor = col;\n      } else if (COLOR_SCHEMES.hasOwnProperty(col)) {\n        update.blockColor2 = col;\n      } else {\n        update.blockColor = \"custom\";\n        update.blockColorCustom = hexToNRgb(col);\n      }\n    }\n\n    const col2 = preset.faceColor;\n    if (Array.isArray(col2)) {\n      update.faceColor = \"custom6\";\n      const cols = [...col2, ...Array(6).fill(\"#000000\")].map(hexToNRgb);\n      update.faceColorCustom6 = { R: cols[0], U: cols[1], F: cols[2], L: cols[3], D: cols[4], B: cols[5] };\n    } else {\n      if (COLORS.hasOwnProperty(col2) || COLORS_PROC.hasOwnProperty(col2) || COLOR_SCHEMES.hasOwnProperty(col2)) {\n        update.faceColor = col2;\n      } else {\n        update.faceColor = \"custom\";\n        update.faceColorCustom = hexToNRgb(col2);\n      }\n    }\n    this.generalUIUpdate(update, false);\n  }\n\n  private deletePreset() {\n    this.presetToDelete && delete this.userPresets[this.presetToDelete];\n    if (this.preset == this.presetToDelete) {\n      this.preset = \"---\";\n    }\n    this.presetToDelete = null;\n    localStorage.setItem(\"userPresets\", JSON.stringify(this.userPresets));\n    this.updatePresetSelectUI();\n  }\n\n  private saveConfigToPreset() {\n    // @ts-ignore\n    new bootstrap.Collapse(\"#accBody-savePresets\").hide();\n\n    const { _spread, blockR, bevelW, faceCover, faceR, faceEdgeR, faceRingW, faceExtrude } = this;\n    const { blockType, blockColor, blockColorCustom, blockColor2, blockColorCustom6, blockMetallic, blockRoughness } =\n      this.config;\n    const { addStickers, faceColor, faceColorCustom, faceColorCustom6, faceMetallic, faceRoughness, wearTear } =\n      this.config;\n\n    const custom6ToStrArr = (c: ColorSet) => FACES.map((f) => c[f]).map((f) => nRgbToHex(...f));\n\n    // prettier-ignore\n    const res:Preset = {\n      ...presetDefault,\n\n      spread: _spread, blockR, bevelW, ...(addStickers ? { faceCover, faceR, faceEdgeR, faceRingW, faceExtrude } : {}), blockType,\n      blockColor: blockType == \"stickered\" ? blockColor == \"custom\" ? nRgbToHex(...blockColorCustom) : blockColor\n                                           : blockColor2 == \"custom6\" ? custom6ToStrArr(blockColorCustom6) : blockColor2,\n      blockMetallic, blockRoughness,\n      addStickers,\n      ...(addStickers ? {\n        faceColor: faceColor == \"custom6\" ? custom6ToStrArr(faceColorCustom6)\n                 : faceColor == \"custom\" ? nRgbToHex(...faceColorCustom) : faceColor, faceMetallic, faceRoughness} : {}),\n      wearTear,\n    };\n\n    const nameInp = utils.getInputById(\"saveName\");\n    const name = `(u)${nameInp.value || nameInp.placeholder}`;\n\n    this.userPresets[name] = res;\n    localStorage.setItem(\"userPresets\", JSON.stringify(this.userPresets));\n\n    nameInp.value = \"\";\n    this.preset = name;\n    this.updatePresetSelectUI();\n  }\n\n  get blockGeoData(): [V3[], V3[], number[][]] {\n    const [v, i, s] = this._blockGeoData;\n    return [[...v], [...i], [...s]];\n  }\n\n  private updateFaceGeo() {\n    const { faceCoverAdj, faceR, faceRingW, faceExtrude, faceEdgeR, bevelW } = this;\n    this._faceGeoData = extrudedRingData(faceCoverAdj, 0.5, faceR, faceRingW, faceExtrude, faceEdgeR, bevelW);\n  }\n\n  get faceGeoData(): [V3[], V3[], V3[], number[]] {\n    const [v, i, n, info] = this._faceGeoData;\n    return [[...v], [...i], n.map((v) => v), [...info]];\n  }\n\n  private createBlocks() {\n    const blocks = [];\n\n    for (let x = -1; x < 2; x++) {\n      for (let y = -1; y < 2; y++) {\n        for (let z = -1; z < 2; z++) {\n          // if (x + y + z == 3) continue;\n          blocks.push(new Block(this.gl, this, [x, y, z]));\n        }\n      }\n    }\n    return blocks;\n  }\n\n  private updateBoundingBox() {\n    const res = [];\n    const bounds = [];\n    const { cubeR } = this;\n\n    for (let axis of [Axis.x, Axis.y, Axis.z]) {\n      for (let side of [-1, 1] as const) {\n        const faceId = getFaceId(axis, side);\n        const [v, i] = squareData(cubeR * 2, cubeR);\n        const vertices = orientFace(v, axis, side);\n        const triangles = utils.getTriangles(vertices, i);\n        const colors = getFaceColors(faceId, vertices.length, \"classic\");\n        const x: [Axis, Side, TriVec3[]] = [axis, side, triangles];\n        res.push(x);\n        bounds.push(new FaceBounds(new Geometry(this.gl, vertices, colors, i), this));\n      }\n    }\n    this.boundingBox = res;\n    this.bounds = bounds;\n  }\n\n  handleSaverUI(randName = false) {\n    let name = this.preset;\n    if (randName || name == \"---\") {\n      let i = 1;\n      name = `(u)random${i}`;\n      while (this.userPresets[name]) {\n        i++;\n        name = `(u)random${i}`;\n      }\n    }\n\n    utils.getInputById(\"saveName\").placeholder = name.replace(\"(u)\", \"\");\n    this.handleSaverUIText(name);\n  }\n  handleSaverUIText(name: string) {\n    const overriding = !!this.userPresets[name];\n    utils.getElementById(\"saveHelp\").classList[overriding ? \"remove\" : \"add\"](\"hidden\");\n    utils.getElementById(\"saveHelpNew\").classList[overriding ? \"add\" : \"remove\"](\"hidden\");\n  }\n\n  updatePresetSelectUI() {\n    const u = \"(u)\";\n    utils.getElementById(\"presetChoice\").innerHTML = this.preset.replace(u, \"\");\n\n    const htmlStr =\n      `<li><h6 class=\"dropdown-header\">presets</h6></li>` +\n      Object.keys(PRESETS)\n        .map((p) => `<li><a id=\"${p}_preset\" class=\"dropdown-item\">${p}</a></li>`)\n        .join(\"\");\n    const htmlStr2 =\n      `<li><hr class=\"dropdown-divider\"></li>\n       <li><h6 class=\"dropdown-header\">user presets</h6></li>` +\n      Object.keys(this.userPresets)\n        .map(\n          (p) => `\n          <li>\n            <a id=\"${p}_preset\" class=\"dropdown-item\">\n              ${p.replace(u, \"\")}\n              <button class=\"btn2 trash-btn\" id=\"${p}_del\"  data-bs-toggle=\"modal\" data-bs-target=\"#deleteModal\">\n                <span class=\"trash-icon\"></span>\n              </button>\n            </a>\n          </li>`\n        )\n        .join(\"\");\n\n    utils.getElementById(\"presetsSelect\").innerHTML = htmlStr + (Object.keys(this.userPresets).length ? htmlStr2 : \"\");\n\n    const activeOption = () => {\n      document.querySelectorAll(\"#presetsSelect li a\").forEach((n) => {\n        n.classList.remove(\"active\");\n        this.preset == n.id.split(\"_\")[0] && n.classList.add(\"active\");\n      });\n    };\n    activeOption();\n    this.handleSaverUI();\n\n    document.querySelectorAll(\"#presetsSelect li a\").forEach((n) => {\n      if (!(n instanceof HTMLAnchorElement)) return;\n      n.onclick = (e) => {\n        if (!(e.target instanceof HTMLAnchorElement)) return;\n        this.preset = n.id.split(\"_\")[0];\n\n        utils.getElementById(\"presetChoice\").innerHTML = this.preset.replace(u, \"\");\n        activeOption();\n        this.handleSaverUI();\n        this.loadConfigFromPreset();\n      };\n    });\n\n    document.querySelectorAll(\"#presetsSelect li a .trash-btn\").forEach((n) => {\n      if (!(n instanceof HTMLButtonElement)) return;\n      n.onclick = () => {\n        this.presetToDelete = n.id.split(\"_\")[0];\n        utils.getElementById(\"delName\").innerHTML = this.presetToDelete.replace(u, \"\");\n      };\n    });\n  }\n\n  updateDOMVal(id: string, val: number | string) {\n    utils.getElementById(id).innerText = val.toString();\n  }\n\n  private initDOMInputs() {\n    const { blockType, blockColor, blockColor2, addStickers, faceColor } = this.config;\n\n    const updater = (id: string) => utils.targetListener((t) => this.generalUIUpdate({ [id]: +t.value }));\n    const updaterStr = (id: string) =>\n      utils.targetListener((t) => this.generalUIUpdate({ [id]: t.value.split(\"_\")[1] }));\n\n    this.updatePresetSelectUI();\n\n    for (let id of [\"blockRays\", \"blockAO\", \"showBounding\"] as const) {\n      const handler = utils.targetListener((t) => {\n        this[id] = t.checked;\n        this.triggerRedraw();\n      });\n      utils.handleInputById(id, this[id], \"onclick\", handler);\n    }\n\n    utils.handleButtonById(\"solve\", \"onclick\", () => this.solve());\n    utils.handleButtonById(\"scramble\", \"onclick\", () => this.scramble());\n    utils.handleButtonById(\"reset\", \"onclick\", () => this.reset());\n\n    utils.handleButtonById(\"smButton\", \"onclick\", () => utils.getElementById(\"sideMenuButton\").classList.add(\"transp\"));\n    utils.handleButtonById(\"sideMenuClose\", \"onclick\", () =>\n      utils.getElementById(\"sideMenuButton\").classList.remove(\"transp\")\n    );\n\n    utils.handleButtonById(\"randomizer\", \"onclick\", () => {\n      utils.getElementById(\"presetChoice\").innerHTML = \"---\";\n      this.handleSaverUI(true);\n      document.querySelectorAll(\"#presetsSelect li a\").forEach((n) => {\n        n.classList.remove(\"active\");\n      });\n      this.loadConfigFromPreset(randomizer());\n    });\n\n    const handleSaveNameChange = utils.targetListener((t) => {\n      t.value = sanitizeInput(t.value);\n      this.handleSaverUIText(`(u)${t.value}`);\n    });\n    utils.handleInputById(\"saveName\", \"\", \"oninput\", handleSaveNameChange);\n\n    utils.handleButtonById(\"delModalButton\", \"onclick\", () => this.deletePreset());\n\n    utils.handleButtonById(\"save\", \"onclick\", () => this.saveConfigToPreset());\n\n    utils.handleInputById(\"u_Debug\", \"0\", \"onchange\", () => this.triggerRedraw());\n\n    const envIntensity = this.scene.environment.intensity;\n    const envIntensityHandler = utils.targetListener((t) => {\n      this.scene.environment.intensity = +t.value;\n      this.triggerRedraw();\n      const envIntensity = this.scene.environment.intensity;\n      this.updateDOMVal(\"envIntensityTxt\", `${mR(10 ** envIntensity, 2)} (${mR(envIntensity, 2)})`);\n    });\n    utils.handleInputById(\"envIntensityRange\", envIntensity.toString(), \"onchange\", envIntensityHandler);\n    this.updateDOMVal(\"envIntensityTxt\", `${mR(10 ** envIntensity, 2)} (${mR(envIntensity, 2)})`);\n\n    const envColorHandler = utils.targetListener((t) => {\n      this.scene.environment.color = t.value;\n      this.triggerRedraw();\n    });\n    utils.handleInputById(\"envColorInput\", this.scene.environment.color, \"onchange\", envColorHandler);\n\n    for (let id of [\"scrambleMoves\", \"scrambleSpeed\", \"solveSpeed\"] as const) {\n      const handler = utils.targetListener((t) => {\n        this[id] = +t.value;\n        this.updateDOMVal(`${id}Txt`, this[id]);\n      });\n      utils.handleInputById(`${id}Range`, this[id].toString(), \"onchange\", handler);\n      this.updateDOMVal(`${id}Txt`, this[id]);\n    }\n\n    // --------\n\n    utils.handleInputById(\"spreadRange\", this._spread.toString(), \"onchange\", updater(\"_spread\"));\n\n    for (let id of [\"blockR\", \"bevelW\", \"faceCover\", \"faceR\", \"faceEdgeR\", \"faceRingW\", \"faceExtrude\"] as const) {\n      utils.handleInputById(`${id}Range`, this[id].toString(), \"onchange\", updater(id));\n    }\n\n    // --------\n\n    utils.handleRadioByName(\"blockTypeRadio\", `blockTypeRadio_${blockType}`, updaterStr(\"blockType\"));\n\n    utils.handleRadioByName(\"blockColorRadio\", `blockColorRadio_${blockColor}`, updaterStr(\"blockColor\"));\n\n    const getColor6html = (ty: string, arr: string[]) =>\n      arr\n        .map(\n          (f) => `\n        <span>\n          <label for=\"${ty}ColorInput_${f}\">${f}</label> <input type=\"color\" id=\"${ty}ColorInput_${f}\" />\n        </span>`\n        )\n        .join(\"\");\n\n    for (let type of [\"block\", \"face\"]) {\n      const color = type == \"block\" ? \"blockColor\" : \"faceColor\";\n      const colorCustom = type == \"block\" ? \"blockColorCustom\" : \"faceColorCustom\";\n      const colorCustom6 = type == \"block\" ? \"blockColorCustom6\" : \"faceColorCustom6\";\n\n      const handler = utils.targetListener((t) => {\n        this.generalUIUpdate({ [colorCustom]: utils.hexToNRgb(t.value), [color]: \"custom\" });\n      });\n      utils.handleInputById(`${type}ColorInput`, utils.nRgbToHex(...this.config[colorCustom]), \"onchange\", handler);\n\n      utils.getElementById(`${type}ColorInputs6row1`).innerHTML = getColor6html(type, FACES.slice(0, 3));\n      utils.getElementById(`${type}ColorInputs6row2`).innerHTML = getColor6html(type, FACES.slice(3, 6));\n\n      FACES.forEach((f) => {\n        const handler = utils.targetListener((t) => {\n          this.generalUIUpdate({ [colorCustom6]: { ...this.config[colorCustom6], [f]: utils.hexToNRgb(t.value) } });\n        });\n        const col = this.config[colorCustom6][f];\n        utils.handleInputById(`${type}ColorInput_${f}`, utils.nRgbToHex(...col), \"onchange\", handler);\n      });\n    }\n\n    utils.handleRadioByName(\"blockColorRadio2\", `blockColorRadio_${blockColor2}`, updaterStr(\"blockColor2\"));\n\n    for (let id of [\"blockMetallic\", \"blockRoughness\", \"faceMetallic\", \"faceRoughness\", \"wearTear\"] as const) {\n      utils.handleInputById(`${id}Range`, this.config[id].toString(), \"onchange\", updater(id));\n    }\n\n    const addStickersHandler = utils.targetListener((t) => this.generalUIUpdate({ addStickers: t.checked }));\n    utils.handleInputById(\"addStickersCheck\", addStickers, \"onclick\", addStickersHandler);\n\n    utils.handleRadioByName(\"faceColorRadio\", `faceColorRadio_${faceColor}`, updaterStr(\"faceColor\"));\n  }\n\n  updateGeo(updateBlocks: boolean, updateFaces: boolean) {\n    for (let block of this.blocks) {\n      if (updateBlocks) {\n        block.updateGeo();\n      }\n      if (updateFaces) {\n        for (let face of block.faces) {\n          face.updateGeo();\n        }\n      }\n    }\n  }\n\n  generalUIUpdate(config: ConfigUpdate, edited = true) {\n    let [updateBlockGeo, updateFaceGeo, updateGeoBlocks, updateGeoFaces] = [false, false, false, false];\n\n    if (config._spread) {\n      this._spread = config._spread;\n      this.updateBoundingBox();\n      for (let block of this.blocks) block.updatePosition();\n      utils.getInputById(\"spreadRange\").value = this._spread.toString();\n      this.updateDOMVal(\"spreadTxt\", this._spread);\n    }\n\n    for (let id of [\"blockR\", \"bevelW\", \"faceCover\", \"faceR\", \"faceEdgeR\", \"faceRingW\", \"faceExtrude\"] as const) {\n      if (config[id] != undefined) {\n        this[id] = config[id]!;\n        if (id == \"blockR\" || id == \"bevelW\") {\n          updateBlockGeo = true;\n          updateGeoBlocks = true;\n        }\n        updateFaceGeo = true;\n        updateGeoFaces = true;\n        utils.getInputById(`${id}Range`).value = this[id].toString();\n        this.updateDOMVal(`${id}Txt`, this[id]);\n      }\n    }\n\n    if (config.blockType) {\n      this.config.blockType = config.blockType;\n      updateGeoBlocks = true;\n      this.uiToggleBlockColorRadios();\n      utils.getInputById(`blockTypeRadio_${this.config.blockType}`).checked = true;\n    }\n\n    for (let type of [\"block\", \"face\"]) {\n      const color = type == \"block\" ? \"blockColor\" : \"faceColor\";\n      const colorCustom = type == \"block\" ? \"blockColorCustom\" : \"faceColorCustom\";\n      const colorCustom6 = type == \"block\" ? \"blockColorCustom6\" : \"faceColorCustom6\";\n\n      if (config[colorCustom] != undefined) {\n        this.config[colorCustom] = config[colorCustom]!;\n        this.config[color] = \"custom\";\n        utils.getInputById(`${type}ColorRadio_custom`).checked = true;\n        utils.getInputById(`${type}ColorInput`).value = utils.nRgbToHex(...this.config[colorCustom]);\n      }\n\n      if (config[colorCustom6] != undefined) {\n        this.config[colorCustom6] = config[colorCustom6]!;\n        FACES.forEach((f) => {\n          utils.getInputById(`${type}ColorInput_${f}`).value = utils.nRgbToHex(...this.config[colorCustom6][f]);\n        });\n        type == \"face\" && (updateGeoFaces = true);\n        type == \"block\" && (updateGeoBlocks = true);\n      }\n    }\n\n    if (config.blockColor != undefined) {\n      this.config.blockColor = config.blockColor;\n      utils.getInputById(`blockColorRadio_${this.config.blockColor}`).checked = true;\n    }\n\n    if (config.blockColor2 != undefined) {\n      this.config.blockColor2 = config.blockColor2;\n      updateGeoBlocks = true;\n      utils.getInputById(`blockColorRadio_${this.config.blockColor2}`).checked = true;\n      utils.getElementById(\"blockColorInputs6\").classList[config.blockColor2 == \"custom6\" ? \"remove\" : \"add\"](\"hidden\");\n    }\n\n    for (let id of [\"blockMetallic\", \"blockRoughness\", \"faceMetallic\", \"faceRoughness\", \"wearTear\"] as const) {\n      if (config[id] != undefined) {\n        this.config[id] = config[id]!;\n        this.updateDOMVal(`${id}Txt`, this.config[id]);\n        utils.getInputById(`${id}Range`).value = this.config[id].toString();\n      }\n    }\n\n    if (config.addStickers != undefined) {\n      this.config.addStickers = config.addStickers;\n      this.uiToggleStickerOptions();\n      utils.getInputById(\"addStickersCheck\").checked = this.config.addStickers;\n    }\n\n    if (config.faceColor != undefined) {\n      this.config.faceColor = config.faceColor;\n      const update = COLOR_SCHEMES.hasOwnProperty(this.config.faceColor) || this.config.faceColor == \"custom6\";\n      update && (updateGeoFaces = true);\n      utils.getInputById(`faceColorRadio_${this.config.faceColor}`).checked = true;\n      utils.getElementById(\"faceColorInputs6\").classList[config.faceColor == \"custom6\" ? \"remove\" : \"add\"](\"hidden\");\n    }\n\n    const preset = utils.getElementById(\"presetChoice\");\n    if (edited && preset.innerHTML != \"---\" && !preset.innerHTML.endsWith(\"(edited)\")) preset.innerHTML += \" (edited)\";\n\n    updateBlockGeo && this.updateBlockGeo();\n    updateFaceGeo && this.updateFaceGeo();\n    (updateGeoBlocks || updateGeoFaces) && this.updateGeo(updateGeoBlocks, updateGeoFaces);\n    this.triggerRedraw();\n  }\n\n  uiToggleStickerOptions() {\n    const show = this.config.addStickers;\n    utils.getElementById(\"faceStickerOptions\").classList[show ? \"remove\" : \"add\"](\"hidden\");\n  }\n\n  uiToggleBlockColorRadios() {\n    const active = this.config.blockType;\n    const inactive = active == \"stickered\" ? \"stickerless\" : \"stickered\";\n    utils.getElementById(`blockColor_${active}`).classList.remove(\"hidden\");\n    utils.getElementById(`blockColor_${inactive}`).classList.add(\"hidden\");\n    this.config.addStickers = active == \"stickered\";\n    utils.getInputById(\"addStickersCheck\").checked = this.config.addStickers;\n    this.uiToggleStickerOptions();\n  }\n\n  private triggerRedraw() {\n    this.scene.triggerRedraw();\n  }\n\n  private queueRotation(axis: Axis, level: Level, dir: Dir, turns: number) {\n    this.rotationQueue.push({ axis, level, dir, elapsedA: 0, elapsedT: 0, turns, finalTurns: turns });\n  }\n\n  private rotate(angle: number, rotAxis: vec3) {\n    const rotation = mat4.fromRotation(mat4.create(), rad(angle), rotAxis);\n    mat4.multiply(this.transform, rotation, this.transform);\n    mat4.invert(this.invTransform, this.transform);\n    this.triggerRedraw();\n  }\n\n  mouseRotate(dx: number, dy: number) {\n    this.rotate(dy, [1, 0, 0]);\n    this.rotate(dx, [0, 1, 0]);\n  }\n\n  private facesToFacelet() {\n    const faceletArr: string[] = [];\n\n    for (let block of this.blocks) {\n      const [x, y, z] = block.position;\n      for (let face of block.faces) {\n        const worldAS = vec3.transformMat3(vec3.create(), getAxisVector(face.axis, face.side), block.faceRotation);\n        const [axis, side] = getAxisAndSide(worldAS);\n        const idMultiply = [Axis.y, Axis.x, Axis.z].indexOf(axis) + (side < 0 ? 3 : 0);\n        const a = [x, -z, x, x, z, -x][idMultiply];\n        const b = [z, -y, -y, -z, -y, -y][idMultiply];\n        const id = idMultiply * 9 + (a + 1 + 3 * (b + 1));\n        faceletArr[id] = face.faceId;\n      }\n    }\n    return faceletArr.join(\"\");\n  }\n\n  private solve() {\n    if (this.rotating) {\n      if (this.solving) {\n        this.updateButtonCount(\"solve\", true);\n        this.rotationQueue = [this.rotationQueue[0]];\n      }\n      return;\n    }\n    const facelet = this.facesToFacelet();\n\n    solve(facelet).then((res) => {\n      const axes = { x: Axis.x, y: Axis.y, z: Axis.z };\n      this.solving = res.length > 0;\n      res.forEach(([axis, level, dir, turns]) => this.queueRotation(axes[axis], level, dir, turns));\n      this.updateButtonCount(\"solve\");\n    });\n  }\n\n  private scramble() {\n    if (this.rotating) {\n      if (this.scrambling) {\n        this.updateButtonCount(\"scramble\", true);\n        this.rotationQueue = [this.rotationQueue[0]];\n      }\n      return;\n    }\n\n    this.scrambling = true;\n\n    const levels = [Level.m1, Level.p1];\n    const dirs = [Dir.ccw, Dir.cw];\n    const axes = [Axis.x, Axis.y, Axis.z];\n\n    let axis = axes[randInt(3)];\n\n    for (let _ = 0; _ < this.scrambleMoves; _++) {\n      const level = levels[randInt(2)];\n      const dir = dirs[randInt(2)];\n      this.queueRotation(axis, level, dir, 1);\n      axis = axes.filter((a) => a != axis)[randInt(2)];\n    }\n    this.updateButtonCount(\"scramble\");\n  }\n\n  private updateButtonCount(key: string, stopping = false) {\n    utils.getElementById(key).innerHTML = stopping\n      ? \"stopping\"\n      : this.rotationQueue.length\n      ? `(${this.rotationQueue.length}) stop ${key}`\n      : key;\n  }\n\n  private initialPosition() {\n    this.rotate(-45, [0, 1, 0]);\n    this.rotate(25, [1, 0, 0]);\n  }\n\n  resetCam() {\n    this.transform = mat4.create();\n    this.invTransform = mat4.create();\n    this.initialPosition();\n    this.triggerRedraw();\n  }\n\n  private reset() {\n    this.rotationQueue = [];\n    this.scrambling = false;\n    this.blocks = this.createBlocks();\n    this.triggerRedraw();\n  }\n\n  update(dt: number) {\n    this.runRotation(dt);\n  }\n\n  private runRotation(dt: number) {\n    if (this.rotationQueue.length) {\n      const { axis, level, dir, elapsedA, elapsedT, turns, finalTurns, reverse } = this.rotationQueue[0];\n      const fullT = turns / (this.scrambling ? this.scrambleSpeed : this.solving ? this.solveSpeed : this.speed);\n      const t = elapsedT + dt;\n      const maxA = turns * 90;\n      const a = clamp(utils.easeInOut(t, fullT, maxA, this.animAlpha), 0, maxA) + (elapsedA > maxA ? maxA : 0);\n      const targetA = Math.max(a, elapsedA);\n      const amt = (reverse ? -1 : 1) * Math.max(0, targetA - elapsedA);\n      const isFinal = t >= fullT;\n\n      this.rotateSlice(axis, level, dir, amt, isFinal, finalTurns);\n\n      if (isFinal) {\n        this.rotationQueue.shift();\n        this.scrambling && this.updateButtonCount(\"scramble\");\n        this.solving && this.updateButtonCount(\"solve\");\n      } else {\n        this.rotationQueue[0].elapsedA = targetA;\n        this.rotationQueue[0].elapsedT = t;\n      }\n\n      if (!this.rotationQueue.length && this.scrambling) {\n        this.scrambling = false;\n      }\n      if (!this.rotationQueue.length && this.solving) {\n        this.solving = false;\n      }\n      this.triggerRedraw();\n    }\n  }\n\n  private rotateSlice(axis: Axis, level: Level, dir: Dir, amt: number, isFinal: boolean, turns = 1) {\n    const axisId = [\"x\", \"y\", \"z\"].indexOf(axis);\n    for (let block of this.blocks) {\n      if (block.position[axisId] == level) {\n        block.rotate(axis, dir, amt, isFinal, turns);\n      }\n    }\n  }\n\n  private displayTransform(position: vec3) {\n    return vec3.transformMat4(vec3.create(), position, this.transform);\n  }\n\n  private inverseDisplayTransform(position: vec3) {\n    return vec3.transformMat4(vec3.create(), position, this.invTransform);\n  }\n\n  findClickedBlock(x: number, y: number): boolean {\n    this.clickedBlockInfo = null;\n\n    let closestDist = Infinity;\n    let clickedAxis: null | Axis = null;\n    let clickedSide: null | Side = null;\n    let closestBlock: null | Block = null;\n    let p: null | vec3 = null;\n\n    const pNear = this.camera.position;\n    const pFar = this.camera.getPickedVector(x, y);\n\n    if (!utils.rayCubeSphere(pNear, pFar, [0, 0, 0], this.cubeR * 2)) {\n      return false;\n    }\n\n    let cubeDist = Infinity;\n    let clickedPlane: null | [Axis, Side, vec3] = null;\n\n    for (let [axis, side, bBox] of this.boundingPlanes) {\n      for (let triangle of bBox) {\n        const intersection = utils.rayTriangle(pNear, pFar, triangle);\n        if (!intersection) {\n          continue;\n        }\n        const dist = vec3.distance(intersection, this.camera.position);\n        if (dist < cubeDist) {\n          cubeDist = dist;\n          clickedPlane = [axis, side, intersection];\n        }\n      }\n    }\n\n    if (!clickedPlane) {\n      return false;\n    }\n\n    const [axis, side, intersection] = clickedPlane;\n    clickedAxis = axis;\n    clickedSide = side;\n    p = intersection;\n\n    const axisId = [\"x\", \"y\", \"z\"].indexOf(axis);\n\n    for (let block of this.blocks) {\n      if (block.position[axisId] != side) {\n        continue;\n      }\n      if (!utils.rayCubeSphere(pNear, pFar, this.displayTransform(block.displayPosition), 1)) {\n        continue;\n      }\n\n      for (let triangle of block.boundingBox) {\n        const intersection = utils.rayTriangle(pNear, pFar, triangle);\n        if (!intersection) {\n          continue;\n        }\n        const dist = vec3.distance(intersection, this.camera.position);\n        if (dist < closestDist) {\n          closestDist = dist;\n          closestBlock = block;\n        }\n      }\n    }\n\n    if (closestBlock) {\n      return this.handleClickedBlock([clickedAxis, clickedSide, closestBlock, p]);\n    }\n    return false;\n  }\n\n  private handleClickedBlock(clickedBlockInfo: [Axis, Side, Block, vec3]) {\n    if (!this.rotating) {\n      const [axis, side, block, p] = clickedBlockInfo;\n      const normal = this.displayTransform(getAxisVector(axis, side));\n      const center = vec3.scale(vec3.create(), normal, this.cubeR);\n      this.clickedBlockInfo = { axis, side, block, p, normal, center };\n    }\n    return true;\n  }\n\n  handleMousemoveBlock(x: number, y: number, x0: number, y0: number) {\n    if (this.manualBlockMoving) {\n      this.handleManualBlockMove(x, y);\n    } else if (vec2.distance([x0, y0], [x, y]) > 10) {\n      this.handleManualSwipe(x, y);\n    }\n  }\n\n  private handleManualSwipe(x: number, y: number) {\n    if (!this.clickedBlockInfo) {\n      return;\n    }\n    const { axis, normal, block, center, p } = this.clickedBlockInfo;\n\n    const pNear = this.camera.position;\n    const pFar = this.camera.getPickedVector(x, y);\n\n    const intersection = utils.rayPlane(pNear, pFar, center, normal);\n    if (!intersection) {\n      console.warn(\"no ray plane (1) intersection\");\n      return;\n    }\n\n    const mouseV = vec3.subtract(vec3.create(), intersection, p);\n    vec3.normalize(mouseV, this.inverseDisplayTransform(mouseV));\n\n    const faceAxisIdx = [\"x\", \"y\", \"z\"].indexOf(axis);\n    const rotAxisOptions = vec3ToV3(mouseV)\n      .map((v, i) => [v, i])\n      .filter((v, i) => i != faceAxisIdx);\n\n    const minAxisIdx = min(rotAxisOptions, (k) => Math.abs(k[0]))[1];\n    const minAxis = [Axis.x, Axis.y, Axis.z][minAxisIdx];\n    const rotAxis = getAxisVector(minAxis);\n    const level = block.position[minAxisIdx];\n\n    let moveNormal = this.displayTransform(rotAxis);\n    const moveCenter = this.displayTransform(getAxisVector(minAxis, level));\n\n    const cameraDir = vec3.subtract(vec3.create(), this.camera.position, moveCenter);\n    vec3.normalize(cameraDir, cameraDir);\n\n    const { normal: adjustedNormal, shallowNormals } = utils.adjustMovePlaneCamAngle(moveNormal, cameraDir);\n    moveNormal = adjustedNormal;\n\n    const blockDirIntersection = shallowNormals\n      ? utils.rayShallowPlane(pNear, pFar, moveCenter, shallowNormals)\n      : utils.rayPlane(pNear, pFar, moveCenter, moveNormal);\n\n    if (!blockDirIntersection) {\n      console.warn(\"no ray plane (block dir) intersection\");\n      return;\n    }\n\n    const blockDir = vec3.subtract(vec3.create(), blockDirIntersection, moveCenter);\n    if (vec3.length(blockDir) < EPSILON) {\n      return;\n    }\n    vec3.normalize(blockDir, blockDir);\n\n    if (shallowNormals) {\n      shallowNormals.prev = blockDirIntersection;\n      shallowNormals.prevDir = blockDir;\n    }\n\n    this.manualBlockMoving = true;\n    this.moveBlockInfo = { currAngle: 0, level, normal: moveNormal, center: moveCenter, blockDir, shallowNormals };\n  }\n\n  private handleManualBlockMove(x: number, y: number) {\n    if (!this.moveBlockInfo) {\n      return;\n    }\n\n    const { level, normal, center, blockDir, shallowNormals } = this.moveBlockInfo;\n\n    const pNear = this.camera.position;\n    const pFar = this.camera.getPickedVector(x, y);\n\n    const intersection = shallowNormals\n      ? utils.rayShallowPlane(pNear, pFar, center, shallowNormals)\n      : utils.rayPlane(pNear, pFar, center, normal);\n    if (!intersection) {\n      // todo binary search for an intersecting plane\n      return;\n    }\n\n    const newDir = vec3.subtract(vec3.create(), intersection, center);\n    if (vec3.length(newDir) < EPSILON) {\n      return;\n    }\n    vec3.normalize(newDir, newDir);\n\n    const [axis, side] = this.blockMoveAxisAndSide(blockDir, newDir);\n\n    let diff: number;\n\n    if (shallowNormals) {\n      const { cameraDir, prev, prevDir } = shallowNormals;\n\n      shallowNormals.prev = intersection;\n      shallowNormals.prevDir = newDir;\n\n      const movingDir = vec3.subtract(vec3.create(), intersection, prev);\n      vec3.normalize(movingDir, movingDir);\n\n      const dot = Math.abs(vec3.dot(cameraDir, movingDir));\n      const angleSquish = 1 - dot;\n\n      diff = angleSquish * deg(acosC(vec3.dot(prevDir, newDir)));\n\n      const [axis2, side2] = this.blockMoveAxisAndSide(prevDir, newDir);\n      this.rotateSlice(axis2, level, side2, diff, false);\n    } else {\n      const angle = deg(acosC(vec3.dot(blockDir, newDir)));\n      diff = angle - this.moveBlockInfo.currAngle;\n      this.rotateSlice(axis, level, side, diff, false);\n    }\n\n    this.moveBlockInfo.currAngle += diff;\n    this.movedBlockInfo = { axis, level, side };\n    this.triggerRedraw();\n  }\n\n  private blockMoveAxisAndSide(blockDir1: vec3, blockDir2: vec3) {\n    const rotAxis = vec3.cross(vec3.create(), blockDir1, blockDir2);\n    vec3.normalize(rotAxis, this.inverseDisplayTransform(rotAxis));\n    return getAxisAndSide(rotAxis);\n  }\n\n  private getCurrentSliceMoveDetails() {\n    let currAngle = this.moveBlockInfo ? this.moveBlockInfo.currAngle : 0;\n    let axis: Axis, level: Level, dir: Dir;\n\n    if (this.movedBlockInfo) {\n      ({ axis, level, side: dir } = this.movedBlockInfo);\n    } else if (this.rotationQueue.length) {\n      ({ axis, level, dir } = this.rotationQueue[0]);\n    } else {\n      return { currAngle: 0, axis: Axis.x, level: Level.z0, dir: Dir.ccw };\n    }\n\n    const block = this.blocks.find((block) => block.position[[\"x\", \"y\", \"z\"].indexOf(axis)] == level);\n\n    if (block) {\n      const center = getAxisVector(axis, level * this.spread);\n      const transformedP = vec3.transformMat4(vec3.create(), [0, 0, 0], block.geometry.transform);\n\n      const blockDir = vec3.sub(vec3.create(), block.displayPosition, center);\n      const transformedDir = vec3.sub(vec3.create(), transformedP, center);\n\n      vec3.normalize(blockDir, blockDir);\n      vec3.normalize(transformedDir, transformedDir);\n\n      const dot = vec3.dot(blockDir, transformedDir);\n      const cross = vec3.cross(vec3.create(), blockDir, transformedDir);\n      vec3.normalize(cross, cross);\n\n      Math.abs(dot) < 0.99999 && ([axis, dir] = getAxisAndSide(cross));\n      currAngle = deg(acosC(dot));\n    }\n\n    return { currAngle, axis, level, dir };\n  }\n\n  cleanupMousemoveBlock() {\n    if (this.movedBlockInfo) {\n      const { currAngle, axis, level, dir } = this.getCurrentSliceMoveDetails();\n\n      const remA = currAngle - (currAngle > 90 ? 90 : 0);\n      const reverse = remA < 45;\n      const remElapsedA = reverse ? 90 - remA : remA;\n\n      const elapsedT = utils.easeInOut(remElapsedA, 90, 1 / this.speed, 1 / this.animAlpha);\n      const elapsedA = remElapsedA + (currAngle > 90 ? 90 : 0);\n      const finalTurns = mR(currAngle / 90);\n\n      this.rotationQueue.push({ axis, level, dir, elapsedA, elapsedT, turns: 1, finalTurns, reverse });\n\n      this.triggerRedraw();\n    }\n    this.manualBlockMoving = false;\n    this.moveBlockInfo = null;\n    this.movedBlockInfo = null;\n  }\n\n  private drawBlocks() {\n    for (let block of this.blocks) {\n      block.draw();\n    }\n  }\n\n  private drawBounds() {\n    for (let bound of this.bounds || []) {\n      bound.draw();\n    }\n  }\n\n  private setUniforms() {\n    const { currAngle, axis, level, dir } = this.getCurrentSliceMoveDetails();\n    this.shader.setUniform(\"u_BlockR\", this.blockR);\n    this.shader.setUniform(\"u_BevelW\", this.bevelW);\n    this.shader.setUniform(\"u_NormalScale\", this.config.wearTear);\n    this.shader.setUniform(\"u_Spread\", this.spread);\n    this.shader.setUniform(\"u_CurrAngle\", rad(currAngle) * dir);\n    this.shader.setUniform(\"u_Axis\", [\"x\", \"y\", \"z\"].indexOf(axis));\n    this.shader.setUniform(\"u_Level\", level);\n    this.shader.setUniform(\"u_RubikMatrix\", this.transform);\n    this.shader.setUniform(\"u_RubikMatrixInv\", mat3.fromMat4(this.invTransform3, this.invTransform));\n    this.shader.setUniform(\"u_EnableBlocking\", this.blockRays ? 1 : 0);\n    this.shader.setUniform(\"u_Debug\", +(utils.getElementById(\"u_Debug\") as HTMLInputElement).value);\n  }\n\n  applyMaterialTextures(texSlotOffset: number) {\n    const { gl, resources: resources } = this;\n    const { activeShader: shader } = this.scene;\n\n    if (!resources) {\n      return texSlotOffset;\n    }\n\n    const lookup = shader.lookupUniformLocation.bind(shader);\n\n    setTexture(gl, lookup(\"u_NormalSampler0\") || -1, resources, 0, texSlotOffset++);\n    setTexture(gl, lookup(\"u_NormalSampler1\") || -1, resources, 1, texSlotOffset++);\n    setTexture(gl, lookup(\"u_NormalSampler2\") || -1, resources, 2, texSlotOffset++);\n\n    return texSlotOffset;\n  }\n\n  draw() {\n    this.shader.bind(this.camera);\n\n    let texSlot = 0;\n    texSlot = this.scene.environment.applyEnvironmentMap(texSlot);\n    this.applyMaterialTextures(texSlot);\n\n    this.setUniforms();\n    this.drawBlocks();\n    if (this.showBounding) {\n      this.drawBounds();\n    }\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7lL8B\")).toString();","import { mat3, mat4 } from \"gl-matrix\";\nimport { Buffer, IndexBuffer } from \"../../../src/js/buffer\";\nimport { Camera } from \"../../../src/js/camera\";\nimport { Scene } from \"../../../src/js/scene\";\nimport { CubemapShader } from \"../../../src/js/shader\";\nimport { hexToNRgb, nRgbToHex, rad } from \"../../../src/js/utils\";\n\nimport { loadEnvironment, EnvResources, setTexture } from \"./resource_handler\";\n\n// @ts-ignore\nimport hdrFile from \"url:../../../assets/environments/Colorful_Studio.hdr\";\n\nclass EnvironmentRenderer {\n  private readonly gl: WebGL2RenderingContext;\n  private readonly scene: Scene;\n  private readonly camera: Camera;\n  private readonly shader: CubemapShader;\n\n  private readonly positions: Buffer;\n  private readonly indices: IndexBuffer;\n\n  private envColor: [number, number, number] = [0.5, 0.5, 0.5];\n  private envIntensity = 10 ** -0.2;\n  private envRotation = mat3.create();\n  private resources?: EnvResources;\n\n  constructor(gl: WebGL2RenderingContext, scene: Scene) {\n    this.gl = gl;\n    this.scene = scene;\n    this.camera = scene.camera;\n    this.shader = new CubemapShader(gl);\n\n    loadEnvironment(gl, hdrFile).then((envResources) => {\n      this.resources = envResources;\n      this.scene.initGL();\n      this.setBG();\n      this.scene.environmentLoaded = true;\n    });\n\n    // prettier-ignore\n    this.indices = new IndexBuffer(gl,[\n      1, 2, 0,    2, 3, 0,\n      6, 2, 1,    1, 5, 6,\n      6, 5, 4,    4, 7, 6,\n      6, 3, 2,    7, 3, 6,\n      3, 7, 0,    7, 4, 0,\n      5, 1, 0,    4, 5, 0,\n    ]);\n\n    // prettier-ignore\n    this.positions = new Buffer(gl, [\n      -1, -1, -1,\n       1, -1, -1,\n       1,  1, -1,\n      -1,  1, -1,\n      -1, -1,  1,\n       1, -1,  1,\n       1,  1,  1,\n      -1,  1,  1,\n    ], 3, gl.FLOAT);\n    this.rotate();\n  }\n\n  setBG() {\n    const val = this.intensity;\n    const adjust = (x: number) => x * 2 ** val;\n    this.gl.clearColor(adjust(this.envColor[0]), adjust(this.envColor[1]), adjust(this.envColor[2]), 1.0);\n  }\n\n  rotate() {\n    let mat = mat4.create();\n    mat4.rotateY(mat, mat, rad(155));\n    mat4.rotateX(mat, mat, rad(-15));\n    mat3.fromMat4(this.envRotation, mat);\n  }\n\n  get intensity() {\n    return Math.log10(this.envIntensity);\n  }\n\n  set intensity(val: number) {\n    this.envIntensity = 10 ** val;\n    this.setBG();\n  }\n\n  get color() {\n    return nRgbToHex(...this.envColor);\n  }\n\n  set color(val: string) {\n    this.envColor = hexToNRgb(val);\n    this.setBG();\n  }\n\n  drawEnvironmentMap() {\n    const { gl, shader, resources } = this;\n\n    if (!resources) {\n      return;\n    }\n    this.shader.bind(this.camera);\n\n    setTexture(gl, shader.lookupUniformLocation(\"u_GGXEnvSampler\") ?? -1, resources, resources.specularEnvMap, 0);\n\n    shader.setUniform(\"u_MipCount\", resources.mipCount);\n    shader.setUniform(\"u_EnvBlurNormalized\", 0.0);\n    // shader.setUniform(\"u_Exposure\", 1.0);\n\n    shader.setUniform(\"u_EnvColor\", this.envColor);\n    shader.setUniform(\"u_EnvRotation\", this.envRotation);\n\n    gl.disable(gl.DEPTH_TEST);\n\n    this.positions.bind(shader.vertexPosition);\n    this.indices.bind();\n\n    gl.drawElements(gl.TRIANGLES, this.indices.indexCount, gl.UNSIGNED_SHORT, 0);\n\n    gl.enable(gl.DEPTH_TEST);\n  }\n\n  applyEnvironmentMap(texSlotOffset: number) {\n    const { gl, resources } = this;\n    const { activeShader: shader } = this.scene;\n\n    if (!resources) {\n      return texSlotOffset;\n    }\n\n    const lookup = shader.lookupUniformLocation.bind(shader);\n\n    setTexture(gl, lookup(\"u_LambertianEnvSampler\") || -1, resources, resources.diffuseEnvMap, texSlotOffset++);\n\n    setTexture(gl, lookup(\"u_GGXEnvSampler\") || -1, resources, resources.specularEnvMap, texSlotOffset++);\n    setTexture(gl, lookup(\"u_GGXLUT\") || -1, resources, resources.lut, texSlotOffset++);\n\n    // setTexture(gl, lookup(\"u_CharlieEnvSampler\") || -1, resources, resources.sheenEnvMap, texSlotOffset++);\n    // setTexture(gl, lookup(\"u_CharlieLUT\") || -1, resources, resources.sheenLUT, texSlotOffset++);\n\n    shader.setUniform(\"u_MipCount\", resources.mipCount);\n\n    shader.setUniform(\"u_EnvColor\", this.envColor);\n    shader.setUniform(\"u_EnvRotation\", this.envRotation);\n\n    shader.setUniform(\"u_EnvIntensity\", this.envIntensity);\n\n    return texSlotOffset;\n  }\n}\n\nexport { EnvironmentRenderer };\n","import { mat4 } from \"gl-matrix\";\nimport { Camera } from \"../../../src/js/camera\";\nimport { ShaderBase } from \"../../../src/js/shader\";\n\n// @ts-ignore\nimport primitiveShader from \"./shaders/primitive.vert\";\n// @ts-ignore\nimport pbrShader from \"./shaders/pbr.frag\";\n// @ts-ignore\nimport utilsShader from \"./shaders/utils.glsl\";\n// @ts-ignore\nimport materialInfoShader from \"./shaders/material_info.glsl\";\n// @ts-ignore\nimport iblShader from \"./shaders/ibl.glsl\";\n// @ts-ignore\nimport texturesShader from \"./shaders/textures.glsl\";\n// @ts-ignore\nimport tonemappingShader from \"./shaders/tonemapping.glsl\";\n// @ts-ignore\nimport shaderFunctions from \"./shaders/functions.glsl\";\n\n// @ts-ignore\nimport VERTMin from \"./vert.min.vert\";\n// @ts-ignore\nimport FRAGMin from \"./frag.min.frag\";\n\nfunction completeShaderSrc(sources: Map<string, string>) {\n  for (let [key, src] of sources) {\n    let changed = false;\n    for (let [includeName, includeSource] of sources) {\n      //var pattern = RegExp(/#include</ + includeName + />/);\n      const pattern = \"#include <\" + includeName + \">\";\n\n      if (src.includes(pattern)) {\n        // only replace the first occurrence\n        src = src.replace(pattern, includeSource);\n\n        // remove the others\n        while (src.includes(pattern)) {\n          src = src.replace(pattern, \"\");\n        }\n\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      sources.set(key, src);\n    }\n  }\n}\n\nfunction selectShader(sources: Map<string, string>, shaderIdentifier: string, permutationDefines: string[]) {\n  const src = sources.get(shaderIdentifier);\n\n  let defines = \"#version 300 es\\n\";\n  for (let define of permutationDefines) {\n    // console.log(define);\n    defines += \"#define \" + define + \"\\n\";\n  }\n\n  return defines + src;\n}\n\nfunction getDebugDefines() {\n  // prettier-ignore\n  const views = {\n     0: \"DEBUG_NONE\",\n     1: \"DEBUG_NORMAL_SHADING\",\n     2: \"DEBUG_NORMAL_TEXTURE\",\n     3: \"DEBUG_NORMAL_GEOMETRY\",\n     4: \"DEBUG_TANGENT\",\n     5: \"DEBUG_BITANGENT\",\n     6: \"DEBUG_ALPHA\",\n     7: \"DEBUG_UV_0\",\n     8: \"DEBUG_OCCLUSION\",\n     9: \"DEBUG_EMISSIVE\",\n    10: \"DEBUG_METALLIC_ROUGHNESS\",\n    11: \"DEBUG_BASE_COLOR\",\n    12: \"DEBUG_ROUGHNESS\",\n    13: \"DEBUG_METALLIC\",\n  };\n\n  const defines = Object.entries(views).map(([i, v]) => v + \" \" + i);\n  return [...defines, `DEBUG ${views[0]}`];\n}\n\nexport class PBRShader0 extends ShaderBase {\n  readonly vertexPosition: GLint;\n  readonly vertexColor: GLint;\n  readonly vertexNormal: GLint;\n\n  constructor(gl: WebGL2RenderingContext) {\n    const shaderSources = new Map<string, string>();\n    shaderSources.set(\"primitive.vert\", primitiveShader);\n    shaderSources.set(\"pbr.frag\", pbrShader);\n    shaderSources.set(\"material_info.glsl\", materialInfoShader);\n    shaderSources.set(\"utils.glsl\", utilsShader);\n    shaderSources.set(\"ibl.glsl\", iblShader);\n    shaderSources.set(\"tonemapping.glsl\", tonemappingShader);\n    shaderSources.set(\"textures.glsl\", texturesShader);\n    shaderSources.set(\"functions.glsl\", shaderFunctions);\n\n    completeShaderSrc(shaderSources);\n    const vsDefines: string[] = [];\n    const fsDefines = getDebugDefines();\n    // const fsDefines = vsDefines;\n    const vsSrc = selectShader(shaderSources, \"primitive.vert\", vsDefines);\n    const fsSrc = selectShader(shaderSources, \"pbr.frag\", fsDefines);\n\n    super(gl, vsSrc, fsSrc);\n    this.vertexPosition = this.lookupAttribLocationStrict(\"a_position\");\n    this.vertexColor = this.lookupAttribLocationStrict(\"a_color_0\");\n    this.vertexNormal = this.lookupAttribLocationStrict(\"a_normal\");\n  }\n\n  setUniforms(camera: Camera) {\n    this.setUniform(\"u_ViewProjectionMatrix\", mat4.multiply(mat4.create(), camera.projectionMatrix, camera.viewMatrix));\n    this.setUniform(\"u_Camera\", camera.position);\n\n    this.setUniform(\"u_Exposure\", 1);\n  }\n}\n\nexport class PBRShader extends ShaderBase {\n  readonly vertexPosition: GLint;\n  readonly vertexColor: GLint;\n  readonly vertexNormal: GLint;\n\n  constructor(gl: WebGL2RenderingContext) {\n    super(gl, VERTMin, FRAGMin);\n    this.vertexPosition = this.lookupAttribLocationStrict(\"a_position\");\n    this.vertexColor = this.lookupAttribLocationStrict(\"a_color_0\");\n    this.vertexNormal = this.lookupAttribLocationStrict(\"a_normal\");\n  }\n\n  setUniforms(camera: Camera) {\n    this.setUniform(\"u_ViewProjectionMatrix\", mat4.multiply(mat4.create(), camera.projectionMatrix, camera.viewMatrix));\n    this.setUniform(\"u_Camera\", camera.position);\n\n    this.setUniform(\"u_Exposure\", 1);\n  }\n}\n","#version 300 es\nuniform mat4 u_ViewProjectionMatrix,u_RubikMatrix,u_ModelMatrix;uniform mat3 u_FaceRotation;in vec3 a_position;out vec3 v_Position,v_PositionOrig;in vec3 a_normal;out vec3 v_Normal,v_NormalOrig;in vec3 a_color_0;out vec3 v_Color;void main(){gl_PointSize=1.f;vec4 v=u_RubikMatrix*u_ModelMatrix*vec4(u_FaceRotation*a_position,1);v_Position=v.xyz;v_PositionOrig=a_position;v_Normal=normalize(vec3(u_RubikMatrix*u_ModelMatrix*vec4(u_FaceRotation*a_normal,0)));v_NormalOrig=a_normal;v_Color=a_color_0;gl_Position=u_ViewProjectionMatrix*v;}","#version 300 es\nprecision highp float;\n#define PI 3.1415926535897932384626433832795\nuniform int u_Debug;uniform float u_EnvIntensity,u_BevelW;vec3 f(vec3 v,float u){return vec3(v.x,v.y*cos(u)-v.z*sin(u),v.y*sin(u)+v.z*cos(u));}vec3 n(vec3 v,float u){return vec3(v.z*sin(u)+v.x*cos(u),v.y,v.z*cos(u)-v.x*sin(u));}vec3 s(vec3 v,float u){return vec3(v.x*cos(u)-v.y*sin(u),v.x*sin(u)+v.y*cos(u),v.z);}vec3 f(vec3 v,float u,int z){return z==0?f(v,u):z==1?n(v,u):s(v,u);}float f(vec3 v,vec3 u,vec3 s,float z){vec3 m=v-s,f=m*m,n=m*u;float r=z*z,y=n.x+n.y+n.z,x=y*y-(f.x+f.y)-f.z+r;if(x>0.)return-y-sqrt(x);return-1.;}float n(vec3 v,vec3 u,vec3 m,float z){float i=f(v*vec3(-1,1,1),u*vec3(-1,1,1),m,z);if(i>0.)return i;i=f(v*vec3(1,-1,1),u*vec3(1,-1,1),m,z);if(i>0.)return i;i=f(v*vec3(1,1,-1),u*vec3(1,1,-1),m,z);if(i>0.)return i;return-1.;}bool s(vec3 v,vec3 u,vec3 m,vec3 z){vec3 f=1./u;float i=(m.x-v.x)*f.x,r=(z.x-v.x)*f.x,s=min(i,r),x=max(i,r);i=(m.y-v.y)*f.y;r=(z.y-v.y)*f.y;s=max(s,min(i,r));x=min(x,max(i,r));i=(m.z-v.z)*f.z;r=(z.z-v.z)*f.z;s=max(s,min(i,r));x=min(x,max(i,r));return s<=x&&x>=0.;}float f(vec3 v,vec3 u,vec3 m,float z,float i){vec3 x=1./u,f=x*v,s=abs(x)*(m+z),r=-f-s,t=-f+s,y,e,c,a,l,g;float p=max(max(r.x,r.y),r.z),w=min(min(t.x,t.y),t.z),d,R,N;if(p>w||w<0.)return-1.;d=p;y=v+d*u;e=sign(y);v*=e;u*=e;y*=e;y-=m;y=max(y.xyz,y.yzx);if(min(min(y.x,y.y),y.z)<0.)return d;c=v-m;a=u*u;l=c*c;g=c*u;R=z*z;d=1e20;N=-1.;{float P=g.x+g.y+g.z,W=l.x+l.y+l.z-R,o=P*P-W;if(o>0.)d=-P-sqrt(o),N=2.;if(i<z&&!(o>0.)){float h=n(v,u,m,z);if(h>0.)d=h,N=4.;}}{float P=a.y+a.z,W=g.y+g.z,o=l.y+l.z-R,h=W*W-P*o;if(h>0.){h=(-W-sqrt(h))/P;if(h>0.&&h<d&&abs(v.x+u.x*h)<m.x)d=h,N=3.;}}{float P=a.z+a.x,W=g.z+g.x,o=l.z+l.x-R,h=W*W-P*o;if(h>0.){h=(-W-sqrt(h))/P;if(h>0.&&h<d&&abs(v.y+u.y*h)<m.y)d=h,N=3.;}}{float P=a.x+a.y,W=g.x+g.y,o=l.x+l.y-R,h=W*W-P*o;if(h>0.){h=(-W-sqrt(h))/P;if(h>0.&&h<d&&abs(v.z+u.z*h)<m.z)d=h,N=3.;}}if(d>1e19)d=-1.;return d;}vec3 v(vec3 v,vec3 u){return sign(v)*normalize(max(abs(v)-u,0.));}float n(vec3 v,vec3 u,vec3 m,float z,float y){v-=m*y;float i=(1.-z)*.5;return z>.99?f(v,u,vec3(i),z*.5):f(v,u,vec3(i),z*.5,i);}bool s(vec3 v,vec3 u,vec3 z,vec3 m,float y){return s(v,u,z*y-.5,m*y+.5);}vec3 u(vec3 v,int u){return u==1?v.yxz:u==2?v.zyx:v;}float f(){return u_EnvIntensity>1.?.75+u_EnvIntensity*.25:u_EnvIntensity*.5+.5;}float f(mat3 v,vec3 z,vec3 m,float x,float y,float i,int s,int h){bool d=abs(i)>0.;vec3 r=u(m,s),N,g,R,l,n,a,t,W,c,e,o;float P=y-1.,w=P*.5,p=.5+y,T=.5+w,O=x*.5,b=O*(1.-O/(2.*O+P)),I,k,M,C,E,B,S,F,G,L,A,q,X,D;N=v*z;g=abs(d&&int(r.x)==h?f(N,-i,s):N);I=1.6*f();k=1.2;M=P*I;C=M*k;R=min(max(abs(g-T)-w,0.),C);E=length(M*(C-R)/C);B=(sqrt(2.)-1.)*O;S=(4.-PI)*O*O;F=length(vec2(u_BevelW))*length(vec2(u_BevelW));l=(g-T)/u_BevelW;n=vec3(max(S,F*min(1.,l.x)),max(S,F*min(1.,l.y)),max(S,F*min(1.,l.z)));a=n*I*1.5;t=a*k*1.5;W=min(max(vec3(length(g-vec3(g.x,T,T)),length(g-vec3(T,g.y,T)),length(g-vec3(T,T,g.z)))-length(vec2(B+w)),0.),t);c=vec3(t.x<=0.?0.:a.x*(t.x-W.x)/t.x,t.y<=0.?0.:a.y*(t.y-W.y)/t.y,t.z<=0.?0.:a.z*(t.z-W.z)/t.z);G=length(c);L=(P+sqrt(S))*I*k;A=u_BevelW*I*k;q=max(L,A);e=min(max(p-b-abs(N),0.),q);o=(q-e)/q;X=pow(o.x*o.x*o.x*o.x+o.y*o.y*o.y*o.y+o.z*o.z*o.z*o.z,.25);if(abs(i)>0.&&X<1.){mat3 U=mat3(1,0,0,0,1,0,0,0,1),V=mat3(1,5,5,5,1,5,5,5,1),Z=mat3(0,1,0,0,0,1,1,0,0);vec3 Y=vec3(.5+P)*V[s],Q=f(N,-i,s);float K=0.;for(int J=0;J<4;J++){vec3 H=f(Q,float(J)*PI*.5,s),j;H-=U[s]*float(h)*y;H-=vec3(p)*Z[s]+vec3(.5+P)*5.*Z[s];j=max(abs(H)-Y-b,0.);float at=clamp(1.-length(j)/q,0.,1.);K+=at*at*at*at;}K=pow(K,.25);X=max(K,X);}D=length(vec3(X,E,G));return clamp(D,0.,1.);}float f(out vec3 i,mat3 z,mat3 m,vec3 y,vec3 c,vec3 x,float r,float h,float t,int l,int e){i=c;bool a=abs(t)>0.,g;vec3 d=m*c,W=m*y,o=u(x,l),N;float P=-1.;N=vec3(0);g=false;for(int R=-1;R<2;R++){int p=o.x<0.?R:-R;vec3 T=d,S=W;if(a&&p==e)T=f(T,-t,l),S=f(S,-t,l);if(!s(S,T,u(vec3(p,-1,-1),l),u(vec3(p,1,1),l),h))continue;for(int w=-1;w<2;w++){int F=o.y<0.?w:-w;if(!s(S,T,u(vec3(p,F,-1),l),u(vec3(p,F,1),l),h))continue;for(int O=-1;O<2;O++){int C=o.z<0.?O:-O;vec3 I=u(vec3(p,F,C),l);if(distance(x,I)<.5)continue;float M=n(S,T,I,r,h);if(M>=0.&&(M<P||P<0.))P=M,N=S-I*h+M*T,g=a&&p==e;}}}if(P>=0.){vec3 T=v(N,vec3((1.-max(.001,r))*.5));if(g)T=f(T,t,l);T=normalize(z*T);i=normalize(reflect(c,T));}return P;}uniform float u_Exposure;uniform int u_Tone;uniform vec3 u_EnvColor;const float z=1./2.2;const mat3 m=mat3(.59719,.076,.0284,.35458,.90834,.13383,.04823,.01566,.83777),y=mat3(1.60475,-.10208,-.00327,-.53108,1.10813,-.07276,-.07367,-.00605,1.07602);vec3 f(vec3 v){return pow(v,vec3(z));}vec3 n(vec3 v){return vec3(pow(v.xyz,vec3(2.2)));}float s(float v){return pow(v,2.2);}vec4 u(vec4 v){return vec4(n(v.xyz),v.w);}vec3 v(vec3 v){return clamp(v*(2.51*v+.03)/(v*(2.43*v+.59)+.14),0.,1.);}vec3 x(vec3 v){vec3 u=v*(v+.0245786)-9.0537e-5,r=v*(.983729*v+.432951)+.238081;return u/r;}vec3 e(vec3 v){v=m*v;v=x(v);v=y*v;v=clamp(v,0.,1.);return v;}vec3 p(vec3 u){u*=u_Exposure;if(u_Tone==1)u=v(u);if(u_Tone==2)u=e(u);if(u_Tone==3)u/=.6,u=e(u);return f(u);}vec3 t(vec3 v){float u=v.y*.59+v.x*.3+v.z*.11;return mix(v,vec3(u),.75);}vec4 h(vec4 v){return vec4(t(v.xyz),v.w);}vec3 i(vec3 u){return u*(1.+.5*(u_EnvColor-vec3(.5)));}vec4 w(vec4 v){return vec4(i(v.xyz),v.w);}uniform int u_MipCount;uniform samplerCube u_LambertianEnvSampler,u_GGXEnvSampler;uniform sampler2D u_GGXLUT;uniform mat3 u_EnvRotation;uniform sampler2D u_NormalSampler0,u_NormalSampler1,u_NormalSampler2;uniform float u_NormalScale;in vec3 v_Position,v_PositionOrig,v_Normal,v_NormalOrig,v_Color;uniform vec3 u_BlockPositionOrig;uniform int u_NonVColor,u_ProcColor;vec3 c(vec3 v){v=v.y>v.x&&v.y>v.z?v.yxz:v.z>v.x&&v.z>v.y?v.zyx:v.xyz;v=v.z>v.y?v.xzy:v.xyz;return v;}vec3 c(){vec3 v=v_PositionOrig,u=v+u_BlockPositionOrig,f=abs(v_NormalOrig);if(f.y>f.x&&f.y>f.z)return vec3(u.x,sign(v.y)*u.z,sign(v.y)*(2./3.1));if(f.x>f.y&&f.x>f.z)return vec3(sign(v.x)*-u.z,-u.y,sign(v.x)*(9./5.3));return vec3(sign(v.z)*u.x,-u.y,sign(v.z)*(19./7.));}vec3 c(vec3 v,vec3 u){return v+u-vec3(0,0,1);}vec4 e(){vec4 v=vec4(u_NonVColor==1?vec3(1):v_Color,1);return v;}vec4 e(vec4 v,float u){return vec4(v.xyz/(1.-u*min(.4,1.-c(v.xyz).x)),v.w);}vec4 a(vec4 v){if(u_ProcColor==1){vec3 u=vec3(.08)+sin(v_PositionOrig)/10.;return vec4(normalize(u),v.w);}return v;}struct NormalInfo{vec3 ng;vec3 m;vec3 l;vec3 n;vec3 ntex;};float a(vec3 v,vec3 u){return clamp(dot(v,u),0.,1.);}uniform int u_Axis,u_Level;uniform float u_BlockR,u_Spread,u_CurrAngle;uniform int u_EnableBlocking,u_EnableBlockingAO;uniform vec3 u_BlockPosition;uniform mat4 u_RubikMatrix;uniform mat3 u_RubikMatrixInv;float a(){return s(f(u_RubikMatrixInv,v_Position,u_BlockPosition,u_BlockR,u_Spread,u_CurrAngle,u_Axis,u_Level));}float h(vec3 v,out vec3 u){return u_EnableBlocking==1?f(u,mat3(u_RubikMatrix),u_RubikMatrixInv,v_Position,v,u_BlockPosition,u_BlockR,u_Spread,u_CurrAngle,u_Axis,u_Level):-1.;}vec3 l(vec3 u){return i(t(texture(u_LambertianEnvSampler,u_EnvRotation*u).xyz))*u_EnvIntensity;}vec4 i(vec3 v,float u){return w(h(textureLod(u_GGXEnvSampler,u_EnvRotation*v,u)))*u_EnvIntensity;}vec3 a(vec3 v,vec3 u,float m,vec3 z,float x,float y){float s=a(v,u),f=m*float(u_MipCount-1),r;vec3 p=normalize(reflect(-u,v)),l=vec3(0),o,N,t;r=h(p,l);vec2 T=clamp(vec2(s,m),vec2(0),vec2(1)),g=texture(u_GGXLUT,T).xy;vec4 c=i(p,f);if(r>=0.){vec4 d=clamp(i(l,f)*(y*.75+.25),0.,y*.5+.25)*.75;c=clamp(c,0.,.75)*.75;d=mix(c,d,u_BlockR*.5+.5);c=mix(d,c,clamp(m,0.,.5)*2.*(y*.5+.5+(.5-y*.5)));}o=c.xyz;N=max(vec3(1.-m),z)-z;t=z+N*pow(1.-s,5.);return x*o*(t*g.x+g.y);}vec3 c(vec3 v,vec3 u,float z,vec3 m,vec3 x,float y){float i=a(v,u),r;vec2 f=clamp(vec2(i,z),vec2(0),vec2(1)),o=texture(u_GGXLUT,f).xy;vec3 s=l(v),N=max(vec3(1.-z),x)-x,c=x+N*pow(1.-i,5.),W=y*c*o.x+o.y,T,h,g;r=1.-o.x-o.y;T=y*(x+(1.-x)/21.);h=r*W*T/(1.-T*r);g=m*(1.-W+h);return(h+g)*s;}uniform float u_MetallicFactor,u_RoughnessFactor;uniform vec4 u_BaseColorFactor;uniform vec3 u_Camera;struct MaterialInfo{float ior;float perceptualRoughness;vec3 f0;float alphaRoughness;vec3 c_diff;vec3 f90;float metallic;vec3 baseColor;float specularWeight;};NormalInfo r(vec3 u){vec3 v=c(),f,i,z,m,r,y,x,l,g,t,s;vec2 h=v.xy;f=dFdx(vec3(h,0));i=dFdy(vec3(h,0));if(length(f)+length(i)<=1e-6)f=vec3(1,0,0),i=vec3(0,1,0);z=(i.y*dFdx(v_Position)-f.y*dFdy(v_Position))/(f.x*i.y-i.x*f.y);x=normalize(v_Normal);r=normalize(z-x*dot(x,z));y=cross(x,r);if(gl_FrontFacing==false)r*=-1.,y*=-1.,x*=-1.;NormalInfo o;o.ng=x;float P=v.z,N;l=normalize(texture(u_NormalSampler0,h/3.+P).xyz*2.-1.);g=normalize(texture(u_NormalSampler1,h/4.3+P).xyz*2.-1.);t=normalize(texture(u_NormalSampler2,h/7.+P*3.).xyz*2.-1.);l.x*=abs(l.x)<.05?.5:1.;l.y*=abs(l.y)<.05?.5:1.;g.x*=abs(g.x)<.075?.25:1.;g.y*=(abs(g.y)<.075?.25:1.)*-1.;t.x*=abs(t.x)<.1?.5:1.;t.y*=abs(t.y)<.1?.5:1.;s=vec3(0,0,1);s=c(s,l);s=c(s,g);s=c(s,t);s=normalize(clamp(s,-1.,1.));N=u_NormalScale*u_NormalScale;o.ntex=normalize(s*vec3(N,N,1));o.n=normalize(mat3(r,y,x)*o.ntex);o.m=r;o.l=y;return o;}vec4 h(){vec4 v=vec4(1);v=u_BaseColorFactor;v=a(v);return u(e(v*e(),u_MetallicFactor));}MaterialInfo d(MaterialInfo v){v.metallic=u_MetallicFactor;v.perceptualRoughness=u_RoughnessFactor;v.c_diff=mix(v.baseColor.xyz,vec3(0),v.metallic);v.f0=mix(v.f0,v.baseColor.xyz,v.metallic);return v;}out vec4 g_finalColor;void main(){vec4 v=h();v.w=1.;vec3 u=normalize(u_Camera-v_Position),i,y,m,z,s;NormalInfo o=r(u);i=o.n;MaterialInfo l;l.baseColor=v.xyz;l.ior=1.5;l.f0=vec3(.04);l.specularWeight=1.;l=d(l);l.perceptualRoughness=clamp(l.perceptualRoughness,0.,1.);l.metallic=clamp(l.metallic,0.,1.);l.alphaRoughness=l.perceptualRoughness*l.perceptualRoughness;l.f90=vec3(1);y=vec3(0);m=vec3(0);y+=a(i,u,l.perceptualRoughness,l.f0,l.specularWeight,l.metallic);m+=c(i,u,l.perceptualRoughness,l.c_diff,l.f0,l.specularWeight);float e=u_EnableBlockingAO==1?a():1.;y*=e;m*=e;z=m+y;switch(u_Debug){case 1:s=f(v.xyz);break;default:s=p(z);}g_finalColor=vec4(s,v.w);}","import { Camera } from \"./camera\";\nimport { SimpleShader } from \"./shader\";\nimport { Rubik } from \"./rubik\";\nimport { EnvironmentRenderer } from \"../../lib/pbr/renderer/environment_renderer\";\nimport { handleButtonById, handleFpsDisplay, handleInputById, targetListener } from \"./utils\";\nimport { PBRShader } from \"../../lib/pbr/renderer/pbr_shader\";\n\nexport class Scene {\n  private clock = 0;\n  private readonly gl: WebGL2RenderingContext;\n  readonly camera: Camera;\n  readonly cubeShader: SimpleShader;\n  readonly environment: EnvironmentRenderer;\n  readonly pbrShader: PBRShader;\n  activeShader: SimpleShader | PBRShader;\n  private readonly changeWatcher: { val: any; get: () => any }[];\n\n  private readonly pointerEvents: { activeId: number; cache: PointerEvent[]; prevDiff: number } = {\n    activeId: -1,\n    cache: [],\n    prevDiff: -1,\n  };\n  private mouse0 = { x: 0, y: 0 };\n  private mouse = { x: 0, y: 0 };\n\n  private readonly cube: Rubik;\n\n  materialsLoaded = false;\n  environmentLoaded = false;\n  moveCamera = false;\n\n  get ready() {\n    return this.environmentLoaded && this.materialsLoaded;\n  }\n\n  constructor(gl: WebGL2RenderingContext, camera: Camera) {\n    this.gl = gl;\n    this.initGL();\n\n    this.camera = camera;\n    this.cubeShader = new SimpleShader(gl);\n    this.environment = new EnvironmentRenderer(gl, this);\n    this.pbrShader = new PBRShader(gl);\n    // this.activeShader = this.cubeShader;\n    this.activeShader = this.pbrShader;\n\n    this.changeWatcher = this.initChangeWatcher();\n    this.initDOMInputs();\n    this.handleInputEvents();\n\n    this.cube = new Rubik(gl, this);\n  }\n\n  initGL() {\n    this.gl.enable(this.gl.DEPTH_TEST);\n    this.gl.depthFunc(this.gl.LEQUAL);\n    this.gl.cullFace(this.gl.BACK);\n\n    this.gl.clearDepth(1);\n  }\n\n  resetCam() {\n    if (this.moveCamera) {\n      this.camera.reset();\n    } else {\n      this.cube.resetCam();\n    }\n  }\n\n  private initDOMInputs() {\n    const moveCamCheck = (t: HTMLInputElement) => {\n      this.moveCamera = t.checked;\n      this.triggerRedraw();\n    };\n    handleInputById(\"moveCamera\", this.moveCamera, \"onclick\", targetListener(moveCamCheck));\n    handleButtonById(\"resetCam\", \"onclick\", () => this.resetCam());\n  }\n\n  private handleInputEvents() {\n    const canvas = this.gl.canvas;\n\n    const mousemoveRotateHandler = (e: PointerEvent) => {\n      if (this.pointerEvents.activeId != e.pointerId) {\n        return;\n      }\n      if (this.pointerEvents.cache.length == 1) {\n        const cap = (n: number) => Math.min(n, 2);\n        const [dx, dy] = [cap(e.clientX - this.mouse.x), cap(e.clientY - this.mouse.y)];\n        if (this.moveCamera) {\n          this.camera.mouseRotate(dx, dy);\n        } else {\n          this.cube.mouseRotate(dx, dy);\n        }\n      }\n      this.mouse = { x: e.clientX, y: e.clientY };\n    };\n\n    const mouseupRotateHandler = (e: PointerEvent) => {\n      if (this.pointerEvents.activeId != e.pointerId) {\n        return;\n      }\n      window.removeEventListener(\"pointermove\", mousemoveRotateHandler);\n      window.removeEventListener(\"pointerup\", mouseupRotateHandler);\n      window.removeEventListener(\"pointercancel\", mouseupRotateHandler);\n    };\n\n    const mousemoveBlockHandler = (e: PointerEvent) => {\n      if (this.pointerEvents.activeId != e.pointerId) {\n        return;\n      }\n      const { clientX: x, clientY: y } = e;\n      const { x: x0, y: y0 } = this.mouse0;\n      this.mouse = { x, y };\n      this.cube.handleMousemoveBlock(x, y, x0, y0);\n    };\n\n    const mouseupBlockHandler = (e: PointerEvent) => {\n      if (this.pointerEvents.activeId != e.pointerId) {\n        return;\n      }\n      this.cube.cleanupMousemoveBlock();\n      window.removeEventListener(\"pointermove\", mousemoveBlockHandler);\n      window.removeEventListener(\"pointerup\", mouseupBlockHandler);\n      window.removeEventListener(\"pointercancel\", mouseupBlockHandler);\n    };\n\n    const mousemoveZoomHandler = this.mousemoveZoomHandler.bind(this);\n\n    const mouseupZoomHandler = () => {\n      window.removeEventListener(\"pointermove\", mousemoveZoomHandler);\n      window.removeEventListener(\"pointerup\", mouseupZoomHandler);\n      window.removeEventListener(\"pointercancel\", mouseupZoomHandler);\n    };\n\n    canvas.addEventListener(\"pointerdown\", (e) => {\n      if (e.buttons != 1) {\n        return;\n      }\n      this.pointerEvents.cache.push(e);\n\n      if (this.pointerEvents.cache.length == 2 && !this.cube.manualBlockMoving) {\n        window.addEventListener(\"pointermove\", mousemoveZoomHandler);\n        window.addEventListener(\"pointerup\", mouseupZoomHandler);\n        window.addEventListener(\"pointercancel\", mouseupZoomHandler);\n      } else if (this.pointerEvents.cache.length == 1) {\n        this.pointerEvents.activeId = e.pointerId;\n        if (e.buttons == 1) {\n          this.mouse0 = { x: e.clientX, y: e.clientY };\n          this.mouse = { x: e.clientX, y: e.clientY };\n          const blockClicked = this.cube.findClickedBlock(e.clientX, e.clientY);\n\n          if (blockClicked) {\n            if (!this.cube.rotating) {\n              window.addEventListener(\"pointermove\", mousemoveBlockHandler);\n              window.addEventListener(\"pointerup\", mouseupBlockHandler);\n              window.addEventListener(\"pointercancel\", mouseupBlockHandler);\n            }\n          } else {\n            window.addEventListener(\"pointermove\", mousemoveRotateHandler);\n            window.addEventListener(\"pointerup\", mouseupRotateHandler);\n            window.addEventListener(\"pointercancel\", mouseupRotateHandler);\n          }\n        }\n      }\n    });\n\n    const pointerCleanup = (e: PointerEvent) => {\n      for (let i = 0; i < this.pointerEvents.cache.length; i++) {\n        if (this.pointerEvents.cache[i].pointerId == e.pointerId) {\n          this.pointerEvents.cache.splice(i, 1);\n          break;\n        }\n      }\n      if (this.pointerEvents.cache.length < 2) {\n        this.pointerEvents.prevDiff = -1;\n      }\n    };\n\n    window.addEventListener(\"pointerup\", pointerCleanup);\n    window.addEventListener(\"pointercancel\", pointerCleanup);\n  }\n\n  mousemoveZoomHandler(e: PointerEvent) {\n    const { cache, prevDiff } = this.pointerEvents;\n\n    // update the event\n    for (let i = 0; i < cache.length; i++) {\n      if (e.pointerId == cache[i].pointerId) {\n        cache[i] = e;\n        break;\n      }\n    }\n\n    if (cache.length == 2) {\n      let currDiff = Math.hypot(cache[0].clientX - cache[1].clientX, cache[0].clientY - cache[1].clientY);\n\n      if (prevDiff > 0) {\n        this.camera.handleZoom((prevDiff - currDiff) * 0.1);\n      }\n      this.pointerEvents.prevDiff = currDiff;\n    }\n  }\n\n  private initChangeWatcher() {\n    const getters = [\n      () => 0, // for dom ui\n      () => this.camera.watcher,\n    ];\n\n    return getters.map((getter, i) => ({ val: i ? getter() : 1, get: getter }));\n  }\n\n  triggerRedraw() {\n    this.changeWatcher[0].val = 1;\n  }\n\n  private changeWatch() {\n    for (let watcher of this.changeWatcher) {\n      if (watcher.val != watcher.get()) {\n        watcher.val = watcher.get();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  renderAll() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    // this.environment.drawEnvironmentMap();\n    this.cube.draw();\n  }\n\n  render(t: number) {\n    const dt = t - this.clock;\n    this.clock = t;\n\n    if (!this.ready) {\n      return;\n    }\n\n    this.cube.update(dt);\n\n    const play = this.changeWatch();\n\n    handleFpsDisplay(dt, play);\n\n    if (play) {\n      this.camera.update();\n\n      this.renderAll();\n    }\n  }\n}\n","import { CanvasHandler } from \"./gl\";\n\nimport { Camera } from \"./camera\";\nimport { Scene } from \"./scene\";\n\nfunction main() {\n  const canvasHandler = new CanvasHandler(\"glCanvas\");\n  const gl = canvasHandler.getGL();\n\n  if (!gl) {\n    console.error(\"no webgl2\");\n    return;\n  }\n\n  const camera = new Camera(gl);\n\n  const resize = () => {\n    canvasHandler.onWindowResize();\n    camera.resize();\n  };\n  window.addEventListener(\"resize\", resize);\n\n  const scene = new Scene(gl, camera);\n\n  const render = (now: number) => {\n    scene.render(now * 0.001);\n    requestAnimationFrame(render);\n  };\n\n  requestAnimationFrame(render);\n}\n\nwindow.onload = main;\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$a2fe6f3be4041bbd$export$7919a88d62c5dd21","gl","canvas","constructor","canvasId","document","getElementById","HTMLCanvasElement","this","getContext","alpha","antialias","alert","enable","CULL_FACE","$a2fe6f3be4041bbd$var$initGL","onWindowResize","getGL","getCanvas","width","window","innerWidth","height","innerHeight","devicePixelRatio","style","viewport","$78ae820aa9ececfa$export$fd293b15f47e270","$78ae820aa9ececfa$export$b67359430d3b1b2","Float32Array","Array","$78ae820aa9ececfa$export$5ada478c8a628231","Math","random","PI","$26675c4f95835ef1$export$185802fd694ee1f5","out","$26675c4f95835ef1$export$9cd59f9826255e47","a","$26675c4f95835ef1$export$784d13d8ee351f07","$26675c4f95835ef1$export$a82be99ed2a44a7d","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","$26675c4f95835ef1$export$adaa4cf7ef1b65be","$26675c4f95835ef1$export$f0954fd7d5368655","$26675c4f95835ef1$export$9cb09a71b7d66923","a01","a02","a03","a12","a13","a23","$26675c4f95835ef1$export$6897c284b6f9f4dc","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","$26675c4f95835ef1$export$33f3c024b4ae00a1","$26675c4f95835ef1$export$a04698f914c55ed9","$26675c4f95835ef1$export$2060d2db72cce88f","b","b0","b1","b2","b3","$26675c4f95835ef1$export$d73ee8ef04f5226a","v","x","y","z","$26675c4f95835ef1$export$dcdf75081b88279d","$26675c4f95835ef1$export$bb628a54ab399bc9","rad","axis","s","c","t","b12","b20","b21","b22","len","hypot","sin","cos","$26675c4f95835ef1$export$a59c8716592e09af","$26675c4f95835ef1$export$cf71e4d4ca4d1cfd","$26675c4f95835ef1$export$ea6eae3365de5b9c","$26675c4f95835ef1$export$bc9e79e74e9fddf6","$26675c4f95835ef1$export$832ca188ffb1955d","$26675c4f95835ef1$export$926fc125ff3c666c","$26675c4f95835ef1$export$dd47cc2f828c32ef","$26675c4f95835ef1$export$7dc997d67d2b7f33","$26675c4f95835ef1$export$ad5ddaedc8f405df","$26675c4f95835ef1$export$9545ac307f2a256b","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","$26675c4f95835ef1$export$ff497f2be31cc6a","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","$26675c4f95835ef1$export$202e99f82f7f0395","mat","$26675c4f95835ef1$export$71dc54d92bd04b57","$26675c4f95835ef1$export$df3937d3b537df0a","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","$26675c4f95835ef1$export$ddf9c55c9f2be172","sx","sy","sz","$26675c4f95835ef1$export$1def1f860edc4b1f","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","$26675c4f95835ef1$export$2ff2bbe382249af7","yx","zx","zy","$26675c4f95835ef1$export$89b5708c387cac6c","left","right","bottom","top","near","far","rl","tb","nf","$26675c4f95835ef1$export$4cf19729ec9a96b8","fovy","aspect","f","tan","Infinity","arguments","$26675c4f95835ef1$export$541149539f3a4684","$26675c4f95835ef1$export$294bba99a6af0c0c","$26675c4f95835ef1$export$58ae211c788e338f","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","$26675c4f95835ef1$export$c5f65ef3eb668f27","lr","bt","$26675c4f95835ef1$export$4f2167e613cfc87b","$26675c4f95835ef1$export$b1d31ea7b4d854e","$26675c4f95835ef1$export$d924e14fd6d9aa66","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","$26675c4f95835ef1$export$aa67782f4dc9e52c","target","$26675c4f95835ef1$export$42d51816ce590c93","$26675c4f95835ef1$export$326827e8268e9cdb","$26675c4f95835ef1$export$e16d8520af44a096","$26675c4f95835ef1$export$4e2d2ead65e5f7e3","$26675c4f95835ef1$export$c697bed75648cdb7","$26675c4f95835ef1$export$553579f63bdd7137","scale","$26675c4f95835ef1$export$f2599a5cf1109d8","$26675c4f95835ef1$export$e9bab7fafb253603","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","$26675c4f95835ef1$export$6e3a27864ab166fe","$26675c4f95835ef1$export$f93b5905241a7cca","$ab7f6dc0910e1ef7$export$185802fd694ee1f5","$ab7f6dc0910e1ef7$export$9cd59f9826255e47","$ab7f6dc0910e1ef7$export$f24224f1c91d8156","$ab7f6dc0910e1ef7$export$a82be99ed2a44a7d","$ab7f6dc0910e1ef7$export$784d13d8ee351f07","$ab7f6dc0910e1ef7$export$adaa4cf7ef1b65be","$ab7f6dc0910e1ef7$export$e16d8520af44a096","$ab7f6dc0910e1ef7$export$4e2d2ead65e5f7e3","$ab7f6dc0910e1ef7$export$2060d2db72cce88f","$ab7f6dc0910e1ef7$export$cd007d971a5a2143","$ab7f6dc0910e1ef7$export$803ce6b71a0a94b2","ceil","$ab7f6dc0910e1ef7$export$a3fe094919f356fd","floor","$ab7f6dc0910e1ef7$export$96ec731ed4dcb222","min","$ab7f6dc0910e1ef7$export$8960430cfd85939f","$ab7f6dc0910e1ef7$export$2077e0241d6afd3c","round","$ab7f6dc0910e1ef7$export$dcdf75081b88279d","$ab7f6dc0910e1ef7$export$19cedf1da84ba854","$ab7f6dc0910e1ef7$export$9f17032d917177de","$ab7f6dc0910e1ef7$export$88e6ebb4fe54f538","$ab7f6dc0910e1ef7$export$ab44e1323ffc8376","$ab7f6dc0910e1ef7$export$aef51622e549b8b0","$ab7f6dc0910e1ef7$export$70ae2c07e401031b","$ab7f6dc0910e1ef7$export$a3295358bff77e","$ab7f6dc0910e1ef7$export$94132a0e348806d4","$ab7f6dc0910e1ef7$export$bb646b20bb93d339","$ab7f6dc0910e1ef7$export$3a89f8d6f6bf6c9f","$ab7f6dc0910e1ef7$export$ae8865616f30561c","d","factorTimes2","factor1","factor2","factor3","factor4","$ab7f6dc0910e1ef7$export$b9c5f84610baddaf","inverseFactor","inverseFactorTimesTwo","$ab7f6dc0910e1ef7$export$4385e60b38654f68","r","zScale","$ab7f6dc0910e1ef7$export$5ffbd13800309d59","m","$ab7f6dc0910e1ef7$export$f0bfa0a0024626ee","$ab7f6dc0910e1ef7$export$c32adef9e939ce85","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","$ab7f6dc0910e1ef7$export$a59c8716592e09af","p","$ab7f6dc0910e1ef7$export$cf71e4d4ca4d1cfd","$ab7f6dc0910e1ef7$export$ea6eae3365de5b9c","$ab7f6dc0910e1ef7$export$944b09d2ad10b378","mag","cosine","acos","$ab7f6dc0910e1ef7$export$7f9972325ebfd559","$ab7f6dc0910e1ef7$export$42d51816ce590c93","$ab7f6dc0910e1ef7$export$f2599a5cf1109d8","$ab7f6dc0910e1ef7$export$e9bab7fafb253603","vec","$ab7f6dc0910e1ef7$export$f93b5905241a7cca","$ab7f6dc0910e1ef7$export$6e3a27864ab166fe","$ab7f6dc0910e1ef7$export$159d9494db57879b","$ab7f6dc0910e1ef7$export$6c4a311cc157c764","$ab7f6dc0910e1ef7$export$2422cd6c492a8b3a","$ab7f6dc0910e1ef7$export$fc1400facf92c78","$ab7f6dc0910e1ef7$export$99d8dd3f32a3435","$ab7f6dc0910e1ef7$export$4b80e395e36b5a56","stride","offset","count","fn","arg","l","$170c8f98f34328e6$export$1b08ea3b454d3a08","dp","Number","EPSILON","pow","$170c8f98f34328e6$export$29e4e862bebba87f","deg","$170c8f98f34328e6$export$61ddd819c68acdd","$170c8f98f34328e6$export$26b4ec51fc28b078","val","$170c8f98f34328e6$export$7d15b64cf5a3a4c4","$170c8f98f34328e6$export$a85cdcada2f6e6d0","$170c8f98f34328e6$export$7a9a2db5a00727d4","lambda","exp","log","n","$170c8f98f34328e6$export$433c9088406ced48","array","key","inPlace","sort","$170c8f98f34328e6$export$97db5808d8f88186","$170c8f98f34328e6$export$70c54cae73c4fc1a","arr","filter","indexOf","$170c8f98f34328e6$export$e41fa17666fd7a22","arr1","arr2","includes","$170c8f98f34328e6$export$dda5fc2d183b5cbd","start","from","_","$170c8f98f34328e6$export$8901015135f2fb22","map","$170c8f98f34328e6$export$83595b84fc78b9b4","el","$170c8f98f34328e6$export$79f78c056e9c9a20","HTMLInputElement","$170c8f98f34328e6$export$15ec3e7a71ec9d19","listener","e","$170c8f98f34328e6$export$c3c0e25079ecdedb","type","checked","value","console","warn","$170c8f98f34328e6$export$6d6148812304e682","HTMLButtonElement","HTMLDivElement","$170c8f98f34328e6$export$2cefde2c51b137a7","name","querySelectorAll","forEach","onclick","$170c8f98f34328e6$export$c4d91edfa1ec13f9","dt","play","fpsTxt","innerText","toString","classList","remove","add","$170c8f98f34328e6$export$f8f1787e93ef110c","$170c8f98f34328e6$export$d1ee5634cee63950","vertices","indices","i0","i1","i2","$170c8f98f34328e6$export$6ccaa1dfb375d226","triangle","transform","$ab7f6dc0910e1ef7$exports","transformMat4","create","$170c8f98f34328e6$export$f406cc557a973932","row1","row2","subdivisions","positions","splitEdges","zipped","newPositions","newSplitEdges","subsArr","isArray","push","lerp","$170c8f98f34328e6$export$44e0e3817715f56d","ring","rev","flat","$170c8f98f34328e6$export$5f9eb821a89ee33","$170c8f98f34328e6$export$e5c1d452096043a2","sector","circle","$170c8f98f34328e6$export$162f2be3621f0966","p1","p2","side","subtract","dot","$170c8f98f34328e6$var$raySphere","$170c8f98f34328e6$export$96122e476ce48f6e","A","B","C","dir","e1","e2","h","u","cross","$170c8f98f34328e6$export$d8f1c31431496aba","pDir","normal","denom","$170c8f98f34328e6$export$525c295f99c9eaa8","normalize","$170c8f98f34328e6$export$e58aefa1f1b2fb96","shallowNormals","normal1","normal2","rotAxis","t1","t2","angle","planeCamDirAdjust","intersection","intersectionDir","adjusted","$26675c4f95835ef1$exports","fromRotation","$170c8f98f34328e6$export$c07234257a03d5e9","xa","$170c8f98f34328e6$export$9b360e4d03e9c20b","g","slice","$170c8f98f34328e6$var$rgbToHex","$170c8f98f34328e6$export$5ab6d5f21e6e08d6","hex","result","exec","parseInt","$170c8f98f34328e6$var$hexToRgb","$0337a66992f044ae$export$79f141de891a5fed","zNear","zFar","projectionMatrix","viewMatrix","distance","angleX","angleY","position","resize","handleWheelZoom","clientWidth","clientHeight","update","rotateX","rotateY","perspective","lookAt","mouseRotate","dx","dy","reset","watcher","join","clipXY","mouseX","mouseY","h2","getPickedVector","pf","PV","multiply","invVP","invert","handleZoom","delta","addEventListener","preventDefault","deltaY","$2d92def487be2d6b$export$59a6ab026766925f","program","uniformLocations","attribLocations","vsSource","fsSource","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","storeUniformAndAttribLocations","source","error","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","shaderProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","ACTIVE_UNIFORMS","info","getActiveUniform","loc","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","lookupAttribLocation","undefined","lookupAttribLocationStrict","attribLocation","lookupUniformLocation","bind","camera","useProgram","enableVertexAttribArray","setUniforms","setUniform","uniform","FLOAT","uniform1f","FLOAT_VEC3","uniform3fv","FLOAT_VEC4","uniform4fv","INT","uniform1i","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","$2d92def487be2d6b$export$9bc18e00a7596ecd","super","$parcel$interopDefault","vertexPosition","vertexColor","vertexNormal","$2d92def487be2d6b$export$467fb2827ef5dc40","$879d8210211d0bfa$export$185802fd694ee1f5","$879d8210211d0bfa$export$b4ad467060d346fe","$879d8210211d0bfa$export$9cd59f9826255e47","$879d8210211d0bfa$export$784d13d8ee351f07","$879d8210211d0bfa$export$a82be99ed2a44a7d","$879d8210211d0bfa$export$adaa4cf7ef1b65be","$879d8210211d0bfa$export$f0954fd7d5368655","$879d8210211d0bfa$export$9cb09a71b7d66923","$879d8210211d0bfa$export$6897c284b6f9f4dc","$879d8210211d0bfa$export$33f3c024b4ae00a1","$879d8210211d0bfa$export$a04698f914c55ed9","$879d8210211d0bfa$export$2060d2db72cce88f","$879d8210211d0bfa$export$d73ee8ef04f5226a","$879d8210211d0bfa$export$bb628a54ab399bc9","$879d8210211d0bfa$export$dcdf75081b88279d","$879d8210211d0bfa$export$bc9e79e74e9fddf6","$879d8210211d0bfa$export$926fc125ff3c666c","$879d8210211d0bfa$export$832ca188ffb1955d","$879d8210211d0bfa$export$68f5977575fae9bf","$879d8210211d0bfa$export$2ff2bbe382249af7","$879d8210211d0bfa$export$966b25ab6dc1b1f9","$879d8210211d0bfa$export$b74061472fe7c07","$879d8210211d0bfa$export$42d51816ce590c93","$879d8210211d0bfa$export$326827e8268e9cdb","$879d8210211d0bfa$export$e16d8520af44a096","$879d8210211d0bfa$export$4e2d2ead65e5f7e3","$879d8210211d0bfa$export$c697bed75648cdb7","$879d8210211d0bfa$export$553579f63bdd7137","$879d8210211d0bfa$export$f2599a5cf1109d8","$879d8210211d0bfa$export$e9bab7fafb253603","$879d8210211d0bfa$export$6e3a27864ab166fe","$879d8210211d0bfa$export$f93b5905241a7cca","$4ce98914b6676340$export$185802fd694ee1f5","$4ce98914b6676340$export$9cd59f9826255e47","$4ce98914b6676340$export$a82be99ed2a44a7d","$4ce98914b6676340$export$784d13d8ee351f07","$4ce98914b6676340$export$adaa4cf7ef1b65be","$4ce98914b6676340$export$e16d8520af44a096","$4ce98914b6676340$export$4e2d2ead65e5f7e3","$4ce98914b6676340$export$2060d2db72cce88f","$4ce98914b6676340$export$cd007d971a5a2143","$4ce98914b6676340$export$803ce6b71a0a94b2","$4ce98914b6676340$export$a3fe094919f356fd","$4ce98914b6676340$export$96ec731ed4dcb222","$4ce98914b6676340$export$8960430cfd85939f","$4ce98914b6676340$export$2077e0241d6afd3c","$4ce98914b6676340$export$dcdf75081b88279d","$4ce98914b6676340$export$19cedf1da84ba854","$4ce98914b6676340$export$9f17032d917177de","$4ce98914b6676340$export$88e6ebb4fe54f538","$4ce98914b6676340$export$f24224f1c91d8156","$4ce98914b6676340$export$ab44e1323ffc8376","$4ce98914b6676340$export$aef51622e549b8b0","$4ce98914b6676340$export$70ae2c07e401031b","$4ce98914b6676340$export$a3295358bff77e","$4ce98914b6676340$export$94132a0e348806d4","$4ce98914b6676340$export$bb646b20bb93d339","$4ce98914b6676340$export$3a89f8d6f6bf6c9f","$4ce98914b6676340$export$4385e60b38654f68","$4ce98914b6676340$export$b732428d73874bfc","$4ce98914b6676340$export$3e55bc4b3707dfd3","$4ce98914b6676340$export$f0bfa0a0024626ee","$4ce98914b6676340$export$5ffbd13800309d59","$4ce98914b6676340$export$bb628a54ab399bc9","p0","sinC","cosC","$4ce98914b6676340$export$944b09d2ad10b378","$4ce98914b6676340$export$7f9972325ebfd559","$4ce98914b6676340$export$42d51816ce590c93","$4ce98914b6676340$export$f2599a5cf1109d8","$4ce98914b6676340$export$e9bab7fafb253603","$4ce98914b6676340$export$fc1400facf92c78","$4ce98914b6676340$export$f93b5905241a7cca","$4ce98914b6676340$export$6e3a27864ab166fe","$4ce98914b6676340$export$159d9494db57879b","$4ce98914b6676340$export$6c4a311cc157c764","$4ce98914b6676340$export$2422cd6c492a8b3a","$4ce98914b6676340$export$99d8dd3f32a3435","$4ce98914b6676340$export$4b80e395e36b5a56","async","$af4e5437d0970a50$export$9cf15eac3101f21c","buffer","header","pos","d8","format","match","String","fromCharCode","onerror","rez","split","reverse","img","Uint8Array","ipos","j","scanline","rgbe","ptr","ptr_end","buf","imageFloatBuffer","byteLength","$af4e5437d0970a50$var$_rgbeToFloat","dataFloat","$169e2a49aff3b819$exports","$7bf096c42d41dff1$var$IBLShader","$7bf096c42d41dff1$var$PanoShader","$7bf096c42d41dff1$export$c2b1cc8be831b716","textureSize","ggxSampleCount","lambertianSampleCount","sheenSamplCount","lodBias","lowestMipLevel","lutResolution","mipmapCount","lambertianTextureID","ggxTextureID","sheenTextureID","ggxLutTextureID","charlieLutTextureID","inputTextureID","cubemapTextureID","framebuffer","iblShader","panoShader","loadTextureHDR","image","texture","createTexture","bindTexture","TEXTURE_2D","data","internalFormat","RGB32F","RGB","RGBA32F","RGBA","numPixels","src","dst","Image","UNSIGNED_BYTE","texImage2D","texParameteri","TEXTURE_WRAP_S","MIRRORED_REPEAT","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","use8bit","RGBA8","createCubemapTexture","withMipmaps","targetTexture","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","LINEAR_MIPMAP_LINEAR","CLAMP_TO_EDGE","createLutTexture","init","panoramaImage","getExtension","createFramebuffer","generateMipmap","mipmapLevels","log2","filterAll","panoramaToCubeMap","cubeMapToLambertian","cubeMapToGGX","cubeMapToSheen","sampleGGXLut","sampleCharlieLut","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","activeTexture","TEXTURE0","location","drawArrays","TRIANGLES","applyFilter","distribution","roughness","targetMipLevel","sampleCount","currentTextureSize","currentMipLevel","sampleLut","$d413aa302aad26f7$exports","URL","resolve","import","meta","url","$003fc822d8414941$exports","$c794911e58b8ba2c$exports","$7afbd23c60d3abf0$var$getSampler","magFilter","minFilter","wrapS","wrapT","$7afbd23c60d3abf0$var$getImage","$7afbd23c60d3abf0$var$loadHTMLImage","Promise","reject","crossOrigin","$7afbd23c60d3abf0$var$getTexture","sampler","$7afbd23c60d3abf0$export$e9a269813a6315a4","samplers","images","textures","$7afbd23c60d3abf0$export$5bd2d8301463ee24","diffuseEnvMap","specularEnvMap","sheenEnvMap","lut","sheenLUT","$7afbd23c60d3abf0$export$b3fbd49acfb2daa2","gltf","textureIdx","texSlot","gltfTex","glTexture","$7afbd23c60d3abf0$export$72f29f9bbfd1a935","resources","REPEAT","imagePromises","all","$7afbd23c60d3abf0$var$loadHTMLImages","samplerObj","$7afbd23c60d3abf0$var$setSampler","$7afbd23c60d3abf0$export$b71a30edd1065a96","hdrFileName","response","fetch","arrayBuffer","imageHDR","environment","environmentFiltering","mipCount","$7afbd23c60d3abf0$var$_loadEnvironmentFromPanorama","$927d5ebf37f8e718$var$min2phase","PARTIAL_INIT_LEVEL","Search","move","moveSol","nodeUD","valid1","allowShorter","cc","CubieCube","urfCubieCube","urfCoordCube","phase1Cubie","preMoveCubes","preMoves","preMoveLen","maxPreMoves","isRec","CoordCube","N_PERM_SYM","N_SLICE","N_COMB","Cnk","fact","move2str","ud2std","std2ud","ckmv2bit","urfMove","ix","jx","setVal","val0","isEdge","getVal","setPruning","table","index","getPruning","getPruningMax","maxValue","hasZero","ESym2CSym","idx","getPermSymInv","sym","isCorner","idxi","PermInvEdgeSym","SymMult","ca","ea","setNPerm","getNPerm","setNPermFull","getNPermFull","getComb","mask","idxC","setComb","end","fill","getNParity","EdgeMult","prod","ed","CornMult","corn","ori","CornMultFull","oriA","oriB","CornConjugate","sinv","SymCube","SymMultInv","EdgeConjugate","prototype","initCoord","cperm","twist","eperm","flip","setTwist","setFlip","isEqual","parity","getFlip","getFlipSym","FlipR2S","twst","getTwist","getTwistSym","TwistR2S","setCPerm","getCPerm","getCPermSym","EPermR2S","setEPerm","getEPerm","getEPermSym","getUDSlice","setUDSlice","getMPerm","setMPerm","getCComb","setCComb","URFConjugate","temps","urf2","urf1","cornerFacelet","edgeFacelet","tsym","fsym","prun","twistc","flipc","toFaceCube","cFacelet","eFacelet","ts","invFrom","edge","fromFacelet","facelet","col1","col2","centers","set","node","calcPruning","isPhase1","UDSliceTwistPrunMax","UDSliceTwistPrun","UDSliceConj","UDSliceFlipPrunMax","UDSliceFlipPrun","TwistFlipPrunMax","TwistFlipPrun","FlipS2RF","setWithPrun","depth","pc","doMovePrun","UDSliceMove","FlipMove","Sym8Move","TwistMove","doMovePrunConj","SymMove","solution","facelets","maxDepth","probeMax","probeMin","verbose","initPrunTables","check","verify","sol","probe","initSearch","search","conjMask","tmp","next","sum","edgeMask","cornMask","phase1PreMoves","maxl","lm","depth1","length1","phase1","skipMoves","moveCube","urfIdx","initPhase2Pre","ret","initPhase2","phase2Cubie","p2corn","p2csym","p2edge","p2esym","depth2","p2mid","p2edgei","p2corni","MCPermPrunMax","MCPermPrun","MPermConj","EPermCCombPPrunMax","EPermCCombPPrun","CCombPConj","Perm2CombP","maxDep2","phase2","appendSolMove","solutionToString","power","curMove","axisCur","axisLast","pop","esym","csym","mid","moveMask","midx","MPermMove","cornx","CPermMove","SymMoveUD","csymx","edgex","EPermMove","esymx","edgei","corni","sb","urf","FlipS2R","TwistS2R","EPermS2R","SymStateFlip","SymStateTwist","SymStatePerm","CCombPMove","InitPrunProgress","initRawSymPrun","PrunTable","N_RAW","N_SYM","RawMove","RawConj","SymState","PrunFlag","SYM_SHIFT","SYM_E2C_MAGIC","INV_DEPTH","MAX_DEPTH","MIN_DEPTH","SYM_MASK","ISTFP","N_SIZE","N_MOVES","NEXT_AXIS_MAGIC","SEARCH_DEPTH","inv","select","selArrMask","xorVal","raw","rawx","symx","symState","idxx","doInitPrunTables","targetProgress","f2","u4","lr2","outloop","initSym2Raw","Sym2Raw","Raw2Sym","coord","setFunc","getFunc","sym_inc","conjFunc","call","initSymMoveTable","moveTable","SymS2R","multFunc","initBasic","solve","randomCube","ep","cp","eo","co","fromScramble","c1","c2","initFull","$c6af5eb90afb565f$export$2865df1f26e73f8e","$927d5ebf37f8e718$exports","toUpperCase","m1","R","U","F","L","D","m2","$27952a4a81b283d3$export$a143d493d941bafc","numComponents","componentType","createBuffer","write","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","attrLocation","vertexAttribPointer","$27952a4a81b283d3$export$2b0068d0362d6069","indexCount","ELEMENT_ARRAY_BUFFER","Uint16Array","$0cce8962f21121f6$var$calculateNormals","override","normals","$0cce8962f21121f6$export$2db6c17465f94a2","colors","normalsOverride","draw","drawElements","UNSIGNED_SHORT","$4e9b28fb664f02b4$export$22263883612e6672","faceCover","faceR","faceEdgeR","faceRingW","faceExtrude","faceColor","faceMetallic","faceRoughness","$4e9b28fb664f02b4$export$fbaf63fbd412f8f2","spread","blockR","bevelW","blockType","blockColor","blockMetallic","blockRoughness","addStickers","wearTear","$4e9b28fb664f02b4$export$9265403940be6b4","$c12ebc646d147013$export$f5cd3231cccb20e7","$c12ebc646d147013$var$roundedSquarePositions","rPercent","noCenter","subEdges","isCircle","isSquare","rotate90","quadrantSubs","rotateZ","quadrant0","quadrant1","quadrant2","quadrant3","unshift","corners","cornerTranslate","allP","quadrant","quadrants","currLast","nextFirst","$c12ebc646d147013$export$15ffbcb6a54f4354","wPercent","extrude","edgeR","roundEdge","zEx","bevelW2","subs","innerSide","upperPosOuter0","faceIndices","faceInfo","upperPosInner0","posLen","$c12ebc646d147013$export$c3f5ff0fa36bf988","faceInfoExpanded","len0","vars","iSide","inner","upperPos","lowerPos","ar","iF","pos1s","upperPos1","upperPos2","upperPos3","allPositions","allIndices","allInfo","qLen","getIndices","batch","indicesBatches","nextBatchPoints","nextBatch","edges","indicesBatch","curr","newPoints","curr0","next0","next1","newPoints0","newPoints1","extraPositions0","midEdgePoints0","extraPositions1","midEdgePoints1","face","face0b","face2b","extraPositions","midEdgePoints","triangles","midRows","points","pointsList","$c12ebc646d147013$var$subdivideInnerFace","$c12ebc646d147013$export$8ebcf7445188f5f3","$c12ebc646d147013$var$edgeSplitComponentsToId","$c12ebc646d147013$var$edgeSplitIdToComponents","$c12ebc646d147013$export$327143fb459fe653","rounded","sphere","A0","B0","C0","sub","esi","esc","component1","component2","c0","edgeIndices","storeEdgeP","edgeI","rotate90Pos","rotate180Pos","rotate270Pos","positionsTransformed","splitEdgesTransformed","addTransformedPositions","getTopPos","bot","getBottomPos","top1","top2","top3","bot1","bot2","bot3","addTransformedSplitEdges","transformed","rotate180","rotate270","comps","$c12ebc646d147013$var$_addTransformedSplitEdges","midpoints","cacheMidpoints","_splitEdge","keyOrig","splitEdge","cacheVal","cachePoint","orig","subdivideTriangle","iA","iB","iC","edgeA","edgeB","rows","midPs","doSubdivide","centroid","iM","getMidSplitEdges","allowed","centroidSplitEdges","iD","iE","getIndex","allSplitEdges","edge0Points_","edge1Points_","edge2Points_","edge0PointsR","edge1PointsR","edge2PointsR","tops","bots","sides","faces","subN","turn","prevTurn","getBatch","top0","bot0","verticalEdgePoints1","verticalEdgePoints2","horizEdgeTopPoints1","horizEdgeTopPoints2","horizEdgeBotPoints1","horizEdgeBotPoints2","subdivides","extraSplitEdges","edge0","edge1","edgeFaces","faces2","t0","$c12ebc646d147013$var$getFlatFaceSplitEdges","edge_ny","edge_nx","edge_py","edge_px","ny","nx","py","px","cmp","row","col","checks","k","$c12ebc646d147013$var$assertAdjacentOnly","$c12ebc646d147013$export$9c3454f9faf5602c","bucketsInfo","ws","other","buckets","opp","opp2","$c12ebc646d147013$var$getSplitCube2","$c12ebc646d147013$var$getSplitCube3","$c12ebc646d147013$var$getSplitCube6","bucketsMap","bucketInfo","positionsCopy","bucketedNewIndices","edgeBucket","bI","ordering","indexMap","fromEntries","oldI","newI","findNewIndex","$c12ebc646d147013$var$_bevelActions","blockPos","$c12ebc646d147013$export$89ad49c29641098c","bR","diag","actions","res","fromValues","condition","iY","iZ","th","rotate","sign","hh","$c12ebc646d147013$export$8989c5bb2a9904ae","$b68c510535372e96$var$FaceId","FaceId","$b68c510535372e96$var$FACES","$b68c510535372e96$var$Axis","Axis","$b68c510535372e96$var$Level","Level","$b68c510535372e96$var$Dir","Dir","$b68c510535372e96$var$getAxisVector","$b68c510535372e96$var$getAxisAndSide","v2","reduce","$b68c510535372e96$var$getFaceId","$b68c510535372e96$var$orientFace","rotateFn","$b68c510535372e96$var$COLORS_CLASSIC","$b68c510535372e96$var$COLORS_BRIGHT","$b68c510535372e96$var$COLORS_NEUTRAL","$b68c510535372e96$var$COLORS_PASTEL","$b68c510535372e96$var$COLOR_SCHEMES","classic","bright","neutral","pastel","$b68c510535372e96$var$getFaceColors","faceId","vertexCount","scheme","color","$b68c510535372e96$var$COLORS","bl","st","si","go","rg","$b68c510535372e96$var$COLORS_PROC","colorful","$b68c510535372e96$var$FaceBounds","geometry","_geometry","geo","root","$b68c510535372e96$var$Face","block","initGeo","initPosition","faceColorCustom6","config","faceGeoData","vertices0","origPosition","updateGeo","translate","displayPosition","updatePosition","$b68c510535372e96$var$Block","_boundingBox","faceRotation","$879d8210211d0bfa$exports","boundingBox","createFaces","blockColor2","blockColorCustom6","stickerless","v0","blockGeoData","vCount","bVertex","rotateUpdatePosition","turns","rotatedPos","$170c8f98f34328e6$export$f2750468fdcd577d","amt","isFinal","axisV","rotation","_rotate","entity","blockColorCustom","stickered","baseColor","procColor","blockAO","drawFaces","faceColorCustom","useVColor","hasOwnProperty","$b68c510535372e96$export$46923e9bdc02b341","speed","solveSpeed","scrambleSpeed","scrambleMoves","rotationQueue","invTransform","invTransform3","animAlpha","solving","scrambling","showBounding","_blockGeoData","_faceGeoData","manualBlockMoving","moveBlockInfo","movedBlockInfo","clickedBlockInfo","blockRays","_spread","preset","userPresets","presetToDelete","faceCoverAdj","blockSide","cubeR","boundingPlanes","rotating","scene","activeShader","then","materialsLoaded","setBG","updateBoundingBox","updateFaceGeo","updateBlockGeo","blocks","createBlocks","loadUserPresets","initDOMInputs","initialPosition","loadConfigFromPreset","presets","localStorage","getItem","setItem","cols","generalUIUpdate","deletePreset","stringify","updatePresetSelectUI","saveConfigToPreset","bootstrap","Collapse","hide","custom6ToStrArr","nameInp","placeholder","bounds","handleSaverUI","randName","replace","handleSaverUIText","overriding","innerHTML","htmlStr","htmlStr2","activeOption","HTMLAnchorElement","updateDOMVal","updater","updaterStr","handler","triggerRedraw","scramble","colsProc","colSchemes","bOptions1","bOptions2","fOptions","randCol","randCol6","faceOptions","$b68c510535372e96$var$randomizer","code","charCodeAt","$b68c510535372e96$var$sanitizeInput","envIntensity","intensity","envIntensityHandler","envColorHandler","getColor6html","ty","colorCustom","colorCustom6","updateBlocks","updateFaces","edited","updateGeoBlocks","updateGeoFaces","uiToggleBlockColorRadios","uiToggleStickerOptions","endsWith","show","active","inactive","queueRotation","level","elapsedA","elapsedT","finalTurns","facesToFacelet","faceletArr","worldAS","transformMat3","idMultiply","updateButtonCount","axes","levels","dirs","ccw","cw","stopping","resetCam","runRotation","fullT","maxA","targetA","rotateSlice","shift","axisId","displayTransform","inverseDisplayTransform","findClickedBlock","closestDist","clickedAxis","clickedSide","closestBlock","pNear","pFar","cubeDist","clickedPlane","bBox","dist","handleClickedBlock","handleMousemoveBlock","handleManualBlockMove","$4ce98914b6676340$exports","handleManualSwipe","mouseV","faceAxisIdx","rotAxisOptions","minAxisIdx","minAxis","moveNormal","moveCenter","cameraDir","adjustedNormal","isObtuse","acute","getNormal","prev","prevDir","$170c8f98f34328e6$export$469c74ebe38c5076","blockDirIntersection","blockDir","currAngle","newDir","blockMoveAxisAndSide","diff","movingDir","axis2","side2","blockDir1","blockDir2","getCurrentSliceMoveDetails","find","transformedP","transformedDir","cleanupMousemoveBlock","remA","remElapsedA","drawBlocks","drawBounds","bound","fromMat4","applyMaterialTextures","texSlotOffset","lookup","applyEnvironmentMap","$41c08be56496a647$exports","$fa5ad5b67027a1fc$export$786a07b373980700","envColor","envRotation","envResources","initGL","environmentLoaded","adjust","log10","drawEnvironmentMap","disable","DEPTH_TEST","$99a71f8f9d26c0eb$export$877b7ebc0fcd91ef","$ced7f85a91410604$export$38af1803e3442a7f","clock","pointerEvents","activeId","cache","prevDiff","mouse0","mouse","moveCamera","ready","cubeShader","pbrShader","changeWatcher","initChangeWatcher","handleInputEvents","cube","depthFunc","LEQUAL","cullFace","BACK","clearDepth","mousemoveRotateHandler","pointerId","cap","clientX","clientY","mouseupRotateHandler","removeEventListener","mousemoveBlockHandler","mouseupBlockHandler","mousemoveZoomHandler","mouseupZoomHandler","buttons","pointerCleanup","splice","currDiff","getter","get","changeWatch","renderAll","render","onload","canvasHandler","now","requestAnimationFrame"],"version":3,"file":"index.5b2a2cc5.js.map"}